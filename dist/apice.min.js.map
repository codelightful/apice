{"version":3,"file":"apice.min.js","sources":["../src/util.mjs","../src/cookies.mjs","../src/logging.mjs","../src/events.mjs","../src/element.mjs","../src/random.mjs","../src/errorHandler.mjs","../src/http.mjs","../src/controller.mjs","../src/fragment.mjs","../src/router.mjs","../src/components/toast.mjs","../src/components/form.mjs","../src/components/box.mjs","../src/components/mask.mjs","../src/components/dialog.mjs","../src/components/ui.mjs","../src/version.mjs","../src/apice.mjs"],"sourcesContent":["// NOTE: this module is a low level module and should not import any other module\r\nconst $module = {};\r\n\r\n//-----------------------------------------------------------------------------\r\n// OBJECT EVALUATION\r\n//-----------------------------------------------------------------------------\r\n/**\r\n * Allows to determine if a specific object instance is a promise or not\r\n * @param target Object instance to evaluate\r\n * @returns Boolean value to determine if the object instance is a promise or not\r\n */\r\n$module.isPromise = function (target) {\r\n\treturn (target instanceof Promise);\r\n};\r\n\r\n//-----------------------------------------------------------------------------\r\n// STRING MANIPULATION\r\n//-----------------------------------------------------------------------------\r\n/** Trims a string by removing leading and trailing white spaces  */\r\n$module.trim = function (text) {\r\n\tif(!text) {\r\n\t\treturn '';\r\n\t}\r\n\treturn text.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n};\r\n\r\n// regular expression to extract the message placeholders\r\nconst holderRegex = /\\{(\\d+)\\}/g;\r\n\r\n/**\r\n * Replaces all the placeholders in a string\r\n * @param input String containing the placeholders to replace. Each placeholder will be identified\r\n * \t\t\twith a numeric index (starting at zero) between curly brackets.\r\n * @param values Array with the values to replace the placeholders.\r\n * @returns Object containing the output text and the unbinded values. It has the shape: { output: 'string', unbind: array };\r\n */\r\n$module.placeholders = function (input, ...values) {\r\n\tconst result = { output: input, unbind: values };\r\n\tif (typeof (input) !== 'string' || !values || values.length === 0) {\r\n\t\treturn result;\r\n\t}\r\n\tconst indexControl = {};\r\n\tconst holders = input.matchAll(holderRegex);\r\n\tfor (let holder of holders) {\r\n\t\tconst source = holder[1];\r\n\t\tif (!source || indexControl[source]) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tindexControl[source] = true;\r\n\t\tconst regex = new RegExp('\\\\{' + source + '\\\\}', 'g');\r\n\t\tconst value = values[source];\r\n\t\tif(typeof(value) === 'undefined') {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tresult.unbind[source] = null;\r\n\t\tresult.output = result.output.replace(regex, value);\r\n\t}\r\n\t// removes the elements that have been used\r\n\tresult.unbind = result.unbind.filter((element) => {\r\n\t\treturn element !== undefined && element !== null;\r\n\t});\r\n\treturn result;\r\n};\r\n\r\nexport default $module;","import util from './util.mjs';\r\n\r\nconst $module = {};\r\n\r\n/**\r\n * Sets a specific cookie\r\n * @param name Name of the cookie to set\r\n * @param value Value to set\r\n * @param timespan Timspan to maintain the cookie in seconds\r\n */\r\n$module.set = function (name, value, timespan) {\r\n\tif (!name) {\r\n\t\tconsole.warn('Unable to set a cookie without name');\r\n\t\treturn;\r\n\t} \r\n\tif (typeof (timespan) !== 'number') {\r\n\t\tconsole.warn('Invalid timespan has been provided. Setting the default value');\r\n\t\ttimespan = 3600;\r\n\t}\r\n\tconst expireDate = new Date();\r\n\texpireDate.setTime(expireDate.getTime() + (timespan * 1000));\r\n\tvar cookie = util.trim(name) + '=' + value + '; expires=' + expireDate.toGMTString() + '; path=/';\r\n\tdocument.cookie = cookie;\r\n};\r\n\r\n/**\r\n * Obtains the value from a cookie\r\n * @param name Name of the cookie to obtain\r\n * @returns Cookie value or null if it is not defined\r\n */\r\n$module.get = function (name) {\r\n\tif (!name) {\r\n\t\treturn null;\r\n\t}\r\n\tconst cookieArray = document.cookie.split(';');\r\n\tfor (var idx = 0; idx < cookieArray.length; idx++) {\r\n\t\tconst rawCookie = util.trim(cookieArray[idx]);\r\n\t\tif (!rawCookie) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tconst cookieParts = rawCookie.split('=');\r\n\t\tif (util.trim(cookieParts[0]) !== name) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\treturn cookieParts[1];\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nexport default $module;","/*\r\nApice Logger Module\r\nv1.0.0\r\n*/\r\nimport util from './util.mjs';\r\nimport cookies from './cookies.mjs';\r\n\r\nconst $module = {};\r\nconst $scope = {};\r\n\r\n// contains all the loggers registered\r\n$scope.loggers = {};\r\n// dictionary with all the defined log levels\r\n$scope.levels = {\r\n\tfatal: { value: 10, color: '#ff4444', label: 'FATAL' },\r\n\terror: { value: 20, color: '#ff4444', label: 'ERROR' },\r\n\twarn: { value: 30, color: '#ff8800', label: 'WARN' },\r\n\tinfo: { value: 40, color: '#0099cc', label: 'INFO' },\r\n\tdebug: { value: 50, color: '#3E4551', label: 'DEBUG' },\r\n\ttrace: { value: 60, color: '#3E4551', label: 'TRACE' }\r\n};\r\n\r\nvar levelCookie = cookies.get('apice.logger.level');\r\nif (!levelCookie) {\r\n\t$scope.globalLevel = $scope.levels.warn;\r\n} else {\r\n\t$scope.globalLevel = $scope.levels[levelCookie];\r\n\tif (!$scope.globalLevel) {\r\n\t\t$scope.globalLevel = $scope.levels.warn;\r\n\t}\r\n}\r\n\r\n/** Represents a specific logger */\r\nclass Logger {\r\n\t// holds the name or identigier of the current logger\r\n\t#name;\r\n\t// log level defined for the logger instance\r\n\t#level;\r\n\r\n\tconstructor(name) {\r\n\t\tthis.#name = name;\r\n\t\tvar levelCookie = cookies.get('apice.logger.[' + name + '].level');\r\n\t\tif (!levelCookie) {\r\n\t\t\tthis.#level = $scope.globalLevel;\r\n\t\t} else {\r\n\t\t\tthis.#level = $scope.levels[levelCookie];\r\n\t\t\tif (!this.#level) {\r\n\t\t\t\tthis.#level = $scope.globalLevel;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/** Allows to obtain the logger name */\r\n\tget name() {\r\n\t\treturn this.#name;\r\n\t}\r\n\r\n\t/** Obtains or sets the log level defined for the logger instance */\r\n\tlevel() {\r\n\t\tif (arguments.length !== 0) {\r\n\t\t\tvar levelInfo = $scope.levels[arguments[0]];\r\n\t\t\tif (!levelInfo) {\r\n\t\t\t\tthrow new Error('apice.logger.invalid_level[' + arguments[0] + ']');\r\n\t\t\t}\r\n\t\t\tthis.#level = levelInfo;\r\n\t\t\tcookies.set('apice.logger.[' + this.#name + '].level', arguments[0], 1800);\r\n\t\t}\r\n\t\treturn this.#level.label;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal implementation that writes a log entry\r\n\t * @param level Level of the log message to print\r\n\t * @param message Message to print into the log entry. To include placerholders set the index of the element\r\n\t *          (starting with 0) between curvy brackets. Example: \"the values is {0}\"\r\n\t * @param values Values to replace the placeholders plus any element to include as details. Any element that\r\n\t *          does not match the placeholders will be included as log details\r\n\t */\r\n\t#writeLog(level, message, ...values) {\r\n\t\tif (this.#level.value >= level.value) {\r\n\t\t\tif (typeof (message) !== 'string') {\r\n\t\t\t\tmessage = JSON.stringify(message);\r\n\t\t\t} else if (values && values.length > 0) {\r\n\t\t\t\tconst replaced = util.placeholders(message, ...values);\r\n\t\t\t\tmessage = replaced.output;\r\n\t\t\t\tvalues = replaced.unbind;\r\n\t\t\t}\r\n\t\t\tconsole.log('%c[' + level.label + '][' + this.#name + ']: ' + message, ...['color: ' + level.color, ...values]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Prints a FATAL log message\r\n\t * @param message Message to print into the log entry. To include placerholders set the index of the element\r\n\t *          (starting with 0) between curvy brackets. Example: \"the values is {0}\"\r\n\t * @param values Values to replace the placeholders plus any element to include as details. Any element that\r\n\t *          does not match the placeholders will be included as log details\r\n\t */\r\n\tfatal(message, ...values) {\r\n\t\tthis.#writeLog($scope.levels.fatal, message, ...values);\r\n\t}\r\n\r\n\t/**\r\n\t * Prints an ERROR log message\r\n\t * @param message Message to print into the log entry. To include placerholders set the index of the element\r\n\t *          (starting with 0) between curvy brackets. Example: \"the values is {0}\"\r\n\t * @param values Values to replace the placeholders plus any element to include as details. Any element that\r\n\t *          does not match the placeholders will be included as log details\r\n\t */\r\n\terror(message, ...values) {\r\n\t\tthis.#writeLog($scope.levels.error, message, ...values);\r\n\t}\r\n\r\n\t/**\r\n\t * Prints a WARNING log message\r\n\t * @param message Message to print into the log entry. To include placerholders set the index of the element\r\n\t *          (starting with 0) between curvy brackets. Example: \"the values is {0}\"\r\n\t * @param values Values to replace the placeholders plus any element to include as details. Any element that\r\n\t *          does not match the placeholders will be included as log details\r\n\t */\r\n\twarn(message, ...values) {\r\n\t\tthis.#writeLog($scope.levels.warn, message, ...values);\r\n\t}\r\n\r\n\t/**\r\n\t * Prints an INFO log message\r\n\t * @param message Message to print into the log entry. To include placerholders set the index of the element\r\n\t *          (starting with 0) between curvy brackets. Example: \"the values is {0}\"\r\n\t * @param values Values to replace the placeholders plus any element to include as details. Any element that\r\n\t *          does not match the placeholders will be included as log details\r\n\t */\r\n\tinfo(message, ...values) {\r\n\t\tthis.#writeLog($scope.levels.info, message, ...values);\r\n\t}\r\n\r\n\t/**\r\n\t * Prints a DEBUG log message\r\n\t * @param message Message to print into the log entry. To include placerholders set the index of the element\r\n\t *          (starting with 0) between curvy brackets. Example: \"the values is {0}\"\r\n\t * @param values Values to replace the placeholders plus any element to include as details. Any element that\r\n\t *          does not match the placeholders will be included as log details\r\n\t */\r\n\tdebug(message, ...values) {\r\n\t\tthis.#writeLog($scope.levels.debug, message, ...values);\r\n\t}\r\n\r\n\t/**\r\n\t * Prints a TRACE log message\r\n\t * @param message Message to print into the log entry. To include placerholders set the index of the element\r\n\t *          (starting with 0) between curvy brackets. Example: \"the values is {0}\"\r\n\t * @param values Values to replace the placeholders plus any element to include as details. Any element that\r\n\t *          does not match the placeholders will be included as log details\r\n\t */\r\n\ttrace(message, ...values) {\r\n\t\tthis.#writeLog($scope.levels.trace, message, ...values);\r\n\t}\r\n}\r\n\r\n/**\r\n * Obtains the instance of a specific logger or creates a new one if that does not exist\r\n * @param name Logger name or identifier\r\n * @returns Logger instance\r\n */\r\n$module.getLogger = function (name) {\r\n\tif (!name) {\r\n\t\tname = 'system';\r\n\t}\r\n\tif (!$scope.loggers[name]) {\r\n\t\t$scope.loggers[name] = new Logger(name);\r\n\t}\r\n\treturn $scope.loggers[name];\r\n};\r\n\r\n/** Gets or sets the default level defined for the loggers */\r\n$module.level = function () {\r\n\tif (arguments.length === 1) {\r\n\t\tconst levelInfo = $scope.levels[arguments[0]];\r\n\t\tif (!levelInfo) {\r\n\t\t\tthrow new Error('apice.logger.invalid_level[' + arguments[0] + ']');\r\n\t\t}\r\n\t\t$scope.globalLevel = levelInfo;\r\n\t\tcookies.set('apice.logger.level', arguments[0], 1800);\r\n\t\tfor (var logName in $scope.loggers) {\r\n\t\t\tvar logger = $scope.loggers[logName];\r\n\t\t\tlogger.level(arguments[0]);\r\n\t\t}\r\n\t} else if (arguments.length === 2) {\r\n\t\tconst logger = $module.getLogger(arguments[1]);\r\n\t\tlogger.level(arguments[0]);\r\n\t\treturn logger.level();\r\n\t}\r\n\treturn $scope.globalLevel?.label;\r\n};\r\n\r\nexport default $module;","/**\r\n * Allows to register a callback to be executed when the document ready state has been reached\r\n * @param callback Function to be executed when the document ready is reached\r\n */\r\nfunction documentReady(callback) {\r\n\tif (document.readyState === 'complete') {\r\n\t\tcallback();\r\n\t} else if (typeof (document.addEventListener) === 'function') {\r\n\t\tdocument.addEventListener('DOMContentLoaded', callback, false);\r\n\t} else if (typeof (document.attachEvent) === 'function') {\r\n\t\tdocument.attachEvent('onreadystatechange', function () {\r\n\t\t\tif (document.readyState === 'complete') {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * Adds an event listener to a specific element\r\n * @param target Reference to the DOM element that will receive the event listener\r\n * @param eventName Name of the event, for example 'click'\r\n * @param listener Listener function to be executed when the event is triggered\r\n */\r\nfunction addListener(target, eventName, listener) {\r\n\tif (!target) {\r\n\t\tthrow new Error('apice.util.event.add.invalid_target');\r\n\t} else if (!eventName || typeof (eventName) !== 'string') {\r\n\t\tthrow new Error('apice.util.event.add.invalid_event_name');\r\n\t} else if (typeof (listener) !== 'function') {\r\n\t\treturn;\r\n\t}\r\n\t// if the target is an Apice element then we need to interact with the inner HTML element\r\n\tif (typeof (target.each) === 'function') {\r\n\t\ttarget.each(item => {\r\n\t\t\taddListener(item, eventName, listener);\r\n\t\t});\r\n\t} else if (typeof (target.addEventListener) === 'function') {\r\n\t\ttarget.addEventListener(eventName, listener, false);\r\n\t} else if (typeof (target.attachEvent) === 'function') {\r\n\t\ttarget.attachEvent('on' + eventName, listener);\r\n\t}\r\n}\r\n\r\n/**\r\n * Removes an event listener from a specific element\r\n * @param target Reference to the DOM element to remove the listener from it\r\n * @param eventName Name of the event, for example 'click'\r\n * @param listener Listener function to remove\r\n */\r\nfunction removeListener(target, eventName, listener) {\r\n\tif (!target) {\r\n\t\tthrow new Error('apice.util.event.remove.invalid_target');\r\n\t} else if (!eventName || typeof (eventName) !== 'string') {\r\n\t\tthrow new Error('apice.util.event.remove.invalid_event_name');\r\n\t} else if (typeof (listener) !== 'function') {\r\n\t\treturn;\r\n\t}\r\n\t// if the target is an Apice element then we need to interact with the inner HTML element\r\n\tif (typeof (target.each) === 'function') {\r\n\t\ttarget.each(item => {\r\n\t\t\tremoveListener(item, eventName, listener);\r\n\t\t});\r\n\t} else if (typeof (target.removeEventListener) === 'function') {\r\n\t\ttarget.removeEventListener(eventName, listener);\r\n\t} else if (typeof (target.detachEvent) === 'function') {\r\n\t\ttarget.detachEvent('on' + eventName, listener);\r\n\t}\r\n}\r\n\r\n/**\r\n * Internal method to assign an animation class to an element and invoke a callback when is completed\r\n * @param target Reference to the HTMLElement to animate\r\n * @param animation String with the animation name\r\n * @param callback Function to invoked when the animation is completed \r\n */\r\nfunction waitAnimation(target, animation, callback) {\r\n\tconst listener = function () {\r\n\t\tremoveListener(target, 'animationend', listener);\r\n\t\tcallback();\r\n\t};\r\n\taddListener(target, 'animationend', listener);\r\n\t// NOTE: we need to determine if the target is an Apice element but the element library should not be imported here\r\n\t// hence we use the method css to determine if is possible to set the css class\r\n\tif (typeof (target.setClass) === 'function') {\r\n\t\ttarget.setClass(animation);\r\n\t} else {\r\n\t\ttarget.className = animation;\r\n\t}\r\n}\r\n\r\nexport default { addListener, removeListener, documentReady, waitAnimation };","import events from './events.mjs';\r\n\r\nconst $scope = {};\r\n\r\n/** Parses a string HTML content and returns its content or null if it is not HTML content */\r\nfunction parseHTML(content) {\r\n\tif (!content || typeof (content) !== 'string') {\r\n\t\treturn null;\r\n\t}\r\n\tconst holder = document.createElement('div');\r\n\tholder.innerHTML = content;\r\n\treturn [...holder.childNodes];\r\n}\r\n\r\n/** Class wrapping one or more DOM elements and simplifying some actions on it */\r\nclass ApiceElement {\r\n}\r\n\r\n/** Class wrapping one DOM element and simplifying some actions on it */\r\nclass SingleElement extends ApiceElement {\r\n\t/** Reference to the DOM element being wrapped */\r\n\t#element;\r\n\t/** Attribute to store different internal state variables */\r\n\t#scope;\r\n\r\n\tconstructor(value) {\r\n\t\tsuper();\r\n\t\tthis.#element = value;\r\n\t\tthis.#scope = {};\r\n\t}\r\n\r\n\t/** Allows to determine if the instance is wrapping a valid DOM element */\r\n\tget isValid() {\r\n\t\treturn !!this.#element;\r\n\t}\r\n\r\n\t/** Allows to obtain the ID of the element */\r\n\tget id() {\r\n\t\tif (!this.#element) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this.#element.id;\r\n\t}\r\n\r\n\t/** Allows to interact with the wrapped DOM element (if any) */\r\n\teach(callback) {\r\n\t\tif (typeof (callback) === 'function' && this.#element) {\r\n\t\t\tcallback(this.#element);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows to obtain or set the HTML content of an element.  If no paramaters are provided the html content will\r\n\t * be returned.  When a string argument is provided, the HTML content of the element will be set with the string.\r\n\t * When a ApiceElement is provided, then the HTML content will be extracted from it.  If a reference to a DOM element\r\n\t * is provided, then it will be set as the content of the wrapped element.\r\n\t * @returns When no argument are provided returns the HTML element otherwise returns the ApiceElement instance\r\n\t */\r\n\tcontent() {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tif (!this.#element) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\treturn this.#element.innerHTML;\r\n\t\t}\r\n\t\tif (this.#element) {\r\n\t\t\tvar content = arguments[0];\r\n\t\t\tif (!content) {\r\n\t\t\t\tthis.#element.innerHTML = '';\r\n\t\t\t} else if (isDOMElement(content)) {\r\n\t\t\t\tthis.#element.innerHTML = '';\r\n\t\t\t\tthis.#element.appendChild(content);\r\n\t\t\t} else if (content instanceof ApiceElement) {\r\n\t\t\t\tthis.#element.innerHTML = '';\r\n\t\t\t\tcontent.each(child => {\r\n\t\t\t\t\tthis.#element.append(child);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.#element.innerHTML = content;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Appends content to the end of the current element\r\n\t * @returns This element instance\r\n\t */\r\n\tappend() {\r\n\t\tif (this.#element && arguments.length > 0) {\r\n\t\t\tif (arguments.length > 1) {\r\n\t\t\t\tfor (let idx = 0; idx < arguments.length; idx++) {\r\n\t\t\t\t\tthis.append(arguments[idx]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar content = arguments[0];\r\n\t\t\t\tif (content instanceof ApiceElement) {\r\n\t\t\t\t\tcontent.each(item => {\r\n\t\t\t\t\t\tthis.#element.appendChild(item);\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (typeof (content) === 'string') {\r\n\t\t\t\t\tcontent = parseHTML(content);\r\n\t\t\t\t\tfor (let idx = 0; idx < content.length; idx++) {\r\n\t\t\t\t\t\tthis.#element.appendChild(content[idx]);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (isDOMElement(content)) {\r\n\t\t\t\t\tthis.#element.appendChild(content);\r\n\t\t\t\t} else if (content instanceof NodeList) {\r\n\t\t\t\t\tfor (let idx = 0; idx < content.length; idx++) {\r\n\t\t\t\t\t\tconst node = content[idx];\r\n\t\t\t\t\t\tthis.#element.appendChild(node);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an HTML content at the beggining of this content\r\n\t * @returns This element instance\r\n\t */\r\n\tprepend() {\r\n\t\tif (this.#element && arguments.length > 0) {\r\n\t\t\tif (arguments.length > 1) {\r\n\t\t\t\tfor (let idx = 0; idx < arguments.length; idx++) {\r\n\t\t\t\t\tthis.prepend(arguments[idx]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst first = this.#element.firstChild;\r\n\t\t\t\tvar content = arguments[0];\r\n\t\t\t\tif (content instanceof ApiceElement) {\r\n\t\t\t\t\tcontent.each(item => {\r\n\t\t\t\t\t\tthis.#element.insertBefore(item, first);\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (typeof (content) === 'string') {\r\n\t\t\t\t\tcontent = parseHTML(content);\r\n\t\t\t\t\tfor (let idx = 0; idx < content.length; idx++) {\r\n\t\t\t\t\t\tthis.#element.insertBefore(content[idx], first);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (isDOMElement(content)) {\r\n\t\t\t\t\tthis.#element.insertBefore(content, first);\r\n\t\t\t\t} else if (content instanceof NodeList) {\r\n\t\t\t\t\tfor (let idx = 0; idx < content.length; idx++) {\r\n\t\t\t\t\t\tconst node = content[idx];\r\n\t\t\t\t\t\tthis.#element.insertBefore(node, first);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the current instance as a child inside another element\r\n\t * @param target String with the target selector, or reference to the HTMLElement for it, or Apice element reference\r\n\t */\r\n\tappendTo(target) {\r\n\t\ttarget = $module(target);\r\n\t\tif (target) {\r\n\t\t\ttarget.append(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Bind a specific event with a function\r\n\t * @param eventName String with the event name\r\n\t * @param fnc Function to bind\r\n\t * @returns This element instance\r\n\t */\r\n\ton(eventName, fnc) {\r\n\t\tif (!eventName) {\r\n\t\t\tthrow new Error('apice.element.on.no_event_name');\r\n\t\t}\r\n\t\tif (this.#element && typeof (fnc) === 'function') {\r\n\t\t\tevents.addListener(this.#element, eventName, fnc);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** \r\n\t * Invokes the click event (when no argument is provided) or binds an action to the click \r\n\t * event (receiving a function as the argument) \r\n\t */\r\n\tclick() {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\t// TODO: implement\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif (typeof (arguments[0]) !== 'function') {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tthis.on('click', arguments[0]);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets all the child elements that matches a specific selector\r\n\t * @param selector String with the selector\r\n\t * @returns Apice element wrapping the matches\r\n\t */\r\n\tselect(selector) {\r\n\t\tif (!selector || typeof (selector) !== 'string') {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn applySelector(this.#element, selector);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a specific class to the current element\r\n\t * @param className String with the class name to add\r\n\t */\r\n\taddClass(className) {\r\n\t\tif (className) {\r\n\t\t\tthis.#element.classList.add(className);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a specific class from the current element\r\n\t * @param className String with the class name to remove\r\n\t */\r\n\tremoveClass(className) {\r\n\t\tif (className) {\r\n\t\t\tthis.#element.classList.remove(className);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Sets a specific css class name to the current element */\r\n\tsetClass(className) {\r\n\t\tif (className) {\r\n\t\t\tthis.#element.className = className;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Toggle if the element is displayed or not */\r\n\tdisplay(flag) {\r\n\t\tif(flag === true) {\r\n\t\t\tif(this.#scope.originalDisplay) {\r\n\t\t\t\tthis.#element.style.display = this.#scope.originalDisplay;\r\n\t\t\t} else {\r\n\t\t\t\tthis.#element.style.display = 'block';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.#scope.originalDisplay = this.#element.style.display;\r\n\t\t\tthis.#element.style.display = 'none';\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Class wrapping two or more elements\r\n */\r\nclass MultipleElements extends ApiceElement {\r\n\t/** Array with the wrapped elements */\r\n\t#elements;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#elements = [];\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an element to this instance\r\n\t * @param element \r\n\t * @returns \r\n\t */\r\n\tadd(element) {\r\n\t\tif (element) {\r\n\t\t\tthis.#elements.push(element);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal method that invokes a function on all the elements wrapped by this instance\r\n\t * @param functionName String with the name of the function to invoke\r\n\t * @param args Arguments to call the function\r\n\t * @returns Object wiith the array of return values\r\n\t */\r\n\t#nodeCall(functionName, args) {\r\n\t\tconst returnValue = [];\r\n\t\tfor (var idx = 0; idx < this.#elements.length; idx++) {\r\n\t\t\tconst node = this.#elements[idx];\r\n\t\t\tconst targetFunction = node[functionName];\r\n\t\t\tif (typeof (targetFunction) === 'function') {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst result = targetFunction.apply(node, args);\r\n\t\t\t\t\tif (Array.isArray(result)) {\r\n\t\t\t\t\t\treturnValue.push(...result);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturnValue.push(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (ex) {\r\n\t\t\t\t\tconsole.log(`itaca.element.node_call[${functionName}]`, ex);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\treturn returnValue;\r\n\t}\r\n\r\n\t/** See SingleElement */\r\n\teach() {\r\n\t\tthis.#nodeCall('each', arguments);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** See SingleElement */\r\n\tcontent() {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\treturn this.#nodeCall('content', arguments);\r\n\t\t}\r\n\t\tthis.#nodeCall('content', arguments);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** See SingleElement */\r\n\tappend() {\r\n\t\tthis.#nodeCall('append', arguments);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** See SingleElement */\r\n\tprepend() {\r\n\t\tthis.#nodeCall('prepend', arguments);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** See SingleElement */\r\n\tappendTo() {\r\n\t\tthis.#nodeCall('appendTo', arguments);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** See SingleElement */\r\n\ton() {\r\n\t\tthis.#nodeCall('on', arguments);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** See SingleElement */\r\n\tclick() {\r\n\t\tthis.#nodeCall('click', arguments);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** See SingleElement */\r\n\tselect() {\r\n\t\tthis.#nodeCall('select', arguments);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** See SingleElement */\r\n\taddClass() {\r\n\t\tthis.#nodeCall('addClass', arguments);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** See SingleElement */\r\n\tremoveClass() {\r\n\t\tthis.#nodeCall('removeClass', arguments);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** See SingleElement */\r\n\tsetClass() {\r\n\t\tthis.#nodeCall('setClass', arguments);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** See SingleElement */\r\n\tdisplay() {\r\n\t\tthis.#nodeCall('display', arguments);\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\n/** Allows to determine if a specific object instance is a DOM element */\r\nfunction isDOMElement(obj) {\r\n\treturn (obj && typeof (obj) === 'object' && obj.nodeType === 1);\r\n}\r\n\r\n/**\r\n * Internal function to create Web Elements according to a selector query\r\n * @param root Element to use as the root to run the selector\r\n * @param selector String with the selector\r\n * @returns Instance of an Web Element wrapping the matched elements or null if there is no match\r\n */\r\nfunction applySelector(root, selector) {\r\n\tconst elements = root.querySelectorAll(selector);\r\n\t// selector does not match DOM elements\r\n\tif (elements.length === 0) {\r\n\t\treturn null;\r\n\t}\r\n\t// selector matches a single DOM element \r\n\telse if (elements.length === 1) {\r\n\t\treturn new SingleElement(elements[0]);\r\n\t}\r\n\t// selector matches multiple DOM elements\r\n\tconst nodes = new MultipleElements();\r\n\tfor (var idx = 0; idx < elements.length; idx++) {\r\n\t\tconst node = elements[idx];\r\n\t\tnodes.add(new SingleElement(node));\r\n\t}\r\n\treturn nodes;\r\n}\r\n\r\n/**\r\n * Allows to obtain an Web element as a wrapper for a particular DOM element\r\n * @param selector String with the selector to obtain the DOM element or reference to the DOM element. If it is not\r\n * \t\t\tprovided then a reference to the body will be used.\r\n * @returns An ApiceElement wrapping the element. If the selector does not match a valid element the method will return null.\r\n */\r\nconst $module = function (selector) {\r\n\tif (!selector) {\r\n\t\treturn null;\r\n\t} else if (selector === 'body' || selector === document.body) {\r\n\t\tif (!$scope.bodySingleton) {\r\n\t\t\t$scope.bodySingleton = new SingleElement(document.body);\r\n\t\t}\r\n\t\treturn $scope.bodySingleton;\r\n\t} else if (typeof (selector) === 'string') {\r\n\t\treturn applySelector(document, selector);\r\n\t} else if (selector instanceof ApiceElement) {\r\n\t\treturn selector;\r\n\t} else if (isDOMElement(selector)) {\r\n\t\treturn new SingleElement(selector);\r\n\t}\r\n\treturn null;\r\n};\r\n\r\n/**\r\n * Appends a source element into aother target element\r\n * @param target String with the target selector to find the element, or reference to the DOM element, or Apice element\r\n * @param source String with the source selector to find the element, or reference to the DOM element, or Apice element\r\n */\r\n$module.append = function (target, source) {\r\n\tif (!target || !source) {\r\n\t\treturn;\r\n\t} else if (source === 'body' || source === document.body) {\r\n\t\tthrow Error('apice.element.append.source_cannot_be_body');\r\n\t}\r\n\tif (typeof (source) === 'string') {\r\n\t\tconst stringStart = source.charAt(0);\r\n\t\tif (stringStart === '#' || stringStart === '.' || stringStart === '[') {\r\n\t\t\tconst sourceElement = document.querySelector(source);\r\n\t\t\tif (!sourceElement) {\r\n\t\t\t\tthrow Error(`apice.element.append.unknown_source[${source}]`);\r\n\t\t\t}\r\n\t\t\tsource = sourceElement;\r\n\t\t}\r\n\t}\r\n\tconst targetElement = $module(target);\r\n\tif (!targetElement) {\r\n\t\tthrow Error(`apice.element.append.unknown_target[${target}]`);\r\n\t}\r\n\ttargetElement.append(source);\r\n};\r\n\r\n/**\r\n * Allows to determine if a specific object is an Apice element\r\n * @param obj Object instance to evaluate\r\n * @returns Boolean value to determine if the object is an Apice element or not\r\n */\r\n$module.isApiceElement = function (obj) {\r\n\treturn (obj && obj instanceof ApiceElement);\r\n};\r\n\r\nexport default $module;","/** Creates a random tiny identified composed by 4 alphanumeric characters */\r\nfunction tinyId() {\r\n\treturn (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n}\r\n\r\n/** Creates a random short identified composed by 8 alphanumeric characters */\r\nfunction shortId() {\r\n\treturn tinyId() + tinyId();\r\n}\r\n\r\n/** Creates a random values simulating a global global unique identifier */\r\nfunction guid() {\r\n\treturn shortId()\r\n\t\t+ '-' + shortId()\r\n\t\t+ '-' + shortId()\r\n\t\t+ '-' + shortId()\r\n\t\t+ shortId();\r\n}\r\n\r\nexport default { tinyId, shortId, guid };","import logging from './logging.mjs';\r\nimport random from './random.mjs';\r\nimport element from './element.mjs';\r\n\r\nconst $module = {};\r\n\r\n/** Wrapper that allows to control the action around an error */\r\nclass ErrorHandler {\r\n\t// String with the name of the module or the layer that produced the error. This is used to obtain the logger\r\n\t#module\r\n\t// String with the message to show to the user (if any). When there is no specific message, then a generic error message will be shown\r\n\t#message\r\n\t// The cause of the error (if any)\r\n\t#cause\r\n\t// The code of the error (if any). This wil be printed to the log as a hint, along with the cause (if any)\r\n\t#code\r\n\t// The unique error number used to correlate any error message in the UI with the entries in the log\r\n\t#guid\r\n\r\n\tconstructor(specs) {\r\n\t\tthis.#guid = random.guid();\r\n\t\tthis.#message = specs.message;\r\n\t\tthis.#cause = specs.cause;\r\n\t\tthis.#module = specs.module;\r\n\t\tthis.#code = specs.code;\r\n\t}\r\n\r\n\t/** Allows to obtain the unique value that identify this error occurrence */\r\n\tget guid() {\r\n\t\treturn this.#guid;\r\n\t}\r\n\r\n\t/** Obtains the message if there is any */\r\n\tget message() {\r\n\t\treturn this.#message ?? 'An error has occurred. Please contact the technical support without closing this screen.';\r\n\t}\r\n\r\n\t/** Obtains the cause if there is any */\r\n\tget cause() {\r\n\t\treturn this.#cause;\r\n\t}\r\n\r\n\t/** Obtains the error code if any */\r\n\tget code() {\r\n\t\treturn this.#code;\r\n\t}\r\n\r\n\t/** Internal method to create the log entry text for a specific error cause  */\r\n\t#getCauseLog(cause) {\r\n\t\tif (!cause) {\r\n\t\t\treturn '';\r\n\t\t} else if (typeof (cause) === 'string') {\r\n\t\t\treturn `\\n-> (s) ${cause}`;\r\n\t\t} else if (cause instanceof Error) {\r\n\t\t\treturn `\\n-> (e) ${cause.stack}`;\r\n\t\t} else if (this.#cause instanceof ErrorHandler) {\r\n\t\t\treturn `\\n-> (n) ${cause.code}` + this.#getCauseLog(cause.cause);\r\n\t\t} else if (this.#cause instanceof HttpError) {\r\n\t\t\treturn `\\n-> (h) http-error[${cause.code}]`;\r\n\t\t}\r\n\t}\r\n\r\n\t/** Creates an error entry with the details about the error */\r\n\tlog() {\r\n\t\tconst logger = logging.getLogger(this.#module);\r\n\t\tlet entryText = `ref=[${this.#guid}]`;\r\n\t\tif (this.#message) {\r\n\t\t\tentryText += `\\n-> ${this.#message}`;\r\n\t\t}\r\n\t\tif (this.#code) {\r\n\t\t\tentryText += `\\n-> (c) ${this.#code}`;\r\n\t\t}\r\n\t\tif(this.#cause) {\r\n\t\t\tentryText += this.#getCauseLog(this.#cause);\r\n\t\t}\r\n\t\tlogger.error(entryText);\r\n\t}\r\n\r\n\t/**\r\n\t * Renders a visual hint to inform the user about the error\r\n\t * @param selector String with the selector to render the error on it or reference to a DOM element\r\n\t */\r\n\trender(selector) {\r\n\t\tthis.log();\r\n\t\tvar target = element(selector);\r\n\t\tif (!target) {\r\n\t\t\tApice.ui.toast.error(`${this.message}<div>${this.#guid}</div>`);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttarget.content(`<div class=\"apc-badge apc-error\">\\\r\n            <div class=\"apc-header\">Atention!</div>\\\r\n            <div class=\"apc-body\">${this.message}</div>\\\r\n            <div class=\"apc-footer\">${this.#guid}</div>\\\r\n        </div>`);\r\n\t}\r\n}\r\n\r\n/**\r\n * Creates an object to wrap an error and allow to take actions with it\r\n * @param specs JavaScript Error instance, string with an error code or object with the specifications to create \r\n *      the error handler.  If an object is used attributes are:\r\n *      - code: String with the error code (optional if a code is provided)\r\n *      - cause: Reference to the root cause that creates the error condition (optional if the cause is provided)\r\n *      - module: (optional) String with the name of the module that produced the error\r\n *      - message: (optional) String with any message rendered to the end user\r\n * @returns Error hanlder instance\r\n */\r\n$module.create = function (specs) {\r\n\tif (!specs) {\r\n\t\tconsole.error('apice.error_handler.create.null_input');\r\n\t\treturn null;\r\n\t}\r\n\tconst specType = typeof (specs);\r\n\tif (specType === 'string') {\r\n\t\tspecs = { code: specs };\r\n\t} else if (specs instanceof Error) {\r\n\t\tspecs = { cause: specs };\r\n\t} else if (specType !== 'object') {\r\n\t\tconsole.error('apice.error_handler.create.invalid_input', specs);\r\n\t\treturn null;\r\n\t}\r\n\treturn new ErrorHandler(specs);\r\n};\r\n\r\n/**\r\n * Renders a visual hint to report an error\r\n * @param err String with the error code, JavaScript error, or an ErrorHandler reference or a specification object.\r\n *          When the error is a specification object please follow the structured defined in the create method of this module.\r\n * @param selector String with the selector to render the error on it, reference to the DOM element or null to render into the body\r\n */\r\n$module.render = function (err, selector) {\r\n\tif (!err) {\r\n\t\treturn;\r\n\t} else if (!(err instanceof ErrorHandler)) {\r\n\t\terr = $module.create(err);\r\n\t}\r\n\terr.render(selector);\r\n};\r\n\r\n/** Represents an HTTP error */\r\nclass HttpError {\r\n\t/** Code of the HTTP error */\r\n\t#code;\r\n\r\n\t/**\r\n\t * Creates a new HttpError instance with a specific error code\r\n\t * @param code HTTP error code\r\n\t */\r\n\tconstructor(code) {\r\n\t\tthis.#code = code;\r\n\t}\r\n\r\n\t/** Code with the type of error */\r\n\tget type() {\r\n\t\treturn 'http';\r\n\t}\r\n\r\n\t/** Allows to obtain the HTTP code associated with the error represented by this instance */\r\n\tget code() {\r\n\t\treturn this.#code;\r\n\t}\r\n}\r\n\r\n/** Creates an HTTP error */\r\n$module.createHttpError = function (httpCode) {\r\n\treturn new HttpError(httpCode);\r\n};\r\n\r\n// adds a handler to capture any unhandled promise scenario\r\nwindow.addEventListener('unhandledrejection', function (event) {\r\n\tif (event.reason instanceof ErrorHandler) {\r\n\t\tevent.preventDefault();\r\n\t\tevent.reason.render();\r\n\t}\r\n});\r\n\r\nexport default $module;","import errorHandler from './errorHandler.mjs';\r\nimport util from './util.mjs';\r\nimport logging from './logging.mjs';\r\nimport random from './random.mjs';\r\n\r\nconst $module = {};\r\nconst $moduleName = 'apice.http';\r\nconst logger = logging.getLogger('apice.http');\r\n\r\n/** Creates the underlying XMLHTTP object used to execute ajax calls */\r\nfunction createXmlHttp() {\r\n\tif (window.XMLHttpRequest) {\r\n\t\treturn new XMLHttpRequest();\r\n\t} else {\r\n\t\ttry {\r\n\t\t\treturn new ActiveXObject('Msxml2.XMLHTTP');\r\n\t\t} catch (e) {\r\n\t\t\ttry {\r\n\t\t\t\treturn new ActiveXObject('Microsoft.XMLHTTP');\r\n\t\t\t} catch (ex) {\r\n\t\t\t\tthrow Error('apice.http.xmlhttp_creation_error');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Internal method to extract the response headers associated with a particular XMLHTTP request\r\n * @param request Instance of the XMLHTTP that initiated the request\r\n * @returns Object with all the headers as attributes\r\n */\r\nfunction getResponseHeaders(request) {\r\n\tconst headers = {};\r\n\tlet rawHeaders = request.getAllResponseHeaders();\r\n\tif(rawHeaders) {\r\n\t\trawHeaders = rawHeaders.split('\\r\\n');\r\n\t\tfor(let idx=0; idx < rawHeaders.length; idx++) {\r\n\t\t\tconst parts = rawHeaders[idx].split(':');\r\n\t\t\t// NOTE: on older browsers the header name can have mixed case, on recent browsers it is only lowercase\r\n\t\t\theaders[util.trim(parts[0]).toLowerCase()] = util.trim(parts[1]);\r\n\t\t}\r\n\t}\r\n\treturn headers;\r\n}\r\n\r\n/**\r\n * Internal method to parse a rsponse received from an HTTP call\r\n * @param request Reference to the XMLHTTP request\r\n * @param response Response to parse\r\n * @param reject Method to invoke in case of error\r\n * @param options Options received that allows to determine the way to parse the response\r\n */\r\nfunction parseResponse(request, response, reject, options) {\r\n\tif(options.output === 'json' || (!options.output && response['content-type'] === 'application/json')) {\r\n\t\ttry {\r\n\t\t\tresponse.content = JSON.parse(response.content);\r\n\t\t} catch(ex) {\r\n\t\t\tlogger.error('An error occurred parsing a HTTP JSON content. request={0}\\r\\nContent:\\r\\n{1}\\r\\n', request.guid, response.content, ex);\r\n\t\t\treject(errorHandler.create({ code: 'apice.http.json_parse_error', cause: ex }));\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/** Create a request object to execute ajax calls in a crossbrowser approach */\r\nfunction createRequest(resolve, reject, options) {\r\n\tconst request = createXmlHttp();\r\n\trequest.guid = random.shortId();\r\n\trequest.onreadystatechange = function () {\r\n\t\tif (request.readyState == 4 || request.readyState === 'complete') {\r\n\t\t\tif (request.status == 200) {\r\n\t\t\t\tlogger.trace('Successful HTTP response received. request={0}', request.guid);\r\n\t\t\t\tconst response = {};\r\n\t\t\t\tresponse.headers = getResponseHeaders(request);\r\n\t\t\t\tresponse.content = request.responseText;\r\n\t\t\t\tparseResponse(request, response, reject, options);\r\n\t\t\t\tresolve(response);\r\n\t\t\t} else {\r\n\t\t\t\tlogger.trace('Failed HTTP response. request={0} status={1}', request.guid, request.status);\r\n\t\t\t\treject(errorHandler.createHttpError(request.status));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn request;\r\n}\r\n\r\n/**\r\n * \r\n * @param url String with the resource URL to be requested\r\n * @param options Object with the options to execute the request. The values are:\r\n * \t\t\t\t\t- method: String with the HTTP method to execute: GET, POST, PUT, DELETE. If this is not provided, GET will be used by default.\r\n * \t\t\t\t\t- async: Boolean value to determine if the request should be asynchronous (true) or not. By default it is true.\r\n *                  - data: Data to be included in a POST, PUT or DELETE request\r\n * @returns Promise to be fulfilled according to the HTTP request result\r\n */\r\n$module.request = function (url, options) {\r\n\tif (typeof (url) !== 'string' || !url) {\r\n\t\tlogger.error('Unable to execute an HTTP request without an URL');\r\n\t\treturn Promise.reject('apice.http.null_url');\r\n\t}\r\n\tif (!options) {\r\n\t\toptions = {};\r\n\t}\r\n\tif (!options.method) {\r\n\t\toptions.method = 'GET';\r\n\t}\r\n\t// TODO: add headers\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst request = createRequest(resolve, reject, options);\r\n\t\tlogger.debug('Triggering http request. request={0} url={1}', request.guid, url);\r\n\t\trequest.open(options.method, url, options.async !== false);\r\n\t\tif (options.method === 'GET' || !options.data) {\r\n\t\t\trequest.send();\r\n\t\t} else {\r\n\t\t\trequest.send(options.data);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n/**\r\n * Loads a JavaScript resource dynamically\r\n * @param url URL to load the script from it\r\n * @returns Promise that allows to handle the script loading actions\r\n */\r\n$module.loadScript = function (url) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tvar element = document.createElement('script');\r\n\t\telement.src = url;\r\n\t\telement.type = 'text/javascript';\r\n\t\telement.async = false;\r\n\t\telement.onerror = () => {\r\n\t\t\treject(errorHandler.create({\r\n\t\t\t\tmodule: $moduleName,\r\n\t\t\t\tcode: `apice.http.load_script_error[${url}]`\r\n\t\t\t})); // TODO: collect error info\r\n\t\t};\r\n\t\telement.onload = () => {\r\n\t\t\tresolve();\r\n\t\t};\r\n\t\tdocument.head.appendChild(element);\r\n\t});\r\n};\r\n\r\n/** Class representing a URL assembled with different parts */\r\nclass ApiceUrl {\r\n\t// string with the HTTP protocol (http, https)\r\n\t#protocol\r\n\t// String wit the host name\r\n\t#host\r\n\t// String with the port\r\n\t#port\r\n\t// String with the resource path\r\n\t#path\r\n\r\n\t/**\r\n\t * Creates a new instance representing a url by providing its parts\r\n\t * @param protocol String with the HTTP protocol to use (http, https) or null to use https as default\r\n\t * @param host String with the host name. This parameter is mandatory, when is not ptovided an error will be throw\r\n\t * @param port String with the port number or null to use port 80 as the default one\r\n\t * @param path String with the base path or null to use the root\r\n\t */\r\n\tconstructor(protocol, host, port, path) {\r\n\t\tif (!this.#host) {\r\n\t\t\tthrow new Error('apice.http.url.no_host');\r\n\t\t}\r\n\t\tthis.#protocol = protocol ?? 'https';\r\n\t\tthis.#host = host;\r\n\t\tthis.#port = port ?? '80';\r\n\t\tthis.#path = path ?? '';\r\n\t}\r\n\r\n\t/** Obtains the HTTP protocol used by the url */\r\n\tget protocol() {\r\n\t\treturn this.#protocol;\r\n\t}\r\n\r\n\t/** Obtains the host used by the url */\r\n\tget host() {\r\n\t\treturn this.#host;\r\n\t}\r\n\r\n\t/** Obtains the port used by the url */\r\n\tget port() {\r\n\t\treturn this.#port;\r\n\t}\r\n\r\n\t/** Obtains the base path used by the url */\r\n\tget path() {\r\n\t\treturn this.#path;\r\n\t}\r\n\r\n\t/** Creates a string representation of this url */\r\n\ttoString() {\r\n\t\treturn this.#protocol + '://' + this.#host + ':' + this.#port + '/' + this.#path;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a url string using the base url represented by this instance and concatenating additional elements\r\n\t * @param path String with the path of an additional resource to be added to the base url represented by this instance or null to ignore it.\r\n\t * @param query Query string to add to the base URL represented by this instance or null to ignore it.\r\n\t * @param hash Hash to add to the base URL represented by this instance or null to ignore it.\r\n\t * @returns String with a full url\r\n\t */\r\n\tresourceUrl(path, query, hash) {\r\n\t\tvar url = this.toString();\r\n\t\tif (path && typeof (path) === 'string') {\r\n\t\t\tif (!url.endsWith('/') && !path.startsWith('/')) {\r\n\t\t\t\turl += '/';\r\n\t\t\t}\r\n\t\t\turl += path;\r\n\t\t}\r\n\t\tif (query && typeof (query) === 'string') {\r\n\t\t\tif (!query.startsWith('?')) {\r\n\t\t\t\turl += '?';\r\n\t\t\t}\r\n\t\t\turl += query;\r\n\t\t}\r\n\t\tif (hash && typeof (hash) === 'string') {\r\n\t\t\tif (!hash.startsWith('#')) {\r\n\t\t\t\turl += '#';\r\n\t\t\t}\r\n\t\t\turl += hash;\r\n\t\t}\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Executes an HTTP GET operation using the URL represented by this instance and adding additional elements\r\n\t * @param path Resource path to add to the base url represented by this instance or null to maintain the original \r\n\t * @param query Query string to add to the base URL represented by this instance\r\n\t * @param hash Hash to add to the base url represented by this instance\r\n\t * @returns A promise to capture the execution of the HTTP request\r\n\t */\r\n\tget(path, query, hash) {\r\n\t\tvar url = this.resourceUrl(path, query, hash);\r\n\t\treturn $module.request(url, { method: 'GET' });\r\n\t}\r\n\r\n\t/**\r\n\t * Executes an HTTP POST operation using the URL represented by this instance and adding a resource path and data\r\n\t * @param path Resource path to add to the base url represented by this instance or null to maintain the original \r\n\t * @param data Object to post as data in the HTTP request\r\n\t * @returns A promise to capture the execution of the HTTP request\r\n\t */\r\n\tpost(path, data) {\r\n\t\tvar url = this.resourceUrl(path);\r\n\t\treturn $module.request(url, { method: 'POST', data: data });\r\n\t}\r\n\r\n\t/**\r\n\t * Executes an HTTP PUT operation using the URL represented by this instance and adding a resource path and data\r\n\t * @param path Resource path to add to the base url represented by this instance or null to maintain the original \r\n\t * @param data Object to post as data in the HTTP request\r\n\t * @returns A promise to capture the execution of the HTTP request\r\n\t */\r\n\tput(path, data) {\r\n\t\tvar url = this.resourceUrl(path);\r\n\t\treturn $module.request(url, { method: 'PUT', data: data });\r\n\t}\r\n\r\n\t/**\r\n\t * Executes an HTTP DELETE operation using the URL represented by this instance and adding a resource path and data\r\n\t * @param path Resource path to add to the base url represented by this instance or null to maintain the original \r\n\t * @param data Object to post as data in the HTTP request\r\n\t * @returns A promise to capture the execution of the HTTP request\r\n\t */\r\n\tdelete(path, data) {\r\n\t\tvar url = this.resourceUrl(path);\r\n\t\treturn $module.request(url, { method: 'DELETE', data: data });\r\n\t}\r\n}\r\n\r\n/** Class to manipulate and create an URL */\r\nclass UrlBuilder {\r\n\t// string with the HTTP protocol (http, https)\r\n\t#protocol\r\n\t// String wit the host name\r\n\t#host\r\n\t// String with the port\r\n\t#port\r\n\t// String with the resource path\r\n\t#path\r\n\r\n\t/**\r\n\t * Defines the HTTP protocol to be used by the url\r\n\t * @param protocol String with the protocol. Example: https\r\n\t * @returns Fluent instance to continue the build\r\n\t */\r\n\tprotocol(protocol) {\r\n\t\tthis.#protocol = protocol;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the name of the host to be used in the url to be build\r\n\t * @param host String with the hostname\r\n\t * @returns Fluent instance to continue the build\r\n\t */\r\n\thost(host) {\r\n\t\tthis.#host = host;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the port to use in the url to be build\r\n\t * @param port String or number with the port\r\n\t * @returns Fluent instance to continue the build\r\n\t */\r\n\tport(port) {\r\n\t\tvar portType = typeof (port);\r\n\t\tif (portType === 'string') {\r\n\t\t\tthis.#port = port;\r\n\t\t} else if (portType === 'number') {\r\n\t\t\tthis.#port = String(port);\r\n\t\t} else {\r\n\t\t\tthrow new Error('apice.http.url_builder.invalid_port');\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the base path to set in the url to be build\r\n\t * @param path String with the base path to use\r\n\t * @returns Fluent instance to continue the build\r\n\t */\r\n\tpath(path) {\r\n\t\tthis.#path = path;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new url instance based on the arguments collected by this builder instance\r\n\t * @returns Instance representing the Url\r\n\t */\r\n\tbuild() {\r\n\t\treturn new ApiceUrl(this.#protocol, this.#host, this.#port, this.#path);\r\n\t}\r\n}\r\n\r\n/**\r\n * Allows to obtain a builder to create an url\r\n * @returns Instance of the url builder\r\n */\r\n$module.url = function () {\r\n\treturn new UrlBuilder();\r\n};\r\n\r\nexport default $module;","import http from './http.mjs';\r\nimport errorHandler from './errorHandler.mjs';\r\nimport log from './logging.mjs';\r\n\r\nconst $moduleName = 'apc.controller';\r\nconst logger = log.getLogger($moduleName);\r\nconst $scope = {};\r\n// contains all the controllers registered, indexed by name\r\n$scope.controllers = {};\r\n\r\n/** Allows to obtain a specific controller */\r\nconst $module = function (name) {\r\n\tif (typeof (name) === 'string') {\r\n\t\tvar controller = $scope.controllers[name];\r\n\t\tif (!controller) {\r\n\t\t\tthrow Error(`apice.controller.unknown_controller[${name}]`);\r\n\t\t}\r\n\t\treturn controller;\r\n\t}\r\n};\r\n\r\n/** Class with the implementation of a controller object */\r\nclass ApiceController {\r\n\t// name to identify the controller\r\n\t#name;\r\n\t// controller implementation source\r\n\t#impl;\r\n\tconstructor(name, impl) {\r\n\t\tthis.#name = name;\r\n\t\tthis.#impl = impl;\r\n\t}\r\n\r\n\t/** Allows to obtain the name of the controller */\r\n\tget name() {\r\n\t\treturn this.#name;\r\n\t}\r\n\r\n\t/** Declares the implementation of this controller */\r\n\tdeclare(impl) {\r\n\t\tif (typeof (impl) !== 'function') {\r\n\t\t\tthrow new Error(`apice.controller.declare.invalid_implementation[${this.#name}]`);\r\n\t\t}\r\n\t\tthis.#impl = impl;\r\n\t}\r\n\r\n\t/** Internal method to run the controller implementation */\r\n\t#runImplementation() {\r\n\t\tlogger.debug('Serving controller. controller={0}', this.#name);\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tthis.#impl();\r\n\t\t\t\tresolve();\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(errorHandler.create({\r\n\t\t\t\t\tmodule: $moduleName,\r\n\t\t\t\t\tcause: err,\r\n\t\t\t\t\tcode: `apice.controller.serve.implementation_error[${this.#name}]`\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/** Internal method to load the implementation script (usually invoked the first time and only once) */\r\n\t#loadImplementation() {\r\n\t\tlogger.debug('Loading controller. controller={0}', this.#name);\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\thttp.loadScript(this.#impl).then(() => {\r\n\t\t\t\t// wraps the controller execution in a timeout to ensure it is executed after the effective declaration\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t// if the implementation is still a string it means that the controller was never loaded\r\n\t\t\t\t\tif (typeof (this.#impl) === 'string') {\r\n\t\t\t\t\t\treject(`apice.controller.serve.undeclared[${this.#name}]`);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.#runImplementation().then(resolve).catch(reject);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 0);\r\n\t\t\t}).catch((err) => {\r\n\t\t\t\treject(errorHandler.create({\r\n\t\t\t\t\tmodule: $moduleName,\r\n\t\t\t\t\tcause: err,\r\n\t\t\t\t\tcode: `apice.controller.load_script_error[${this.#name}]`\r\n\t\t\t\t}));\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Serves the controller executing its implementation\r\n\t * @returns Promise fullfilled once the controller has been executed\r\n\t */\r\n\tserve() {\r\n\t\tvar implType = typeof (this.#impl);\r\n\t\tif (implType === 'function') {\r\n\t\t\treturn this.#runImplementation();\r\n\t\t} else if (implType === 'string') {\r\n\t\t\treturn this.#loadImplementation();\r\n\t\t}\r\n\t\treturn Promise.reject(errorHandler.create({\r\n\t\t\tmodule: $moduleName,\r\n\t\t\tcode: `apice.controller.bad_implementation[${this.#name}]`\r\n\t\t}));\r\n\t}\r\n}\r\n\r\n/**\r\n * Registers a new controller\r\n * @param name Controller name\r\n * @param impl String with the controller implementation source or function with the behavior to execute\r\n */\r\n$module.register = function (name, impl) {\r\n\tlogger.debug('Registering controller. controller={0)', name);\r\n\tvar controller = new ApiceController(name, impl);\r\n\t$scope.controllers[name] = controller;\r\n\treturn controller;\r\n};\r\n\r\n/**\r\n * Declares the implementation of a specific controller\r\n * @param name Name of the controller to declare\r\n * @param impl Implementation to declare\r\n */\r\n$module.declare = function (name, impl) {\r\n\tlogger.debug('Declaring controller. controller={0}', name);\r\n\tvar controller = $scope.controllers[name];\r\n\tif (!controller) {\r\n\t\tthrow Error(`apice.controller.declare.unknown_controller[${name}]`);\r\n\t}\r\n\tcontroller.declare(impl);\r\n};\r\n\r\n/**\r\n * Allows to determine if a particular object is a controller\r\n * @param obj Object instance to evaluate\r\n * @returns Boolean value to determine if the object is a controller or not\r\n */\r\n$module.isController = function (obj) {\r\n\treturn (obj && obj instanceof ApiceController);\r\n};\r\n\r\nexport default $module;","import http from './http.mjs';\r\nimport errorHandler from './errorHandler.mjs';\r\nimport controller from './controller.mjs';\r\nimport element from './element.mjs';\r\nimport log from './logging.mjs';\r\n\r\nconst $moduleName = 'apice.fragment';\r\nconst logger = log.getLogger($moduleName);\r\nconst $scope = {};\r\n$scope.fragments = {};\r\n\r\n/** Class with the implementation of a fragment object */\r\nclass ApiceFragment {\r\n\t// name to identify the fragment\r\n\t#name;\r\n\t// url with the content source\r\n\t#source;\r\n\t// name of the controller used by the fragment\r\n\t#controller;\r\n\r\n\tconstructor(name, source, controller) {\r\n\t\tthis.#name = name;\r\n\t\tthis.#source = source;\r\n\t\tthis.#controller = controller;\r\n\t}\r\n\r\n\t/** Allows to obtain the name of the fragment */\r\n\tget name() {\r\n\t\treturn this.#name;\r\n\t}\r\n\r\n\t/** Internal method to execute the controller associated with the fragment */\r\n\t#runController() {\r\n\t\tif (!this.#controller) {\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tvar controllerType = typeof (this.#controller);\r\n\t\t\tif (controllerType === 'function') {\r\n\t\t\t\tlogger.debug('Serving fragment controller function. fragment={0}', this.#name);\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis.#controller();\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t} catch (ex) {\r\n\t\t\t\t\treject(errorHandler.create({\r\n\t\t\t\t\t\tmodule: $moduleName,\r\n\t\t\t\t\t\tcause: ex,\r\n\t\t\t\t\t\tcode: `apice.fragment.controller_function_error[${this.#name}]`\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t} else if (controllerType === 'string') {\r\n\t\t\t\tlogger.debug('Serving fragment controller. fragment={0} controller={1}', this.#name, this.#controller);\r\n\t\t\t\tcontroller(this.#controller).serve().then(resolve).catch((ex) => {\r\n\t\t\t\t\treject(errorHandler.create({\r\n\t\t\t\t\t\tmodule: $moduleName,\r\n\t\t\t\t\t\tcause: ex,\r\n\t\t\t\t\t\tcode: `apice.fragment.controller_serve_error[${this.name}]`\r\n\t\t\t\t\t}));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the fragment content in a specific placeholder\r\n\t * @param selector String with the selector to identify the target placeholder or reference to the DOM element. If no selector\r\n\t * \t\t\tis provided the content will be rendered in the body by default.\r\n\t * @returns Promise to take actions depending on the result of the rendering. The promise receives a context that contains\r\n\t *          two attributes:\r\n\t *          - target: Reference to the DOM element that will receive the fragment content\r\n\t *          - response: Fragment content received as part of tha AJAX call.  This can be replaced by a different output.\r\n\t */\r\n\trender(selector) {\r\n\t\tif (!selector) {\r\n\t\t\tselector = document.body;\r\n\t\t}\r\n\t\tvar target = element(selector);\r\n\t\tif (!target) {\r\n\t\t\treturn Promise.reject(errorHandler.create({\r\n\t\t\t\tmodule: $moduleName,\r\n\t\t\t\tcode: `apice.fragment.render.target_not_found[${selector}]`\r\n\t\t\t}));\r\n\t\t}\r\n\t\tlogger.debug('Serving fragment. fragment={0}', this.#name);\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\thttp.request(this.#source, { method: 'GET' }).then((response) => {\r\n\t\t\t\t// TODO: add a response interceptor\r\n\t\t\t\ttarget.content(response.content);\r\n\t\t\t\t// NOTE: this timeout is required to execute the controller AFTER the content has been rendered \r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.#runController().then(resolve).catch(reject);\r\n\t\t\t\t}, 0);\r\n\t\t\t}).catch((ex) => {\r\n\t\t\t\treject(errorHandler.create({\r\n\t\t\t\t\tmodule: $moduleName,\r\n\t\t\t\t\tmessage: 'An error has occurred trying to load the content',\r\n\t\t\t\t\tcause: ex,\r\n\t\t\t\t\tcode: `apice.fragment.render_error[${this.name}]`\r\n\t\t\t\t}));\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/** Allows to obtain a specific fragment */\r\nconst $module = function (name) {\r\n\tif (typeof (name) === 'string') {\r\n\t\tvar fragment = $scope.fragments[name];\r\n\t\tif (!fragment) {\r\n\t\t\tthrow new Error(`apice.fragment.unknown_fragment[${name}]`);\r\n\t\t}\r\n\t\treturn fragment;\r\n\t}\r\n};\r\n\r\n/**\r\n * Registers a new fragment\r\n * @param name Fragment name\r\n * @param source Fragment content\r\n * @param controller Optional name of the controller associated with the fragment\r\n */\r\n$module.register = function (name, source, controller) {\r\n\tlogger.debug('Registering fragment. fragment={0}', name);\r\n\tvar fragment = new ApiceFragment(name, source, controller);\r\n\t$scope.fragments[name] = fragment;\r\n\treturn fragment;\r\n};\r\n\r\n/**\r\n * Allows to determine if a particular object is a fragment\r\n * @param obj Object instance to evaluate\r\n * @returns Boolean value to determine if the object is a fragment or not\r\n */\r\n$module.isFragment = function (obj) {\r\n\treturn (obj && obj instanceof ApiceFragment);\r\n};\r\n\r\nexport default $module;","import events from './events.mjs';\r\nimport element from './element.mjs';\r\nimport fragment from './fragment.mjs';\r\nimport errorHandler from './errorHandler.mjs';\r\nimport logging from './logging.mjs';\r\n\r\nconst $moduleName = 'apice.router';\r\nconst logger = logging.getLogger($moduleName);\r\nconst $module = {};\r\n\r\nconst $scope = {};\r\n// contains all the routes registered\r\n$scope.routes = [];\r\n// holds the reference to the default route if any\r\n$scope.defaultRoute = null;\r\n// holds the reference to the route that will be served when there is not default route and a pattern is not matched\r\n$scope.notFoundRoute = null;\r\n// Reference to the target element that receives the routing of fragments\r\n$scope.target = null;\r\n\r\n\r\n/**\r\n * Internal control method that is invoked when the hash receives a change\r\n * @param eventName String with the name of the event that triggered the change (mostly for tracing purposes)\r\n */\r\nfunction onHashChange(eventName) {\r\n\tlogger.debug('Hash change triggered. event={0}', eventName);\r\n\tconst hash = $module.hash();\r\n\tvar route = $module.match(hash);\r\n\tif (route) {\r\n\t\tlogger.debug('Serving route. pattern={0}', route.pattern);\r\n\t} else if ($scope.defaultRoute && (!hash || !$scope.notFoundRoute)) {\r\n\t\tif (hash) {\r\n\t\t\tlogger.warn('Route not found. Serving default hash={0}', hash);\r\n\t\t} else {\r\n\t\t\tlogger.debug('No hash found. Serving default router');\r\n\t\t}\r\n\t\troute = $scope.defaultRoute;\r\n\t} else if ($scope.notFoundRoute) {\r\n\t\t// TODO: define actions when there is no matching route and default hash is not defined\r\n\t\tlogger.warn('Route not found. Using no-found default routing. hash={0}', hash);\r\n\t\troute = $scope.notFoundRoute;\r\n\t} else {\r\n\t\terrorHandler.render({\r\n\t\t\tmodule: $moduleName,\r\n\t\t\tmessage: 'The requested resource was not found: ' + hash,\r\n\t\t\tcode: 'apice.router.no_matching_no_default'\r\n\t\t}); // FIXME: should we use a selector like $scope.target\r\n\t\treturn;\r\n\t}\r\n\troute.serve(hash);\r\n}\r\n\r\n/**\r\n * Class representing a hash that allows to parse it and evaluate its parts\r\n */\r\nclass RouteHash {\r\n\t#pattern\r\n\t#parts\r\n\t#parameters\r\n\r\n\tconstructor(pattern) {\r\n\t\tif (!pattern || typeof (pattern) !== 'string') {\r\n\t\t\tthrow Error('apice.router.hah.invalid_pattern');\r\n\t\t}\r\n\t\tthis.#pattern = pattern;\r\n\t\tthis.#parse();\r\n\t}\r\n\r\n\t#parse() {\r\n\t\tthis.#parts = [];\r\n\t\tthis.#parameters = [];\r\n\t\tvar parts = this.#pattern.split('/');\r\n\t\tfor (var idx = 0; idx < parts.length; idx++) {\r\n\t\t\tvar section = parts[idx];\r\n\t\t\tif (section.startsWith(':')) {\r\n\t\t\t\tthis.#parameters.push(section.substr(1));\r\n\t\t\t}\r\n\t\t\tthis.#parts.push(section);\r\n\t\t}\r\n\t}\r\n\r\n\tget pattern() {\r\n\t\treturn this.#pattern;\r\n\t}\r\n\r\n\tget count() {\r\n\t\treturn this.#parts.length;\r\n\t}\r\n\r\n\tget hasParameters() {\r\n\t\treturn this.#parameters.length > 0;\r\n\t}\r\n}\r\n\r\n/**\r\n * Class representing a route definition\r\n */\r\nclass ApiceRoute {\r\n\t// Object representing the router hash pattern\r\n\t#routeHash\r\n\t// Action to be executed when the route is executed\r\n\t#action\r\n\r\n\t/**\r\n\t * Creates an object with the router specifications\r\n\t * @param pattern String with the hash pattern to use for this router\r\n\t * @param action Function with the action to execute or reference to a fragment or a controller\r\n\t */\r\n\tconstructor(pattern, action) {\r\n\t\tif (!pattern || typeof (pattern) !== 'string') {\r\n\t\t\tthrow Error('apice.route.constructor.invalid_route_value');\r\n\t\t} else if (!action) {\r\n\t\t\tthrow Error('apice.route.constructor.missing_route_action');\r\n\t\t}\r\n\t\tthis.#routeHash = new RouteHash(pattern);\r\n\t\tthis.#action = action;\r\n\t}\r\n\r\n\tget pattern() {\r\n\t\treturn this.#routeHash.pattern;\r\n\t}\r\n\r\n\tasDefault() {\r\n\t\t$scope.defaultRoute = this;\r\n\t}\r\n\r\n\tasNotFound() {\r\n\t\t$scope.notFoundRoute = this;\r\n\t}\r\n\r\n\tmatch(hash) {\r\n\t\tif (!this.#routeHash.hasParameters) {\r\n\t\t\treturn hash === this.#routeHash.pattern;\r\n\t\t}\r\n\t\t// QUEDE AQUI IMPLEMENTANDO EL ALGORITMO DE HASHING\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Serves the route represented by the current instance, triggering its associated action\r\n\t */\r\n\tserve(hash) {\r\n\t\ttry {\r\n\t\t\tif (typeof (this.#action) === 'function') {\r\n\t\t\t\tlogger.trace('Serving routing from function. pattern={0}', this.pattern);\r\n\t\t\t\tthis.#action(hash);\r\n\t\t\t} else if (typeof (this.#action) === 'string') {\r\n\t\t\t\tlogger.trace('Serving routing from fragment ID. pattern={0} fragment={1}', this.pattern, this.#action);\r\n\t\t\t\tfragment(this.#action).render($scope.target);\r\n\t\t\t} else if (fragment.isFragment(this.#action)) {\r\n\t\t\t\tlogger.trace('Serving routing from fragment instance. pattern={0}', this.pattern);\r\n\t\t\t\tthis.#action.render($scope.target);\r\n\t\t\t} else if (typeof (this.#action.serve) === 'function') {\r\n\t\t\t\tlogger.trace('Serving routing from serviced instance. pattern={0}', this.pattern);\r\n\t\t\t\tthis.#action.serve();\r\n\t\t\t} else {\r\n\t\t\t\tthrow Error(`apice.router.invalid_action[${this.pattern}]`);\r\n\t\t\t}\r\n\t\t} catch (ex) {\r\n\t\t\terrorHandler.render({\r\n\t\t\t\tmodule: $moduleName,\r\n\t\t\t\tmessage: 'An error has occurred trying to serve the resource. Please contact technical support without closing this screen',\r\n\t\t\t\tcode: `apice.router.serve_error[${this.pattern}]`,\r\n\t\t\t\tcause: ex\r\n\t\t\t}, $scope.target);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Registers a route into the routing engine\r\n * @param pattern String with the path used for the route\r\n * @param action Function to be invoked when the route is executed, or reference to the fragment or the controller to be executed\r\n */\r\n$module.register = function (pattern, action) {\r\n\tlogger.debug('Registering route. pattern=' + pattern);\r\n\tvar route = new ApiceRoute(pattern, action);\r\n\t$scope.routes.push(route);\r\n\treturn route;\r\n};\r\n\r\n/**\r\n * Search for the route that matches a specific route value\r\n * @param route String with the route path to match\r\n * @returns Route instance that matches the path or null if nothing matches the path\r\n */\r\n$module.match = function (hash) {\r\n\tif (!hash || typeof (hash) !== 'string') {\r\n\t\treturn null;\r\n\t}\r\n\tfor (var idx = 0; idx < $scope.routes.length; idx++) {\r\n\t\tvar route = $scope.routes[idx];\r\n\t\tif (route.match(hash) === true) {\r\n\t\t\treturn route;\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\n/**\r\n * Obtains the current hash\r\n * @returns Current hash value in the location\r\n */\r\n$module.hash = function () {\r\n\tvar hash = window.location.hash;\r\n\tif (hash.startsWith('#')) {\r\n\t\thash = hash.substr(1);\r\n\t}\r\n\treturn hash;\r\n};\r\n\r\n/**\r\n * Initializes the execution of the routing engine\r\n */\r\n$module.start = function () {\r\n\tlogger.debug('Starting Apice router');\r\n\tevents.addListener(window, 'hashchange', () => {\r\n\t\tonHashChange('hashchange');\r\n\t});\r\n\t//util.events.addListener(window, 'popstate', () => {\r\n\t//    onHashChange('popstate');\r\n\t//    return false;\r\n\t//});\r\n\tevents.documentReady(() => {\r\n\t\tonHashChange('routerstart');\r\n\t});\r\n\treturn $module;\r\n};\r\n\r\n/**\r\n * Gets or sets the target element that will receive the content of any route associated with a fragment.  This method\r\n * is polymorphic. When no argument is provided returns the current target.\r\n * @param selector String with the selector of the target or reference to the DOM element that will receive the\r\n *                  content of any route that contains a fragment. When this is not provided the method will return\r\n *                  the selected target.\r\n * @returns When no selector is provided this method returns the defined target.\r\n */\r\n$module.target = function () {\r\n\t// getter mode\r\n\tif (arguments.length === 0) {\r\n\t\treturn $scope.target;\r\n\t}\r\n\t// setter mode\r\n\tvar selector = arguments[0];\r\n\tif (!selector) {\r\n\t\t$scope.target = null;\r\n\t} else {\r\n\t\t$scope.target = element(selector);\r\n\t\tif (!$scope.target) {\r\n\t\t\tlogger.error(`apice.router.target_notfound[${selector}]`);\r\n\t\t}\r\n\t}\r\n\tif (!$scope.target) {\r\n\t\tlogger.info('Using default routing target container');\r\n\t\tvar container = document.getElementById('apc-router-container');\r\n\t\tif (!container) {\r\n\t\t\tcontainer = document.createElement('div');\r\n\t\t\tcontainer.id = 'apc-router-container';\r\n\t\t\tdocument.body.appendChild(container);\r\n\t\t}\r\n\t\t$scope.target = element(container);\r\n\t}\r\n\treturn $module;\r\n};\r\n\r\nexport default $module;","import logging from '../logging.mjs';\r\n\r\nconst $moduleName = 'apice.ui.toast';\r\nconst $module = {};\r\nconst $scope = {};\r\nconst logger = logging.getLogger($moduleName);\r\n\r\n// contains the default titles\r\n$scope.defaultTitle = {};\r\n$scope.defaultTitle['error'] = 'Attention!';\r\n$scope.defaultTitle['warn'] = 'Warning!';\r\n$scope.defaultTitle['info'] = 'Information';\r\n$scope.defaultTitle['success'] = 'Sucess!';\r\n\r\n/** Internal method with the logic to create the top container that will hold all the toasts */\r\nfunction createToastContainer() {\r\n\tvar container = document.getElementById('apc-toast-container');\r\n\tif (!container) {\r\n\t\tcontainer = document.createElement('div');\r\n\t\tcontainer.id = 'apc-toast-container';\r\n\t\tdocument.body.appendChild(container);\r\n\t}\r\n\treturn container;\r\n}\r\n\r\n/** Class implementing the toast component */\r\nclass ApiceToast {\r\n\t// string with the toast type (error, warn, info, success)\r\n\t#style;\r\n\t// string with the toast title (or boolean false to remove the title area)\r\n\t#title;\r\n\t// string with the toast body or message\r\n\t#body;\r\n\t// icon to use\r\n\t#icon;\r\n\t// top container representing the toast box\r\n\t#box;\r\n\t// integer with the number of seconds before dismissing the toast or boolean false to avoid user dismissal or boolean true to enable manual dismissal\r\n\t#dismiss;\r\n\r\n\tconstructor(specs) {\r\n\t\tthis.#style = specs.style;\r\n\t\tthis.#title = { text: specs.title };\r\n\t\tthis.#body = { text: specs.message };\r\n\t\tthis.#icon = { resource: specs.icon };\r\n\t\tthis.#dismiss = specs.dismiss;\r\n\t\tthis.#render();\r\n\t}\r\n\r\n\t/** Allows to obtain the title of the toast (if any) */\r\n\tget title() {\r\n\t\tif (!this.#title.text && this.#title.text !== false) {\r\n\t\t\treturn $scope.defaultTitle[this.#style];\r\n\t\t}\r\n\t\treturn this.#title.text;\r\n\t}\r\n\r\n\t/** Returns the body message of the toast */\r\n\tget message() {\r\n\t\treturn this.#body.text;\r\n\t}\r\n\r\n\t/** Internal method to render (or refresh) the title area */\r\n\t#renderTitle() {\r\n\t\tvar text = this.title;\r\n\t\tif (!text) {\r\n\t\t\tif (this.#title.box) {\r\n\t\t\t\tthis.#title.box.style.display = 'none';\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.#title.box) {\r\n\t\t\tthis.#title.box = document.createElement('div');\r\n\t\t\tthis.#title.box.className = 'apc-header';\r\n\t\t\tthis.#box.appendChild(this.#title.box);\r\n\t\t}\r\n\t\tthis.#title.box.style.display = 'block';\r\n\t\tthis.#title.box.innerHTML = text;\r\n\t}\r\n\r\n\t/** Internal method to render (or refresh) the body area */\r\n\t#renderBody() {\r\n\t\tif (!this.#body.box) {\r\n\t\t\tthis.#body.box = document.createElement('div');\r\n\t\t\tthis.#body.box.className = 'apc-body';\r\n\t\t\tthis.#box.appendChild(this.#body.box);\r\n\t\t}\r\n\t\tthis.#body.box.innerHTML = this.message;\r\n\t}\r\n\r\n\t/** Internal method to render (or refresh) the icon */\r\n\t#renderIcon() {\r\n\t\tif (!this.#icon.resource) {\r\n\t\t\tif (this.#icon.box) {\r\n\t\t\t\tthis.#icon.box.style.display = 'none';\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.#icon.box) {\r\n\t\t\tthis.#icon.box = document.createElement('div');\r\n\t\t\tthis.#icon.box.className = 'apc-icon';\r\n\t\t\tthis.#box.appendChild(this.#icon.box);\r\n\t\t}\r\n\t\tif (this.#icon.resource === true) {\r\n\t\t\tthis.#icon.box.innerHTML = '&nbsp;';\r\n\t\t} else {\r\n\t\t\t// TODO: implement\r\n\t\t}\r\n\t}\r\n\r\n\t/** Internal method to create the visual representation of the toast */\r\n\t#render() {\r\n\t\tif (!this.#box) {\r\n\t\t\tthis.#box = document.createElement('div');\r\n\t\t}\r\n\t\tthis.#box.className = 'apc-toast apc-' + this.#style;\r\n\t\tthis.#renderIcon();\r\n\t\tthis.#renderTitle();\r\n\t\tthis.#renderBody();\r\n\t\tif (typeof (this.#dismiss) === 'number') {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.dismiss();\r\n\t\t\t}, this.#dismiss * 1000);\r\n\t\t} else if (this.#dismiss === true) {\r\n\t\t\tthis.#box.onclick = () => {\r\n\t\t\t\tthis.dismiss();\r\n\t\t\t};\r\n\t\t\tthis.#box.className += ' apc-clickable';\r\n\t\t}\r\n\t}\r\n\r\n\t/** Closes the toast */\r\n\tdismiss() {\r\n\t\tif (this.#box) {\r\n\t\t\tthis.#box.style.animationName = 'bounce-out';\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.#box.parentElement.removeChild(this.#box);\r\n\t\t\t\tthis.#box = null;\r\n\t\t\t}, 500);\r\n\t\t}\r\n\t}\r\n\r\n\t/** Adds the toast to a specific container */\r\n\tappendTo(container) {\r\n\t\tcontainer.insertBefore(this.#box, container.firstChild);\r\n\t}\r\n}\r\n\r\n/**\r\n * Internal method with the common behavior to render a toast\r\n * @param style String with the toast style (error, warn, info, success)\r\n * @param args Arguments to create the toast. It can be:\r\n * \t\t\t- An object containing the following attributes:\r\n * \t\t\t\t* title: String with the title text or boolean false to omit the use of title\r\n * \t\t\t\t* message: String with the message\r\n * \t\t\t\t* icon: String with the icon to use or boolean false to remove the icon\r\n * \t\t\t\t* dismiss: Number of seconds to dismiss the message, or boolean true to make it manually dismissable or false to avoid manual dismiss\r\n * \t\t\t- A string with the toast message (the default title and icon will be used and the toast will be manually dismissable)\r\n * \t\t\t- A string with the title (or boolean false to avoid the title) and the toast message\r\n */\r\nfunction renderToast(style, ...args) {\r\n\tconst specs = { style: style, title: null, message: null, icon: true, dismiss: true };\r\n\tif (args.length === 1) {\r\n\t\tif (typeof (args[0]) === 'object') {\r\n\t\t\tObject.assign(specs, args[0]);\r\n\t\t} else {\r\n\t\t\tspecs.message = args[0];\r\n\t\t}\r\n\t} else {\r\n\t\tspecs.title = args[0];\r\n\t\tspecs.message = args[1];\r\n\t\tspecs.dismiss = args[2] ?? true;\r\n\t}\r\n\tif (!specs.message) {\r\n\t\tlogger.warn('A toast has been requested without message. The toast has been ignored');\r\n\t\treturn;\r\n\t}\r\n\tconst toast = new ApiceToast(specs);\r\n\tconst container = createToastContainer();\r\n\ttoast.appendTo(container);\r\n}\r\n\r\n/** Creates an error toast */\r\n$module.error = function () {\r\n\trenderToast('error', ...arguments);\r\n};\r\n\r\n/** Creates a warning toast */\r\n$module.warn = function () {\r\n\trenderToast('warn', ...arguments);\r\n};\r\n\r\n/** Creates an information toast */\r\n$module.info = function () {\r\n\trenderToast('info', ...arguments);\r\n};\r\n\r\n/** Creates a success toast */\r\n$module.success = function () {\r\n\trenderToast('success', ...arguments);\r\n};\r\n\r\n/** Defines the maximum number of toast to use */\r\n$module.setMax = function () {\r\n\t// TODO: implement\r\n};\r\n\r\nexport default $module;\r\n","import random from '../random.mjs';\r\nimport element from '../element.mjs';\r\nimport logging from '../logging.mjs';\r\n\r\nconst $moduleName = 'apice.ui.form';\r\nconst $module = {};\r\nconst logger = logging.getLogger($moduleName);\r\n\r\nfunction getSizeClass(specs) {\r\n\tif (specs.size === 'xs') {\r\n\t\treturn ' apc-xs';\r\n\t} else if (specs.size === 'sm') {\r\n\t\treturn ' apc-sm';\r\n\t} else if (!specs.size || specs.size === 'md') {\r\n\t\treturn ' apc-md';\r\n\t} else if (specs.size === 'lg') {\r\n\t\treturn ' apc-lg';\r\n\t} else {\r\n\t\treturn ' apc-xl';\r\n\t}\r\n}\r\n\r\nfunction getFieldClass(specs) {\r\n\tlet fieldClass = 'apc-field';\r\n\t// type modifier\r\n\tif (specs.type === 'input') {\r\n\t\tfieldClass += ' apc-text';\r\n\t} else if (specs.type === 'check') {\r\n\t\tfieldClass += ' apc-check';\r\n\t} else if (specs.type === 'select') {\r\n\t\tfieldClass += ' apc-select';\r\n\t}\r\n\t// sizing  modifier\r\n\tfieldClass += getSizeClass(specs);\r\n\treturn fieldClass;\r\n}\r\n\r\n/**\r\n * Internal method to create an option DOM elements and add it to a field\r\n * @param field Reference to the field to add the option on it\r\n * @param label String with the option label\r\n * @param value String with the value\r\n */\r\nfunction createOption(field, label, value) {\r\n\tconst option = document.createElement('option');\r\n\toption.innerHTML = label;\r\n\toption.value = value;\r\n\tfield.appendChild(option);\r\n}\r\n\r\n/**\r\n * Fills the options in a select field based on specific data\r\n * @param field Reference to the field to add the options on it\r\n * @param data Array with the data in the form {label: 'string', value: 'string'}, or reference to a function that produces such array, or promise that produces the array when is fullfilled\r\n */\r\nfunction fillSelect(field, data) {\r\n\tif (!data) {\r\n\t\treturn;\r\n\t} else if (typeof (data) === 'function') {\r\n\t\tconst result = data(); // FIXME: add error handling\r\n\t\tfillSelect(field, result);\r\n\t\treturn;\r\n\t} else if (data instanceof Promise) {\r\n\t\tdata.then(result => {\r\n\t\t\tfillSelect(field, result);\r\n\t\t}).catch(err => {\r\n\t\t\t// FIXME: implement\r\n\t\t\tconsole.err(err);\r\n\t\t});\r\n\t\treturn;\r\n\t} else if (!Array.isArray(data) || data.length === 0) {\r\n\t\tdata = ['No data'];\r\n\t}\r\n\tcreateOption(field, 'Please select...', '');\r\n\tdata.map(item => {\r\n\t\tcreateOption(field, item.label, item.value);\r\n\t});\r\n}\r\n\r\nclass BlockElement {\r\n\t#element;\r\n\t#rendered;\r\n\r\n\tconstructor(className, size) {\r\n\t\tthis.#element = document.createElement('div');\r\n\t\tthis.#element.className = className + getSizeClass({ size: size });\r\n\t\tthis.#element.innerHTML = '&nbsp;';\r\n\t}\r\n\r\n\trender(container) {\r\n\t\tif (this.#rendered) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#rendered = true;\r\n\t\tcontainer.appendChild(this.#element);\r\n\t}\r\n}\r\n\r\nclass ApiceButton {\r\n\t#id;\r\n\t#element;\r\n\t#rendered;\r\n\r\n\tconstructor(specs) {\r\n\t\tif (!specs) {\r\n\t\t\tthrow Error('apice.ui.form.button.null_specs');\r\n\t\t}\r\n\t\tif (!specs.id) {\r\n\t\t\tspecs.id = 'btn_' + random.tinyId();\r\n\t\t}\r\n\t\tthis.#id = specs.id;\r\n\t\tthis.#element = document.createElement('button');\r\n\t\tthis.#element.id = specs.id;\r\n\t\tthis.#element.className = 'apc-button';\r\n\t\tthis.#element.innerHTML = specs.label;\r\n\t\tthis.#rendered = false;\r\n\t}\r\n\r\n\tclick(fnc) {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tif (this.#element.onclick) {\r\n\t\t\t\tthis.#element.onclick();\r\n\t\t\t\t// FIXME: change by trigger event\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (typeof (fnc) !== 'function') {\r\n\t\t\tthis.#element.onclick = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#element.onclick = fnc;\r\n\t}\r\n\r\n\trender(container) {\r\n\t\tif (this.#rendered) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#rendered = true;\r\n\t\tcontainer.appendChild(this.#element);\r\n\t}\r\n}\r\n\r\nclass ApiceButtonBar {\r\n\t#buttons;\r\n\t#rendered;\r\n\t#element;\r\n\r\n\tconstructor() {\r\n\t\tthis.#buttons = [];\r\n\t\tthis.#rendered = false;\r\n\t\tthis.#element = document.createElement('div');\r\n\t\tthis.#element.className = 'apc-button-bar';\r\n\t}\r\n\r\n\taddButton(specs) {\r\n\t\tif (!specs) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst button = new ApiceButton(specs);\r\n\t\tthis.#buttons.push(button);\r\n\t\tif (this.#rendered) {\r\n\t\t\tbutton.render();\r\n\t\t}\r\n\t\treturn button;\r\n\t}\r\n\r\n\trender(container) {\r\n\t\tif (this.#rendered) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#rendered = true;\r\n\t\tthis.#buttons.map(button => button.render(this.#element));\r\n\t\tcontainer.appendChild(this.#element);\r\n\t}\r\n}\r\n\r\n/** Represents a field inside a dynamic Apice form */\r\nclass ApiceField {\r\n\t#id;\r\n\t#type;\r\n\t#label;\r\n\t#group;\r\n\t#field;\r\n\t#source;\r\n\r\n\tconstructor(specs) {\r\n\t\tif (!specs.id) {\r\n\t\t\tspecs.id = 'field_' + random.tinyId();\r\n\t\t}\r\n\t\tif (!specs.type) {\r\n\t\t\tspecs.type = 'input';\r\n\t\t}\r\n\t\tthis.#id = specs.id;\r\n\t\tthis.#type = specs.type;\r\n\t\tthis.#label = specs.label;\r\n\t\tthis.#group = document.createElement('div');\r\n\t\tthis.#group.className = getFieldClass(specs);\r\n\t\tthis.#createField(specs);\r\n\t}\r\n\r\n\t/** Internal method to create the label for the form field represented by the instance */\r\n\t#renderLabel() {\r\n\t\tif (this.#label) {\r\n\t\t\tconst labelBox = document.createElement('label');\r\n\t\t\tlabelBox.setAttribute('for', this.#id);\r\n\t\t\tlabelBox.className = 'apc-label';\r\n\t\t\tlabelBox.innerHTML = this.#label;\r\n\t\t\tthis.#group.appendChild(labelBox);\r\n\t\t}\r\n\t}\r\n\r\n\t/** Internal method to create the area of the field represented by the instance */\r\n\t#createField(specs) {\r\n\t\tif (this.#type === 'input') {\r\n\t\t\tthis.#field = document.createElement('input');\r\n\t\t\tthis.#field.type = 'text';\r\n\t\t} else if (this.#type === 'check') {\r\n\t\t\tthis.#field = document.createElement('input');\r\n\t\t\tthis.#field.type = 'checkbox';\r\n\t\t} else if (this.#type === 'select') {\r\n\t\t\tthis.#field = document.createElement('select');\r\n\t\t\tfillSelect(this.#field, specs.source);\r\n\t\t}\r\n\t}\r\n\r\n\trender(container) {\r\n\t\tif (this.#field) {\r\n\t\t\tthis.#group.appendChild(this.#field);\r\n\t\t}\r\n\t\tthis.#renderLabel();\r\n\t\tcontainer.appendChild(this.#group);\r\n\t}\r\n}\r\n\r\n/** Represents a dynamic form */\r\nclass ApiceForm {\r\n\t/** Holds the form ID */\r\n\t#id\r\n\t/** Allows to determine if the form has been rendered already or not */\r\n\t#rendered;\r\n\t/** Array containing the form content objects */\r\n\t#content;\r\n\t/** Reference to the top DOM element containing the visual representation of the form */\r\n\t#element;\r\n\r\n\tconstructor(selector) {\r\n\t\tthis.#id = 'form_' + random.tinyId();\r\n\t\tthis.#content = [];\r\n\t\tthis.#rendered = false;\r\n\r\n\t\tconst formElement = document.createElement('div');\r\n\t\tformElement.id = this.#id;\r\n\t\tformElement.className = 'apc-form';\r\n\t\tthis.#element = formElement;\r\n\r\n\t\tconst container = element(selector);\r\n\t\tcontainer.append(formElement);\r\n\t}\r\n\r\n\t#addComponent(component) {\r\n\t\tif (!component) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#content.push(component);\r\n\t\tif (this.#rendered) {\r\n\t\t\tcomponent.render(this.#element);\r\n\t\t}\r\n\t}\r\n\r\n\taddField(specs) {\r\n\t\tif (!specs) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst component = new ApiceField(specs);\r\n\t\tthis.#addComponent(component);\r\n\t\treturn component;\r\n\t}\r\n\r\n\taddSpacer(size) {\r\n\t\tvar component = new BlockElement('apc-spacer', size);\r\n\t\tthis.#addComponent(component);\r\n\t}\r\n\r\n\taddBreak() {\r\n\t\tvar component = new BlockElement('apc-break');\r\n\t\tthis.#addComponent(component);\r\n\t}\r\n\r\n\taddButtonBar() {\r\n\t\tvar component = new ApiceButtonBar();\r\n\t\tthis.#addComponent(component);\r\n\t\treturn component;\r\n\t}\r\n\r\n\taddButton(specs) {\r\n\t\tif (!specs) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar component = new ApiceButton(specs);\r\n\t\tthis.#addComponent(component);\r\n\t\treturn component;\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.#rendered) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#rendered = true;\r\n\t\tthis.#content.map(child => child.render(this.#element));\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\n$module.create = function (selector) {\r\n\treturn new ApiceForm(selector);\r\n};\r\n\r\n/**\r\n * Internal utility method tha collects the value from a form item\r\n * @param item Item to collect the value from\r\n * @returns Value of the item according to the extraction rules applicable to the type of field\r\n */\r\nfunction getItemValue(item) {\r\n\tif (!item) {\r\n\t\treturn null;\r\n\t}\r\n\tif (item.tagName === 'INPUT' && item.type === 'checkbox') {\r\n\t\tif (item.value === '' || item.value === 'on') {\r\n\t\t\treturn item.checked;\r\n\t\t} else if (!item.checked) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\treturn item.value;\r\n}\r\n\r\n/**\r\n * Collect the value from an item and sets its value in a specific collector\r\n * @param collector Collector to receive the values\r\n * @param item Item to collect the value from it\r\n */\r\nfunction collectItem(collector, item) {\r\n\tlet collect = item.getAttribute('collect');\r\n\tif (!collect) {\r\n\t\treturn;\r\n\t}\r\n\tcollect = collect.split('.');\r\n\tfor (let idx = 0; idx < collect.length; idx++) {\r\n\t\tconst attr = collect[idx];\r\n\t\tif (idx < collect.length - 1) {\r\n\t\t\tif (!collector[attr]) {\r\n\t\t\t\tcollector[attr] = {};\r\n\t\t\t}\r\n\t\t\tcollector = collector[attr];\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tconst value = getItemValue(item);\r\n\t\tif (value !== null) {\r\n\t\t\tcollector[attr] = value;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Iterates all the collectable items inside a container and collects its values\r\n * @param container Apice element representing the root element to collect from it\r\n * @returns Object with the data collected according to the collectible items defined on the container\r\n */\r\nfunction extractCollectables(container) {\r\n\tconst matches = container.select('[collect]');\r\n\tif (!matches) {\r\n\t\tlogger.warn('apice.form.collect.no_collectable_fields');\r\n\t\treturn {};\r\n\t}\r\n\tconst collector = {};\r\n\tmatches.each(item => {\r\n\t\tcollectItem(collector, item);\r\n\t});\r\n\treturn collector;\r\n}\r\n\r\n/** Collects the data fields that may exist inside a specific element */\r\n$module.collect = function (selector) {\r\n\tif (!selector) {\r\n\t\tselector = document.body;\r\n\t}\r\n\tconst container = element(selector);\r\n\tif (!container) {\r\n\t\tlogger.warn(`apice.form.collect.unknown_container[${selector}]`);\r\n\t\treturn null;\r\n\t}\r\n\treturn extractCollectables(container);\r\n};\r\n\r\nexport default $module;\r\n","import random from '../random.mjs';\r\nimport element from '../element.mjs';\r\nimport logging from '../logging.mjs';\r\nimport fragment from '../fragment.mjs';\r\nimport util from '../util.mjs';\r\nimport errorHandler from '../errorHandler.mjs';\r\n\r\nconst $moduleName = 'apice.ui.box';\r\nconst $module = {};\r\nconst logger = logging.getLogger($moduleName);\r\n\r\nfunction createDiv(className, id) {\r\n\tconst divElem = document.createElement('div');\r\n\tdivElem.className = className;\r\n\tif (id) {\r\n\t\tdivElem.id = id;\r\n\t}\r\n\treturn divElem;\r\n}\r\n\r\n/** Internal method to add a closing button for a specific container */\r\nfunction createClosingButton(container, box) {\r\n\tconst closing = createDiv('apc-closing');\r\n\tconst button = document.createElement('button');\r\n\tclosing.appendChild(button);\r\n\tcontainer.appendChild(closing);\r\n\tbutton.onclick = function () {\r\n\t\tbox.close();\r\n\t};\r\n}\r\n\r\n/**\r\n * Internal method to create the box header\r\n * @param specs Object with the box creation specifications\r\n * @param container Container HTMLElement that holds all the box parts\r\n * @returns Reference to the Apice Element representing the header\r\n */\r\nfunction createHeader(specs, container) {\r\n\tconst elem = createDiv('apc-header');\r\n\telem.style.display = 'none';\r\n\tcontainer.appendChild(elem);\r\n\treturn element(elem);\r\n}\r\n\r\n/**\r\n * Internal method to create the box body\r\n * @param container Container HTMLElement that holds all the box parts\r\n * @returns Reference to the Apice Element representing the body\r\n */\r\nfunction createBody(container) {\r\n\tconst elem = createDiv('apc-body');\r\n\tcontainer.appendChild(elem);\r\n\treturn element(elem);\r\n}\r\n\r\n/**\r\n * Internal method to create the box footer\r\n * @param specs Object with the box creation specifications\r\n * @param container Container HTMLElement that holds all the box parts\r\n * @returns Reference to the Apice Element representing the footer\r\n */\r\nfunction createFooter(specs, container) {\r\n\tconst elem = createDiv('apc-footer');\r\n\telem.style.display = 'none';\r\n\tcontainer.appendChild(elem);\r\n\treturn element(elem);\r\n}\r\n\r\n/** Creates the container of an ApiceBox and its internal areas */\r\nfunction createBoxContainer(specs, box) {\r\n\tconst content = createDiv('apc-box-content');\r\n\tconst parts = {};\r\n\tparts.header = createHeader(specs, content);\r\n\tparts.body = createBody(content);\r\n\tparts.footer = createFooter(specs, content);\r\n\r\n\tparts.box = createDiv('apc-box', specs.id);\r\n\tif (specs.fullscreen) {\r\n\t\tparts.box.className += ' apc-full';\r\n\t} else if (Array.isArray(specs.size)) {\r\n\t\tparts.box.className += ' apc-non-full';\r\n\t\tparts.box.style.width = specs.size[0];\r\n\t\tparts.box.style.height = specs.size[1];\r\n\t}\r\n\tparts.box.appendChild(content);\r\n\tif (specs.closeable) {\r\n\t\tcreateClosingButton(parts.box, box);\r\n\t}\r\n\treturn parts;\r\n}\r\n\r\n/** Class implementing the box component */\r\nclass ApiceBox {\r\n\t// identifier of the current box instance\r\n\t#id;\r\n\t// Object containin the main box parts (area, header, body, footer)\r\n\t#elements;\r\n\t// numeric indicator to determine the status of the box\r\n\t#status; // 1=open 0=closed -1=detached\r\n\r\n\tconstructor(specs) {\r\n\t\tif (!specs.id) {\r\n\t\t\tspecs.id = 'box-' + random.tinyId();\r\n\t\t}\r\n\t\tthis.#id = specs.id;\r\n\t\tlogger.info('Creating box. id={0}', specs.id);\r\n\t\tthis.#status = -1;\r\n\t\tthis.#elements = createBoxContainer(specs, this);\r\n\t}\r\n\r\n\t/**\r\n\t * Append the current box instance as a child of another element\r\n\t * @param target String with the selector to the element to append the box into it, or reference to its HTMLElement or Apice element\r\n\t */\r\n\tappendTo(target) {\r\n\t\telement.append(target, this.#elements.box);\r\n\t\tif (this.#status === -1) {\r\n\t\t\tthis.#status = 0;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Closes the current box */\r\n\tclose() {\r\n\t\tif (this.#status === 1) {\r\n\t\t\tlogger.info('Closing box. id={0}', this.#id);\r\n\t\t\tthis.#status = 0;\r\n\t\t\tthis.#elements.box.style.display = 'none';\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Opens the current box and returns a promise that is executed after it has been opened\r\n\t * @param content Content to set (or omit this argument to maintain the original content set to the box)\r\n\t * @returns Promise fulfilled when the content is loaded and the box is opened\r\n\t */\r\n\topen(content) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tvar contentPromise;\r\n\t\t\tif (content) {\r\n\t\t\t\tcontentPromise = this.content(content);\r\n\t\t\t} else {\r\n\t\t\t\tcontentPromise = Promise.resolve();\r\n\t\t\t}\r\n\t\t\tif (!this.#status === -1) {\r\n\t\t\t\tthis.appendTo(document.body);\r\n\t\t\t}\r\n\t\t\tcontentPromise.then(() => {\r\n\t\t\t\tif (this.#status === 0) {\r\n\t\t\t\t\tthis.#status = 1;\r\n\t\t\t\t\tthis.#elements.box.style.display = 'block';\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tresolve(true);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresolve(false);\r\n\t\t\t\t}\r\n\t\t\t}).catch(ex => {\r\n\t\t\t\treject(ex);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Renders a specificic content inside the box\r\n\t * @param content String with thec ontent to add, or reference to an HTMLElement, Apice Element or Promise to be fulfilled with the content\r\n\t * @returns Promise to be fulfilled after the content has been loaded\r\n\t */\r\n\tcontent(content) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tif (util.isPromise(content)) {\r\n\t\t\t\tcontent.then(result => {\r\n\t\t\t\t\tthis.content(result);\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t}).catch(ex => {\r\n\t\t\t\t\tthis.close();\r\n\t\t\t\t\terrorHandler.render(ex);\r\n\t\t\t\t\treject();\r\n\t\t\t\t});\r\n\t\t\t} else if (fragment.isFragment(content)) {\r\n\t\t\t\tcontent.render(this.#elements.body).then(resolve).catch(reject);\r\n\t\t\t} else {\r\n\t\t\t\tthis.#elements.body.content(content);\r\n\t\t\t\tresolve();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\n$module.create = function (specs) {\r\n\tif (!specs) {\r\n\t\tspecs = {};\r\n\t} else if (typeof (specs) === 'string') {\r\n\t\tspecs = { id: specs };\r\n\t}\r\n\tif (typeof (specs.fullscreen) !== 'boolean') {\r\n\t\tspecs.fullscreen = false;\r\n\t}\r\n\tif (typeof (specs.closeable) !== 'boolean') {\r\n\t\tspecs.closeable = false;\r\n\t}\r\n\tif (!specs.size && !specs.fullscreen) {\r\n\t\tspecs.size = ['50%', '50%'];\r\n\t}\r\n\treturn new ApiceBox(specs);\r\n};\r\n\r\nexport default $module;\r\n","import logging from '../logging.mjs';\r\nimport events from '../events.mjs';\r\n\r\nconst $module = {};\r\nconst $moduleName = 'apice.ui.mask';\r\nconst logger = logging.getLogger($moduleName);\r\n\r\n/** Shows the protective mask */\r\n$module.show = function () {\r\n\tlogger.trace('Showing protective mask');\r\n\treturn new Promise(resolve => {\r\n\t\tvar mask = document.getElementById('apice-mask');\r\n\t\tif (!mask) {\r\n\t\t\tmask = document.createElement('div');\r\n\t\t\tmask.id = 'apice-mask';\r\n\t\t\tmask.className = 'apc-mask';\r\n\t\t\tdocument.body.appendChild(mask);\r\n\t\t}\r\n\t\tmask.style.display = 'block';\r\n\t\tevents.waitAnimation(mask, 'apc-mask apc-open', resolve);\r\n\t});\r\n};\r\n\r\n/** Hides the protective mask */\r\n$module.hide = function () {\r\n\tlogger.trace('Hidding protective mask');\r\n\treturn new Promise(resolve => {\r\n\t\tconst mask = document.getElementById('apice-mask');\r\n\t\tif (mask) {\r\n\t\t\tevents.waitAnimation(mask, 'apc-mask apc-closed', () => {\r\n\t\t\t\tmask.style.display = 'none';\r\n\t\t\t\tresolve();\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexport default $module;\r\n","import random from '../random.mjs';\r\nimport events from '../events.mjs';\r\nimport element from '../element.mjs';\r\nimport logging from '../logging.mjs';\r\nimport mask from './mask.mjs';\r\n\r\nconst $moduleName = 'apice.ui.dialog';\r\nconst $module = {};\r\nconst logger = logging.getLogger($moduleName);\r\nconst $scope = {};\r\n// Holds the current open dialog (if any) or null if there is no open dialog\r\n$scope.current = null;\r\n// Holds the queue of dialogs\r\n$scope.queue = [];\r\n// Will hold the dialog top container\r\n$scope.container = null;\r\n// Reference to the closing button\r\n$scope.closing = null;\r\n// Will hold the dialog header container\r\n$scope.header = null;\r\n// Will hold the dialog body container\r\n$scope.body = null;\r\n// Will hold the dialog footer container\r\n$scope.footer = null;\r\n// indicator of the dialog visual status 1=open 0=closed\r\n$scope.status = 0;\r\n\r\n/** Contains all the default titles */\r\n$scope.titles = {};\r\n$scope.titles['error'] = 'Atention!';\r\n$scope.titles['warn'] = 'Warning!';\r\n$scope.titles['info'] = 'Information';\r\n$scope.titles['success'] = 'Success!';\r\n\r\n/** Removes a dialog instance from the queue */\r\nfunction removeFromQueue(dialog) {\r\n\tif (!dialog) {\r\n\t\treturn;\r\n\t}\r\n\tfor (let idx = 0; idx < $scope.queue.length; idx++) {\r\n\t\tconst entry = $scope.queue[idx];\r\n\t\tif (entry.dialog === dialog) {\r\n\t\t\t$scope.queue.splice(idx, 1);\r\n\t\t\tlogger.debug('The dialog has been removed. id={0}', dialog.id);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tlogger.warn('The dialog instance could not be removed from the queue since it was not found. id={0}', dialog.id);\r\n}\r\n\r\n/**\r\n * Internal utility method to create a dialog part (header, body, footer)\r\n * @param container Container to add the dialog part to it\r\n * @param className String with the css class to set into the dialog part\r\n */\r\nfunction createDialogPart(container, className) {\r\n\tconst elem = document.createElement('div');\r\n\telem.className = className;\r\n\tcontainer.append(elem);\r\n\treturn element(elem);\r\n}\r\n\r\n/** Create the dialog singleton instance */\r\nfunction createDialog() {\r\n\tif (!$scope.container) {\r\n\t\tlogger.debug('Creating the dialog container');\r\n\t\tlet container = document.getElementById('apice-dialog');\r\n\t\tif (!container) {\r\n\t\t\tcontainer = document.createElement('div');\r\n\t\t\tcontainer.id = 'apice-dialog';\r\n\t\t\tcontainer.className = 'apc-dialog';\r\n\t\t\tdocument.body.appendChild(container);\r\n\t\t}\r\n\t\tcontainer = element(container);\r\n\t\t$scope.container = container;\r\n\t\t$scope.closing = document.createElement('button');\r\n\t\t$scope.closing.innerHTML = '&nbsp;';\r\n\t\tconst closingArea = createDialogPart(container, 'apc-closing');\r\n\t\tclosingArea.content($scope.closing);\r\n\t\t$scope.header = createDialogPart(container, 'apc-header');\r\n\t\t$scope.body = createDialogPart(container, 'apc-body');\r\n\t\t$scope.footer = createDialogPart(container, 'apc-footer apc-button-bar');\r\n\t}\r\n}\r\n\r\n/** Creates and renders the HTMLElements to represent a dialog */\r\nfunction openDialog(dialog, render) {\r\n\tif ($scope.status === 1) {\r\n\t\tlogger.debug('Dialog container is already visible');\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\t$scope.status = 1;\r\n\tcreateDialog();\r\n\tlogger.debug('Displaying the dialog container');\r\n\trender();\r\n\tconst promises = [];\r\n\tpromises[0] = mask.show();\r\n\tpromises[1] = new Promise(resolve => {\r\n\t\tevents.waitAnimation($scope.container, 'apc-dialog apc-open apc-' + dialog.style, resolve);\r\n\t});\r\n\treturn Promise.all(promises);\r\n}\r\n\r\n/** Remove the visual elements associated with the dialog */\r\nfunction closeDialog() {\r\n\tif ($scope.status === 0) {\r\n\t\tlogger.debug('Dialog container is already closed');\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\t$scope.status = 0;\r\n\tlogger.debug('Closing the dialog container');\r\n\tconst promises = [];\r\n\tpromises[0] = mask.hide();\r\n\tpromises[1] = new Promise(resolve => {\r\n\t\tevents.waitAnimation($scope.container, 'apc-dialog apc-closed', function() {\r\n\t\t\t$scope.header.content('');\r\n\t\t\t$scope.body.content('');\r\n\t\t\t$scope.footer.content('');\r\n\t\t\tresolve();\r\n\t\t});\r\n\t});\r\n\treturn Promise.all(promises);\r\n}\r\n\r\n/**\r\n * Opens the next dialog from the queue (if any)\r\n * @returns Boolean value to determine if another dialog was in the queue\r\n */\r\nfunction nextDialog() {\r\n\tif ($scope.queue.length === 0) {\r\n\t\tlogger.debug('No more dialogs in the queue');\r\n\t\treturn false;\r\n\t}\r\n\tlogger.debug('Opening the next dialog from the queue');\r\n\tconst entry = $scope.queue.shift();\r\n\tentry.dialog.open().then(entry.resolve).catch(entry.reject);\r\n\treturn true;\r\n}\r\n\r\n/**\r\n * Internal utility method that triggers all the listeners in an event list\r\n * @param events Array with the events to execute \r\n */\r\nfunction triggerEvents(events) {\r\n\tfor(let idx=0; idx < events.length; idx++) {\r\n\t\tconst listener = events[idx];\r\n\t\ttry {\r\n\t\t\tlistener();\r\n\t\t} catch(ex) {\r\n\t\t\tlogger.error('An error has occurred trying to execute an event listener', ex);\r\n\t\t\t// TODO: should we use the error handler\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Internal method to render a button spec inside the dialog footer area\r\n * @param dialog Reference to the dialog instance\r\n * @param specs Button specifications\r\n */\r\nfunction renderButton(dialog, specs) {\r\n\tif(!specs) {\r\n\t\treturn;\r\n\t} else if(typeof(specs) === 'string') {\r\n\t\tspecs = { label: specs, close: true };\r\n\t}\r\n\tconst button = document.createElement('button');\r\n\tbutton.className = 'apc-button';\r\n\tif(specs.className) {\r\n\t\tbutton.className += ' ' + specs.className;\r\n\t}\r\n\tbutton.innerHTML = specs.label;\r\n\tif(typeof(specs.action) === 'function') {\r\n\t\tbutton.onclick = () => {\r\n\t\t\tif(specs.action() !== false && specs.close !== false) {\r\n\t\t\t\tdialog.close();\r\n\t\t\t}\r\n\t\t};\r\n\t} else if(specs.close) {\r\n\t\tbutton.onclick = () => {\r\n\t\t\tdialog.close();\r\n\t\t};\r\n\t}\r\n\t$scope.footer.append(button);\r\n}\r\n\r\n/** Class implementing the dialog components */\r\nclass ApiceDialog {\r\n\t// Holds the identifier for this instance\r\n\t#id;\r\n\t// String with the type of dialog (error, warn, info, success)\r\n\t#style;\r\n\t// Object with all the binded events for this object\r\n\t#events;\r\n\t// Contains the title defined for this dialog\r\n\t#title;\r\n\t// Contains the body message for this dialog\r\n\t#body;\r\n\t// Array with the button specification used for this dialog\r\n\t#buttons;\r\n\r\n\tconstructor(specs) {\r\n\t\tif (!specs.id) {\r\n\t\t\tspecs.id = `dialog_${random.tinyId()}`;\r\n\t\t}\r\n\t\tthis.#id = specs.id;\r\n\t\tthis.#style = specs.style;\r\n\t\tthis.#title = specs.title;\r\n\t\tthis.#body = specs.body;\r\n\t\tthis.#buttons = [];\r\n\t\tthis.#events = {};\r\n\t\tthis.#events.close = [];\r\n\t}\r\n\r\n\t/** Allows to obtain the identifier for the current instance */\r\n\tget id() {\r\n\t\treturn this.#id;\r\n\t}\r\n\r\n\t/** Obtains the effective title applicable for this instance */\r\n\tget title() {\r\n\t\tif(!this.#title) {\r\n\t\t\treturn $scope.titles[this.#style];\r\n\t\t}\r\n\t\treturn this.#title;\r\n\t}\r\n\r\n\t/** Allows to obtain a string to determine the type of dialog (error, warn, info, success) */\r\n\tget style() {\r\n\t\treturn this.#style;\r\n\t}\r\n\r\n\t/**\r\n\t * Opens the dialog\r\n\t * @returns A promise to be fulfilled after the dialog is opened\r\n\t */\r\n\topen() {\r\n\t\tif ($scope.current === this) {\r\n\t\t\tlogger.debug('The dialog instance is already opened. id={0}', this.id);\r\n\t\t\treturn Promise.resolve();\r\n\t\t} else if ($scope.current) {\r\n\t\t\tlogger.debug('Another dialog instance is opened. The current dialog is queued. id={0}', this.id);\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t$scope.queue.push({ dialog: this, resolve: resolve, reject: reject });\r\n\t\t\t});\r\n\t\t}\r\n\t\tlogger.debug('Opening dialog instance. id={0}', this.id);\r\n\t\t$scope.current = this;\r\n\t\treturn openDialog(this, () => {\r\n\t\t\t$scope.closing.onclick = () => {\r\n\t\t\t\tthis.close();\r\n\t\t\t};\r\n\t\t\t$scope.header.content(this.title);\r\n\t\t\t$scope.body.content(this.#body);\r\n\t\t\t$scope.footer.content('');\r\n\t\t\tfor(let bdx=0; bdx < this.#buttons.length; bdx++) {\r\n\t\t\t\tconst buttonSpec = this.#buttons[bdx];\r\n\t\t\t\trenderButton(this, buttonSpec);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Closes the dialog\r\n\t * @returns A promise to be fulfilled after the dialog is closed\r\n\t */\r\n\tclose() {\r\n\t\t// if the current open dialog is not the current instance then we just need to remove\r\n\t\t// it from the queue\r\n\t\tif ($scope.current !== this) {\r\n\t\t\tlogger.debug('The dialog cannot be closed because it is not opened. Removing it from the queue. id={0}', this.id);\r\n\t\t\tremoveFromQueue(this);\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t\tlogger.debug('Closing dialog. id={0}', this.id);\r\n\t\t$scope.current = null;\r\n\t\treturn closeDialog().then(() => {\r\n\t\t\ttriggerEvents(this.#events.close);\r\n\t\t\tnextDialog();\r\n\t\t});\r\n\t}\r\n\r\n\t/** Adds a listener to be executed after the dialog has been closed */\r\n\tonClose(listener) {\r\n\t\tif (typeof (listener) === 'function') {\r\n\t\t\tthis.#events.close.push(listener);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a button to the current dialog\r\n\t * @param specs Button specification or string with the button label to create a close button.\r\n\t * \t\t\tThe button specification will use the following attributes:\r\n\t * \t\t\t- label: String with the button label or content\r\n\t * \t\t\t- close: Boolean value to define if the button should close the dialog after the action\r\n\t * \t\t\t- action: Function to be executed when the button is pressed. If the button should close\r\n\t * \t\t\t\tthe dialog after the action this method can return a boolean false to prevent it.\r\n\t */\r\n\taddButton(specs) {\r\n\t\tif(specs) {\r\n\t\t\tthis.#buttons.push(specs);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\n/**\r\n * Internal utility method to create a dialog\r\n * @param style String with the dialog style (error, warn, info, success)\r\n * @param specs Strign with the dialog content or specifications to create the dialog\r\n * @returns Diaog instance\r\n */\r\nfunction createApiceDialog(style, specs) {\r\n\tif (typeof (specs) === 'string') {\r\n\t\tspecs = { body: specs };\r\n\t} else if (!specs) {\r\n\t\tspecs = {};\r\n\t}\r\n\tspecs.style = style;\r\n\treturn new ApiceDialog(specs);\r\n}\r\n\r\n/**\r\n * Creates a new error dialog instance\r\n * @param specs String with the dialog content or specifications to create the dialog: { title: 'string', body: 'string' }\r\n * @returns Dialog instance\r\n */\r\n$module.error = function (specs) {\r\n\treturn createApiceDialog('error', specs);\r\n};\r\n\r\n/**\r\n * Creates a new warn dialog instance\r\n * @param specs String with the dialog content or specifications to create the dialog: { title: 'string', body: 'string' }\r\n * @returns Dialog instance\r\n */\r\n$module.warn = function (specs) {\r\n\treturn createApiceDialog('warn', specs);\r\n};\r\n\r\n/**\r\n * Creates a new info dialog instance\r\n * @param specs String with the dialog content or specifications to create the dialog: { title: 'string', body: 'string' }\r\n * @returns Dialog instance\r\n */\r\n$module.info = function (specs) {\r\n\treturn createApiceDialog('info', specs);\r\n};\r\n\r\n/**\r\n * Creates a new success dialog instance\r\n * @param specs String with the dialog content or specifications to create the dialog: { title: 'string', body: 'string' }\r\n * @returns Dialog instance\r\n */\r\n$module.success = function (specs) {\r\n\treturn createApiceDialog('success', specs);\r\n};\r\n\r\nexport default $module;\r\n","import toast from './toast.mjs';\r\nimport form from './form.mjs';\r\nimport box from './box.mjs';\r\nimport dialog from './dialog.mjs';\r\n\r\nexport default { toast, form, box, dialog };","export default {\"major\":0,\"minor\":1,\"patch\":6}","'use strict';\r\nimport logging from './logging.mjs';\r\nimport util from './util.mjs';\r\nimport events from './events.mjs';\r\nimport element from './element.mjs';\r\nimport cookies from './cookies.mjs';\r\nimport http from './http.mjs';\r\nimport controller from './controller.mjs';\r\nimport fragment from './fragment.mjs';\r\nimport router from './router.mjs';\r\nimport error from './errorHandler.mjs';\r\nimport ui from './components/ui.mjs';\r\nimport form from './components/form.mjs';\r\nimport currentVersion from './version.mjs';\r\n\r\nconst $scope = {};\r\nconsole.log(`%cApice Framework ${version()}`, 'color: #64dd17;');\r\n\r\n/**\r\n * Allows to obtain the current framework version.  If a boolean true is passed as an argument then a \r\n * canonical represenration of the version will be produced.\r\n * @returns Version number as a string or canonical (as an object)\r\n */\r\nfunction version() {\r\n\tif (arguments[0] === true) {\r\n\t\treturn {\r\n\t\t\tmajor: currentVersion.major,\r\n\t\t\tminor: currentVersion.minor,\r\n\t\t\tpatch: currentVersion.patch\r\n\t\t};\r\n\t}\r\n\treturn 'v' + currentVersion.major + '.' + currentVersion.minor + '.' + currentVersion.patch;\r\n}\r\n\r\n/**\r\n * Adds a function to be executed when the framework has completed the loading process\r\n * @param callback Function to be invoked once the framework is ready\r\n */\r\nfunction ready(callback) {\r\n\tevents.documentReady(callback);\r\n}\r\n\r\nexport default { version, ready, logging, util, events, element, cookies, http, controller, fragment, router, error, ui, form };\r\n"],"names":["$module","target","Promise","text","replace","holderRegex","placeholders","input","values","result","output","unbind","length","indexControl","holders","matchAll","holder","source","regex","RegExp","value","filter","element","name","timespan","console","warn","expireDate","Date","setTime","getTime","cookie","util","trim","toGMTString","document","cookieArray","split","idx","rawCookie","cookieParts","$scope","fatal","color","label","error","info","debug","trace","levelCookie","cookies","get","globalLevel","levels","Logger","this","arguments","levelInfo","Error","set","_classPrivateFieldGet","message","level","JSON","stringify","replaced","log","addListener","eventName","listener","each","item","addEventListener","attachEvent","removeListener","removeEventListener","detachEvent","getLogger","loggers","logName","logger","_$scope$globalLevel","documentReady","callback","readyState","waitAnimation","animation","setClass","className","parseHTML","content","createElement","innerHTML","childNodes","ApiceElement","SingleElement","id","isDOMElement","appendChild","child","_this2","append","_this3","NodeList","node","prepend","first","firstChild","_this4","insertBefore","fnc","events","on","selector","applySelector","classList","add","remove","flag","originalDisplay","style","display","MultipleElements","push","functionName","args","returnValue","targetFunction","apply","Array","isArray","ex","obj","_typeof","nodeType","root","elements","querySelectorAll","nodes","body","bodySingleton","tinyId","Math","random","toString","substring","shortId","stringStart","charAt","sourceElement","querySelector","targetElement","isApiceElement","guid","ErrorHandler","specs","cause","module","code","logging","entryText","Apice","ui","toast","stack","HttpError","create","specType","render","err","createHttpError","httpCode","window","event","reason","preventDefault","createRequest","resolve","reject","options","request","XMLHttpRequest","ActiveXObject","e","createXmlHttp","onreadystatechange","status","response","headers","rawHeaders","getAllResponseHeaders","parts","toLowerCase","getResponseHeaders","responseText","parse","errorHandler","parseResponse","url","method","open","async","data","send","loadScript","src","type","onerror","onload","head","ApiceUrl","protocol","host","port","path","query","hash","endsWith","startsWith","resourceUrl","UrlBuilder","portType","String","$moduleName","controller","controllers","ApiceController","impl","implType","_this","http","then","setTimeout","register","declare","isController","ApiceFragment","controllerType","serve","fragment","fragments","isFragment","onHashChange","route","match","pattern","defaultRoute","notFoundRoute","routes","RouteHash","section","substr","ApiceRoute","action","hasParameters","location","start","container","getElementById","createToastContainer","defaultTitle","ApiceToast","title","resource","icon","dismiss","animationName","parentElement","removeChild","box","onclick","renderToast","Object","assign","appendTo","success","setMax","getSizeClass","size","createOption","field","option","fillSelect","map","BlockElement","ApiceButton","ApiceButtonBar","button","ApiceField","fieldClass","labelBox","setAttribute","ApiceForm","formElement","component","getItemValue","tagName","checked","extractCollectables","matches","select","collector","collect","getAttribute","attr","collectItem","createDiv","divElem","createBoxContainer","elem","header","createBody","footer","createFooter","fullscreen","width","height","closeable","closing","close","createClosingButton","ApiceBox","contentPromise","isPromise","show","mask","hide","createDialogPart","openDialog","dialog","createDialog","promises","all","renderButton","current","queue","titles","ApiceDialog","bdx","buttonSpec","splice","removeFromQueue","closeDialog","triggerEvents","entry","shift","nextDialog","createApiceDialog","form","version","major","currentVersion","minor","patch","ready","router"],"mappings":"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"}