{"version":3,"file":"apice.min.js","sources":["../src/util.mjs","../src/cookies.mjs","../src/logging.mjs","../src/events.mjs","../src/element.mjs","../src/random.mjs","../src/errorHandler.mjs","../src/http.mjs","../src/controller.mjs","../src/fragment.mjs","../src/router.mjs","../src/components/toast.mjs","../src/components/form.mjs","../src/components/ui.mjs","../src/apice.mjs"],"sourcesContent":["// NOTE: this module is a low level module and should not import any other module\r\nconst $module = {};\r\n\r\n//-----------------------------------------------------------------------------\r\n// OBJECT EVALUATION\r\n//-----------------------------------------------------------------------------\r\n/**\r\n * Allows to determine if a specific object instance is a promise or not\r\n * @param target Object instance to evaluate\r\n * @returns Boolean value to determine if the object instance is a promise or not\r\n */\r\n$module.isPromise = function (target) {\r\n\treturn (target instanceof Promise);\r\n};\r\n\r\n//-----------------------------------------------------------------------------\r\n// STRING MANIPULATION\r\n//-----------------------------------------------------------------------------\r\n/** Trims a string by removing leading and trailing white spaces  */\r\n$module.trim = function (text) {\r\n\treturn text.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n};\r\n\r\n// regular expression to extract the message placeholders\r\nconst holderRegex = /\\{(\\d+)\\}/g;\r\n\r\n/**\r\n * Replaces all the placeholders in a string\r\n * @param input String containing the placeholders to replace. Each placeholder will be identified\r\n * \t\t\twith a numeric index (starting at zero) between curly brackets.\r\n * @param values Array with the values to replace the placeholders.\r\n * @returns Object containing the output text and the unbinded values. It has the shape: { output: 'string', unbind: array };\r\n */\r\n$module.placeholders = function (input, ...values) {\r\n\tconst result = { output: input, unbind: values };\r\n\tif (typeof (input) !== 'string') {\r\n\t\treturn result;\r\n\t}\r\n\tconst indexControl = {};\r\n\tconst holders = input.matchAll(holderRegex);\r\n\tfor (let holder of holders) {\r\n\t\tconst source = holder[1];\r\n\t\tif (!source || indexControl[source]) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tindexControl[source] = true;\r\n\t\tconst regex = new RegExp('\\\\{' + source + '\\\\}', 'g');\r\n\t\tconst value = values[source];\r\n\t\tresult.unbind[source] = null;\r\n\t\tresult.output = result.output.replace(regex, value);\r\n\t}\r\n\t// removes the elements that have been used\r\n\tresult.unbind = result.unbind.filter((element) => {\r\n\t\treturn element !== undefined && element !== null;\r\n\t});\r\n\treturn result;\r\n}\r\n\r\nexport default $module;","import util from './util.mjs';\r\n\r\nconst $module = {};\r\n\r\n/**\r\n * Sets a specific cookie\r\n * @param name Name of the cookie to set\r\n * @param value Value to set\r\n * @param timespan Timspan to maintain the cookie in seconds\r\n */\r\n$module.set = function (name, value, timespan) {\r\n\tif (typeof (name) !== 'string') {\r\n\t\tthrow Error('apice.cookies.set.invalid_name');\r\n\t} else if (typeof (timespan) !== 'number') {\r\n\t\tthrow Error('apice.cookies.set.invalid_timespan');\r\n\t}\r\n\tconst expireDate = new Date();\r\n\texpireDate.setTime(expireDate.getTime() + (timespan * 1000));\r\n\tvar cookie = util.trim(name) + '=' + value + '; expires=' + expireDate.toGMTString() + '; path=/';\r\n\tdocument.cookie = cookie;\r\n};\r\n\r\n/**\r\n * Obtains the value from a cookie\r\n * @param name Name of the cookie to obtain\r\n * @returns Cookie value or null if it is not defined\r\n */\r\n$module.get = function (name) {\r\n\tif (typeof (name) !== 'string') {\r\n\t\tthrow Error('apice.cookies.get.invalid_name');\r\n\t}\r\n\tconst cookieArray = document.cookie.split(';');\r\n\tfor (var idx = 0; idx < cookieArray.length; idx++) {\r\n\t\tconst rawCookie = util.trim(cookieArray[idx]);\r\n\t\tif (!rawCookie) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tconst cookieParts = rawCookie.split('=');\r\n\t\tif (util.trim(cookieParts[0]) !== name) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\treturn cookieParts[1];\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nexport default $module;","/*\r\nApice Logger Module\r\nv1.0.0\r\n*/\r\nimport util from './util.mjs';\r\nimport cookies from './cookies.mjs';\r\n\r\nconst $module = {};\r\nconst $scope = {};\r\n\r\n// contains all the loggers registered\r\n$scope.loggers = {};\r\n// dictionary with all the defined log levels\r\n$scope.levels = {\r\n\tfatal: { value: 10, color: '#ff4444', label: 'FATAL' },\r\n\terror: { value: 20, color: '#ff4444', label: 'ERROR' },\r\n\twarn: { value: 30, color: '#ff8800', label: 'WARNING' },\r\n\tinfo: { value: 40, color: '#0099cc', label: 'INFO' },\r\n\tdebug: { value: 50, color: '#3E4551', label: 'DEBUG' },\r\n\ttrace: { value: 60, color: '#3E4551', label: 'TRACE' }\r\n};\r\n\r\nvar levelCookie = cookies.get('apice.logger.level');\r\nif (!levelCookie) {\r\n\t$scope.globalLevel = $scope.levels.warn;\r\n} else {\r\n\t$scope.globalLevel = $scope.levels[levelCookie];\r\n\tif (!$scope.globalLevel) {\r\n\t\t$scope.globalLevel = $scope.levels.warn;\r\n\t}\r\n}\r\n\r\n/** Represents a specific logger */\r\nclass Logger {\r\n\t// holds the name or identigier of the current logger\r\n\t#name;\r\n\t// log level defined for the logger instance\r\n\t#level;\r\n\r\n\tconstructor(name) {\r\n\t\tthis.#name = name;\r\n\t\tvar levelCookie = cookies.get('apice.logger.[' + name + '].level');\r\n\t\tif (!levelCookie) {\r\n\t\t\tthis.#level = $scope.globalLevel;\r\n\t\t} else {\r\n\t\t\tthis.#level = $scope.levels[levelCookie];\r\n\t\t\tif (!this.#level) {\r\n\t\t\t\tthis.#level = $scope.globalLevel;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/** Obtains or sets the log level defined for the logger instance */\r\n\tlevel() {\r\n\t\tif (arguments.length !== 0) {\r\n\t\t\tvar levelInfo = $scope.levels[arguments[0]];\r\n\t\t\tif (!levelInfo) {\r\n\t\t\t\tthrow new Error('apice.logger.invalid_level[' + arguments[0] + ']');\r\n\t\t\t}\r\n\t\t\tthis.#level = levelInfo;\r\n\t\t\tcookies.set('apice.logger.[' + this.#name + '].level', arguments[0], 1800);\r\n\t\t}\r\n\t\treturn this.#level.label;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal implementation that writes a log entry\r\n\t * @param level Level of the log message to print\r\n\t * @param message Message to print into the log entry. To include placerholders set the index of the element\r\n\t *          (starting with 0) between curvy brackets. Example: \"the values is {0}\"\r\n\t * @param values Values to replace the placeholders plus any element to include as details. Any element that\r\n\t *          does not match the placeholders will be included as log details\r\n\t */\r\n\t#writeLog(level, message, ...values) {\r\n\t\tif (this.#level.value >= level.value) {\r\n\t\t\tif (typeof (message) !== 'string') {\r\n\t\t\t\tmessage = JSON.stringify(message);\r\n\t\t\t} else if (values && values.length > 0) {\r\n\t\t\t\tconst replaced = util.placeholders(message, ...values);\r\n\t\t\t\tmessage = replaced.output;\r\n\t\t\t\tvalues = replaced.unbind;\r\n\t\t\t}\r\n\t\t\tconsole.log('%c[' + level.label + '][' + this.#name + ']: ' + message, ...['color: ' + level.color, ...values]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Prints a FATAL log message\r\n\t * @param message Message to print into the log entry. To include placerholders set the index of the element\r\n\t *          (starting with 0) between curvy brackets. Example: \"the values is {0}\"\r\n\t * @param values Values to replace the placeholders plus any element to include as details. Any element that\r\n\t *          does not match the placeholders will be included as log details\r\n\t */\r\n\tfatal(message, ...values) {\r\n\t\tthis.#writeLog($scope.levels.fatal, message, ...values);\r\n\t}\r\n\r\n\t/**\r\n\t * Prints an ERROR log message\r\n\t * @param message Message to print into the log entry. To include placerholders set the index of the element\r\n\t *          (starting with 0) between curvy brackets. Example: \"the values is {0}\"\r\n\t * @param values Values to replace the placeholders plus any element to include as details. Any element that\r\n\t *          does not match the placeholders will be included as log details\r\n\t */\r\n\terror(message, ...values) {\r\n\t\tthis.#writeLog($scope.levels.error, message, ...values);\r\n\t}\r\n\r\n\t/**\r\n\t * Prints a WARNING log message\r\n\t * @param message Message to print into the log entry. To include placerholders set the index of the element\r\n\t *          (starting with 0) between curvy brackets. Example: \"the values is {0}\"\r\n\t * @param values Values to replace the placeholders plus any element to include as details. Any element that\r\n\t *          does not match the placeholders will be included as log details\r\n\t */\r\n\twarn(message, ...values) {\r\n\t\tthis.#writeLog($scope.levels.warn, message, ...values);\r\n\t}\r\n\r\n\t/**\r\n\t * Prints an INFO log message\r\n\t * @param message Message to print into the log entry. To include placerholders set the index of the element\r\n\t *          (starting with 0) between curvy brackets. Example: \"the values is {0}\"\r\n\t * @param values Values to replace the placeholders plus any element to include as details. Any element that\r\n\t *          does not match the placeholders will be included as log details\r\n\t */\r\n\tinfo(message, ...values) {\r\n\t\tthis.#writeLog($scope.levels.info, message, ...values);\r\n\t}\r\n\r\n\t/**\r\n\t * Prints a DEBUG log message\r\n\t * @param message Message to print into the log entry. To include placerholders set the index of the element\r\n\t *          (starting with 0) between curvy brackets. Example: \"the values is {0}\"\r\n\t * @param values Values to replace the placeholders plus any element to include as details. Any element that\r\n\t *          does not match the placeholders will be included as log details\r\n\t */\r\n\tdebug(message, ...values) {\r\n\t\tthis.#writeLog($scope.levels.debug, message, ...values);\r\n\t}\r\n\r\n\t/**\r\n\t * Prints a TRACE log message\r\n\t * @param message Message to print into the log entry. To include placerholders set the index of the element\r\n\t *          (starting with 0) between curvy brackets. Example: \"the values is {0}\"\r\n\t * @param values Values to replace the placeholders plus any element to include as details. Any element that\r\n\t *          does not match the placeholders will be included as log details\r\n\t */\r\n\ttrace(message, ...values) {\r\n\t\tthis.#writeLog($scope.levels.trace, message, ...values);\r\n\t}\r\n}\r\n\r\n/**\r\n * Obtains the instance of a specific logger or creates a new one if that does not exist\r\n * @param name Logger name or identifier\r\n * @returns Logger instance\r\n */\r\n$module.getLogger = function (name) {\r\n\tif (!name) {\r\n\t\tname = 'system';\r\n\t}\r\n\tif (!$scope.loggers[name]) {\r\n\t\t$scope.loggers[name] = new Logger(name);\r\n\t}\r\n\treturn $scope.loggers[name];\r\n};\r\n\r\n/** Gets or sets the default level defined for the loggers */\r\n$module.level = function () {\r\n\tif (arguments.length === 1) {\r\n\t\tconst levelInfo = $scope.levels[arguments[0]];\r\n\t\tif (!levelInfo) {\r\n\t\t\tthrow new Error('apice.logger.invalid_level[' + arguments[0] + ']');\r\n\t\t}\r\n\t\t$scope.globalLevel = levelInfo;\r\n\t\tcookies.set('apice.logger.level', arguments[0], 1800);\r\n\t\tfor (var logName in $scope.loggers) {\r\n\t\t\tvar logger = $scope.loggers[logName];\r\n\t\t\tlogger.level(arguments[0]);\r\n\t\t}\r\n\t} else if (arguments.length === 2) {\r\n\t\tconst logger = $module.getLogger(arguments[0]);\r\n\t\tlogger.level(arguments[1]);\r\n\t\treturn logger.level();\r\n\t}\r\n\treturn $scope.globalLevel?.label;\r\n};\r\n\r\nexport default $module;","/**\r\n * Allows to register a callback to be executed when the document ready state has been reached\r\n * @param callback Function to be executed when the document ready is reached\r\n */\r\nfunction documentReady(callback) {\r\n\tif (document.readyState === \"complete\") {\r\n\t\tcallback();\r\n\t} else if (typeof (document.addEventListener) === 'function') {\r\n\t\tdocument.addEventListener('DOMContentLoaded', callback, false);\r\n\t} else if (typeof (document.attachEvent) === 'function') {\r\n\t\tdocument.attachEvent(\"onreadystatechange\", function () {\r\n\t\t\tif (document.readyState === \"complete\") {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n};\r\n\r\n/**\r\n * Adds an event listener to a specific element\r\n * @param target Reference to the DOM element that will receive the event listener\r\n * @param eventName Name of the event, for example 'click'\r\n * @param listener Listener function to be executed when the event is triggered\r\n */\r\n function addListener (target, eventName, listener) {\r\n\tif (!target) {\r\n\t\tthrow new Error('apice.util.event.invalid_target');\r\n\t} else if (!eventName || typeof (eventName) !== 'string') {\r\n\t\tthrow new Error('apice.util.event.invalid_event_name');\r\n\t} else if (typeof (listener) !== 'function') {\r\n\t\treturn;\r\n\t}\r\n\tif (typeof (target.addEventListener) === 'function') {\r\n\t\ttarget.addEventListener(eventName, listener, false);\r\n\t} else if (typeof (target.attachEvent) === 'function') {\r\n\t\ttarget.attachEvent('on' + eventName, listener);\r\n\t}\r\n};\r\n\r\nexport default { addListener, documentReady };","import events from './events.mjs';\r\n\r\nconst $scope = {};\r\n\r\n/** Parses a string HTML content and returns its content or null if it is not HTML content */\r\nfunction parseHTML(content) {\r\n\tif (!content || typeof (content) !== 'string') {\r\n\t\treturn null;\r\n\t}\r\n\tconst holder = document.createElement(\"div\");\r\n\tholder.innerHTML = content;\r\n\treturn [...holder.childNodes];\r\n}\r\n\r\n/** Class wrapping one or more DOM elements and simplifying some actions on it */\r\nclass ApiceElement {\r\n}\r\n\r\n/** Class wrapping one DOM element and simplifying some actions on it */\r\nclass SingleElement extends ApiceElement {\r\n\t/** Reference to the DOM element being wrapped */\r\n\t#element;\r\n\r\n\tconstructor(element) {\r\n\t\tsuper();\r\n\t\tthis.#element = element;\r\n\t}\r\n\r\n\t/** Allows to determine if the instance is wrapping a valid DOM element */\r\n\tget isValid() {\r\n\t\treturn !!this.#element;\r\n\t}\r\n\r\n\t/** Allows to interact with the wrapped DOM element (if any) */\r\n\teach(callback) {\r\n\t\tif (typeof (callback) === 'function' && this.#element) {\r\n\t\t\tcallback(this.#element);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows to obtain or set the HTML content of an element.  If no paramaters are provided the html content will\r\n\t * be returned.  When a string argument is provided, the HTML content of the element will be set with the string.\r\n\t * When a ApiceElement is provided, then the HTML content will be extracted from it.  If a reference to a DOM element\r\n\t * is provided, then it will be set as the content of the wrapped element.\r\n\t * @returns When no argument are provided returns the HTML element otherwise returns the ApiceElement instance\r\n\t */\r\n\tcontent() {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tif (!this.#element) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\treturn this.#element.innerHTML;\r\n\t\t}\r\n\t\tif (this.#element) {\r\n\t\t\tvar content = arguments[0];\r\n\t\t\tif (!content) {\r\n\t\t\t\tcontent = '';\r\n\t\t\t} else if (content instanceof ApiceElement) {\r\n\t\t\t\tthis.#element.innerHTML = '';\r\n\t\t\t\tcontent.each(child => {\r\n\t\t\t\t\tthis.#element.append(child);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.#element.innerHTML = content;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Appends content to the end of the current element\r\n\t * @returns This element instance\r\n\t */\r\n\tappend() {\r\n\t\tif (this.#element && arguments.length > 0) {\r\n\t\t\tif (arguments.length > 1) {\r\n\t\t\t\tfor (var idx = 0; idx < arguments.length; idx++) {\r\n\t\t\t\t\tthis.append(arguments[idx]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar content = arguments[0];\r\n\t\t\t\tif (content instanceof ApiceElement) {\r\n\t\t\t\t\tcontent.each(item => {\r\n\t\t\t\t\t\tthis.#element.appendChild(item);\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (typeof (content) === 'string') {\r\n\t\t\t\t\tcontent = parseHTML(content);\r\n\t\t\t\t\tfor (var idx = 0; idx < content.length; idx++) {\r\n\t\t\t\t\t\tthis.#element.appendChild(content[idx]);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (isDOMElement(content)) {\r\n\t\t\t\t\tthis.#element.appendChild(content);\r\n\t\t\t\t} else if (content instanceof NodeList) {\r\n\t\t\t\t\tfor (var idx = 0; idx < content.length; idx++) {\r\n\t\t\t\t\t\tconst node = content[idx];\r\n\t\t\t\t\t\tthis.#element.appendChild(node);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an HTML content at the beggining of this content\r\n\t * @returns This element instance\r\n\t */\r\n\tprepend() {\r\n\t\tif (this.#element && arguments.length > 0) {\r\n\t\t\tif (arguments.length > 1) {\r\n\t\t\t\tfor (var idx = 0; idx < arguments.length; idx++) {\r\n\t\t\t\t\tthis.prepend(arguments[idx]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst first = this.#element.firstChild;\r\n\t\t\t\tvar content = arguments[0];\r\n\t\t\t\tif (content instanceof ApiceElement) {\r\n\t\t\t\t\tcontent.each(item => {\r\n\t\t\t\t\t\tthis.#element.insertBefore(item, first);\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (typeof (content) === 'string') {\r\n\t\t\t\t\tcontent = parseHTML(content);\r\n\t\t\t\t\tfor (var idx = 0; idx < content.length; idx++) {\r\n\t\t\t\t\t\tthis.#element.insertBefore(content[idx], first);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (isDOMElement(content)) {\r\n\t\t\t\t\tthis.#element.insertBefore(content, first);\r\n\t\t\t\t} else if (content instanceof NodeList) {\r\n\t\t\t\t\tfor (var idx = 0; idx < content.length; idx++) {\r\n\t\t\t\t\t\tconst node = content[idx];\r\n\t\t\t\t\t\tthis.#element.insertBefore(node, first);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Bind a specific ebent with a function\r\n\t * @param eventName String with the event name\r\n\t * @param fnc Function to bind\r\n\t * @returns This element instance\r\n\t */\r\n\ton(eventName, fnc) {\r\n\t\tif (!eventName) {\r\n\t\t\tthrow new Error('apice.element.on.no_event_name');\r\n\t\t}\r\n\t\tif (this.#element && typeof (fnc) === 'function') {\r\n\t\t\tevents.addListener(this.#element, eventName, fnc);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\n/**\r\n * Class wrapping two or more elements\r\n */\r\nclass MultipleElements extends ApiceElement {\r\n\t/** Array with the wrapped elements */\r\n\t#elements;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#elements = [];\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an element to this instance\r\n\t * @param element \r\n\t * @returns \r\n\t */\r\n\tadd(element) {\r\n\t\tif (element) {\r\n\t\t\tthis.#elements.push(element);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal method that invokes a function on all the elements wrapped by this instance\r\n\t * @param functionName String with the name of the function to invoke\r\n\t * @param args Arguments to call the function\r\n\t * @returns Object wiith the array of return values\r\n\t */\r\n\t#nodeCall(functionName, args) {\r\n\t\tconst returnValue = [];\r\n\t\tfor (var idx = 0; idx < this.#elements.length; idx++) {\r\n\t\t\tconst node = this.#elements[idx];\r\n\t\t\tconst targetFunction = node[functionName];\r\n\t\t\tif (typeof (targetFunction) === 'function') {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst result = targetFunction.apply(node, args);\r\n\t\t\t\t\treturnValue.push(result);\r\n\t\t\t\t} catch (ex) {\r\n\t\t\t\t\tconsole.log(`itaca.element.node_call[${functionName}]`, ex);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\treturn returnValue;\r\n\t}\r\n\r\n\t/** See SingleElement */\r\n\teach() {\r\n\t\tthis.#nodeCall('each', arguments);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** See SingleElement */\r\n\tcontent() {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\treturn this.#nodeCall('content', arguments);\r\n\t\t}\r\n\t\tthis.#nodeCall('content', arguments);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** See SingleElement */\r\n\tappend() {\r\n\t\tthis.#nodeCall('append', arguments);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** See SingleElement */\r\n\tprepend() {\r\n\t\tthis.#nodeCall('prepend', arguments);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** See SingleElement */\r\n\ton() {\r\n\t\tthis.#nodeCall('on', arguments);\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\n/** Allows to determine if a specific object instance is a DOM element */\r\nfunction isDOMElement(obj) {\r\n\treturn (obj && typeof (obj) === 'object' && obj.nodeType === 1);\r\n}\r\n\r\n/**\r\n * Internal function to create Web Elements according to a selector query\r\n * @param selector String with the selector\r\n * @returns Instance of an Web Element wrapping the matched elements or null if there is no match\r\n */\r\nfunction applySelector(selector) {\r\n\tconst elements = document.querySelectorAll(selector);\r\n\t// selector does not match DOM elements\r\n\tif (elements.length === 0) {\r\n\t\treturn null;\r\n\t}\r\n\t// selector matches a single DOM element \r\n\telse if (elements.length === 1) {\r\n\t\treturn new SingleElement(elements[0]);\r\n\t}\r\n\t// selector matches multiple DOM elements\r\n\tconst nodes = new MultipleElements();\r\n\tfor (var idx = 0; idx < elements.length; idx++) {\r\n\t\tconst node = elements[idx];\r\n\t\tnodes.add(new SingleElement(node));\r\n\t}\r\n\treturn nodes;\r\n}\r\n\r\n/**\r\n * Allows to obtain an Web element as a wrapper for a particular DOM element\r\n * @param selector String with the selector to obtain the DOM element or reference to the DOM element. If it is not\r\n * \t\t\tprovided then a reference to the body will be used.\r\n * @returns An ApiceElement wrapping the element. If the selector does not match a valid element the method will return null.\r\n */\r\nexport default function (selector) {\r\n\tif (!selector) {\r\n\t\treturn null;\r\n\t} else if (selector === 'body' || selector === document.body) {\r\n\t\tif (!$scope.bodySingleton) {\r\n\t\t\t$scope.bodySingleton = new SingleElement(document.body);\r\n\t\t}\r\n\t\treturn $scope.bodySingleton;\r\n\t} else if (typeof (selector) === 'string') {\r\n\t\treturn applySelector(selector);\r\n\t} else if (selector instanceof ApiceElement) {\r\n\t\treturn selector;\r\n\t} else if (isDOMElement(selector)) {\r\n\t\treturn new SingleElement(selector);\r\n\t}\r\n\treturn null;\r\n};\r\n","/** Creates a random tiny identified composed by 4 alphanumeric characters */\r\nfunction tinyId() {\r\n\treturn (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n};\r\n\r\n/** Creates a random short identified composed by 8 alphanumeric characters */\r\nfunction shortId() {\r\n\treturn tinyId() + tinyId();\r\n};\r\n\r\n/** Creates a random values simulating a global global unique identifier */\r\nfunction guid() {\r\n\treturn shortId()\r\n\t\t+ '-' + shortId()\r\n\t\t+ '-' + shortId()\r\n\t\t+ '-' + shortId()\r\n\t\t+ shortId();\r\n};\r\n\r\nexport default { tinyId, shortId, guid };","import logging from './logging.mjs';\r\nimport random from './random.mjs';\r\nimport element from './element.mjs';\r\n\r\nconst $module = {};\r\n\r\n/** Wrapper that allows to control the action around an error */\r\nclass ErrorHandler {\r\n\t// String with the name of the module or the layer that produced the error. This is used to obtain the logger\r\n\t#module\r\n\t// String with the message to show to the user (if any). When there is no specific message, then a generic error message will be shown\r\n\t#message\r\n\t// The cause of the error (if any)\r\n\t#cause\r\n\t// The code of the error (if any). This wil be printed to the log as a hint, along with the cause (if any)\r\n\t#code\r\n\t// The unique error number used to correlate any error message in the UI with the entries in the log\r\n\t#guid\r\n\r\n\tconstructor(specs) {\r\n\t\tthis.#guid = random.guid();\r\n\t\tthis.#message = specs.message;\r\n\t\tthis.#cause = specs.cause;\r\n\t\tthis.#module = specs.module;\r\n\t\tthis.#code = specs.code;\r\n\t}\r\n\r\n\t/** Allows to obtain the unique value that identify this error occurrence */\r\n\tget guid() {\r\n\t\treturn this.#guid;\r\n\t}\r\n\r\n\t/** Obtains the message if there is any */\r\n\tget message() {\r\n\t\treturn this.#message ?? 'An error has occurred. Please contact the technical support without closing this screen.';\r\n\t}\r\n\r\n\t/** Obtains the cause if there is any */\r\n\tget cause() {\r\n\t\treturn this.#cause;\r\n\t}\r\n\r\n\t/** Obtains the error code if any */\r\n\tget code() {\r\n\t\treturn this.#code;\r\n\t}\r\n\r\n\t/** Internal method to create the log entry text for a specific error cause  */\r\n\t#getCauseLog(cause) {\r\n\t\tif (!cause) {\r\n\t\t\treturn '';\r\n\t\t} else if (typeof (cause) === 'string') {\r\n\t\t\treturn `\\n-> (s) ${cause}`;\r\n\t\t} else if (cause instanceof Error) {\r\n\t\t\treturn `\\n-> (e) ${cause.stack}`;\r\n\t\t} else if (this.#cause instanceof ErrorHandler) {\r\n\t\t\treturn `\\n-> (n) ${cause.code}` + this.#getCauseLog(cause.cause);\r\n\t\t} else if (this.#cause instanceof HttpError) {\r\n\t\t\treturn `\\n-> (h) http-error[${cause.code}]`;\r\n\t\t}\r\n\t}\r\n\r\n\t/** Creates an error entry with the details about the error */\r\n\tlog() {\r\n\t\tconst logger = logging.getLogger(this.#module);\r\n\t\tlet entryText = `ref=[${this.#guid}]`;\r\n\t\tif (this.#code) {\r\n\t\t\tentryText += `\\n-> (c) ${this.#code}`;\r\n\t\t}\r\n\t\tentryText += this.#getCauseLog(this.#cause);\r\n\t\tlogger.error(entryText);\r\n\t}\r\n\r\n\t/**\r\n\t * Renders a visual hint to inform the user about the error\r\n\t * @param selector String with the selector to render the error on it or reference to a DOM element\r\n\t */\r\n\trender(selector) {\r\n\t\tthis.log();\r\n\t\tvar target = element(selector);\r\n\t\tif (!target) {\r\n\t\t\tApice.ui.toast.error(`${this.message}<div>${this.#guid}</div>`);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttarget.content(`<div class=\"badge badge-error\">\\\r\n            <div class=\"header\">Atention!</div>\\\r\n            <div class=\"content\">${this.message}</div>\\\r\n            <div class=\"details\">${this.#guid}</div>\\\r\n        </div>`);\r\n\t}\r\n}\r\n\r\n/**\r\n * Creates an object to wrap an error and allow to take actions with it\r\n * @param specs JavaScript Error instance, string with an error code or object with the specifications to create \r\n *      the error handler.  If an object is used attributes are:\r\n *      - code: String with the error code (optional if a code is provided)\r\n *      - cause: Reference to the root cause that creates the error condition (optional if the cause is provided)\r\n *      - module: (optional) String with the name of the module that produced the error\r\n *      - message: (optional) String with any message rendered to the end user\r\n * @returns Error hanlder instance\r\n */\r\n$module.create = function (specs) {\r\n\tif (!specs) {\r\n\t\tconsole.error('apice.error_handler.create.null_input');\r\n\t\treturn null;\r\n\t}\r\n\tconst specType = typeof (specs);\r\n\tif (specType === 'string') {\r\n\t\tspecs = { code: specs };\r\n\t} else if (specs instanceof Error) {\r\n\t\tspecs = { cause: specs };\r\n\t} else if (specType !== 'object') {\r\n\t\tconsole.error('apice.error_handler.create.invalid_input', specs);\r\n\t\treturn null;\r\n\t}\r\n\treturn new ErrorHandler(specs);\r\n};\r\n\r\n/**\r\n * Renders a visual hint to report an error\r\n * @param err String with the error code, JavaScript error, or an ErrorHandler reference or a specification object.\r\n *          When the error is a specification object please follow the structured defined in the create method of this module.\r\n * @param selector String with the selector to render the error on it, reference to the DOM element or null to render into the body\r\n */\r\n$module.render = function (err, selector) {\r\n\tif (!err) {\r\n\t\treturn;\r\n\t} else if (!(err instanceof ErrorHandler)) {\r\n\t\terr = $module.create(err);\r\n\t}\r\n\terr.render(selector);\r\n};\r\n\r\n/** Represents an HTTP error */\r\nclass HttpError {\r\n\t/** Code of the HTTP error */\r\n\t#code;\r\n\r\n\t/**\r\n\t * Creates a new HttpError instance with a specific error code\r\n\t * @param code HTTP error code\r\n\t */\r\n\tconstructor(code) {\r\n\t\tthis.#code = code;\r\n\t}\r\n\r\n\t/** Code with the type of error */\r\n\tget type() {\r\n\t\treturn 'http';\r\n\t}\r\n\r\n\t/** Allows to obtain the HTTP code associated with the error represented by this instance */\r\n\tget code() {\r\n\t\treturn this.#code;\r\n\t}\r\n}\r\n\r\n/** Creates an HTTP error */\r\n$module.createHttpError = function (httpCode) {\r\n\treturn new HttpError(httpCode);\r\n};\r\n\r\n// adds a handler to capture any unhandled promise scenario\r\nwindow.addEventListener('unhandledrejection', function (event) {\r\n\tif (event.reason instanceof ErrorHandler) {\r\n\t\tevent.preventDefault();\r\n\t\tevent.reason.render();\r\n\t}\r\n});\r\n\r\nexport default $module;","import errorHandler from './errorHandler.mjs';\r\n\r\nconst $module = {};\r\nconst $moduleName = 'apice.http';\r\n\r\n/** Creates the underlying XMLHTTP object used to execute ajax calls */\r\nfunction createXmlHttp() {\r\n\tif (window.XMLHttpRequest) {\r\n\t\treturn new XMLHttpRequest();\r\n\t} else {\r\n\t\ttry {\r\n\t\t\treturn new ActiveXObject('Msxml2.XMLHTTP');\r\n\t\t} catch (e) {\r\n\t\t\ttry {\r\n\t\t\t\treturn new ActiveXObject('Microsoft.XMLHTTP');\r\n\t\t\t} catch (ex) {\r\n\t\t\t\tthrow Error('apice.http.xmlhttp_creation_error');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/** Create a request object to execute ajax calls in a crossbrowser approach */\r\nfunction createRequest(resolve, reject) {\r\n\tconst request = createXmlHttp();\r\n\trequest.onreadystatechange = function () {\r\n\t\tif (request.readyState == 4 || request.readyState === 'complete') {\r\n\t\t\tif (request.status == 200) {\r\n\t\t\t\tresolve(request.responseText);\r\n\t\t\t} else {\r\n\t\t\t\treject(errorHandler.createHttpError(request.status));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn request;\r\n}\r\n\r\n/**\r\n * \r\n * @param url String with the resource URL to be requested\r\n * @param options Object with the options to execute the request. The values are:\r\n * \t\t\t\t\t- method: String with the HTTP method to execute: GET, POST, PUT, DELETE. If this is not provided, GET will be used by default.\r\n * \t\t\t\t\t- async: Boolean value to determine if the request should be asynchronous (true) or not. By default it is true.\r\n *                  - data: Data to be included in a POST, PUT or DELETE request\r\n * @returns Promise to be fulfilled according to the HTTP request result\r\n */\r\n$module.request = function (url, options) {\r\n\tif (typeof (url) !== 'string' || !url) {\r\n\t\treturn Promise.reject('apice.http.null_url');\r\n\t}\r\n\tif (!options) {\r\n\t\toptions = {};\r\n\t}\r\n\tif (!options.method) {\r\n\t\toptions.method = 'GET';\r\n\t}\r\n\t// TODO: add headers\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst request = createRequest(resolve, reject);\r\n\t\trequest.open(options.method, url, options.async !== false);\r\n\t\tif (options.method === 'GET' || !options.data) {\r\n\t\t\trequest.send();\r\n\t\t} else {\r\n\t\t\trequest.send(options.data);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n/**\r\n * Loads a JavaScript resource dynamically\r\n * @param url URL to load the script from it\r\n * @returns Promise that allows to handle the script loading actions\r\n */\r\n$module.loadScript = function (url) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tvar element = document.createElement('script');\r\n\t\telement.src = url;\r\n\t\telement.type = 'text/javascript';\r\n\t\telement.async = false;\r\n\t\telement.onerror = () => {\r\n\t\t\treject(errorHandler.create({\r\n\t\t\t\tmodule: $moduleName,\r\n\t\t\t\tcode: `apice.http.load_script_error[${url}]`\r\n\t\t\t})); // TODO: collect error info\r\n\t\t};\r\n\t\telement.onload = () => {\r\n\t\t\tresolve();\r\n\t\t};\r\n\t\tdocument.head.appendChild(element);\r\n\t});\r\n};\r\n\r\n/** Class representing a URL assembled with different parts */\r\nclass ApiceUrl {\r\n\t// string with the HTTP protocol (http, https)\r\n\t#protocol\r\n\t// String wit the host name\r\n\t#host\r\n\t// String with the port\r\n\t#port\r\n\t// String with the resource path\r\n\t#path\r\n\r\n\t/**\r\n\t * Creates a new instance representing a url by providing its parts\r\n\t * @param protocol String with the HTTP protocol to use (http, https) or null to use https as default\r\n\t * @param host String with the host name. This parameter is mandatory, when is not ptovided an error will be throw\r\n\t * @param port String with the port number or null to use port 80 as the default one\r\n\t * @param path String with the base path or null to use the root\r\n\t */\r\n\tconstructor(protocol, host, port, path) {\r\n\t\tif (!this.#host) {\r\n\t\t\tthrow new Error('apice.http.url.no_host');\r\n\t\t}\r\n\t\tthis.#protocol = protocol ?? 'https';\r\n\t\tthis.#host = host;\r\n\t\tthis.#port = port ?? '80';\r\n\t\tthis.#path = this.#path ?? '';\r\n\t}\r\n\r\n\t/** Obtains the HTTP protocol used by the url */\r\n\tget protocol() {\r\n\t\treturn this.#protocol;\r\n\t}\r\n\r\n\t/** Obtains the host used by the url */\r\n\tget host() {\r\n\t\treturn this.#host;\r\n\t}\r\n\r\n\t/** Obtains the port used by the url */\r\n\tget port() {\r\n\t\treturn this.#port;\r\n\t}\r\n\r\n\t/** Obtains the base path used by the url */\r\n\tget path() {\r\n\t\treturn this.#path;\r\n\t}\r\n\r\n\t/** Creates a string representation of this url */\r\n\ttoString() {\r\n\t\treturn this.#protocol + '://' + this.#host + ':' + this.#port + '/' + this.#path;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a url string using the base url represented by this instance and concatenating additional elements\r\n\t * @param path String with the path of an additional resource to be added to the base url represented by this instance or null to ignore it.\r\n\t * @param query Query string to add to the base URL represented by this instance or null to ignore it.\r\n\t * @param hash Hash to add to the base URL represented by this instance or null to ignore it.\r\n\t * @returns String with a full url\r\n\t */\r\n\tresourceUrl(path, query, hash) {\r\n\t\tvar url = this.toString();\r\n\t\tif (path && typeof (path) === 'string') {\r\n\t\t\tif (!url.endsWith('/') && !path.startsWith('/')) {\r\n\t\t\t\turl += '/';\r\n\t\t\t}\r\n\t\t\turl += path;\r\n\t\t}\r\n\t\tif (query && typeof (query) === 'string') {\r\n\t\t\tif (!query.startsWith('?')) {\r\n\t\t\t\turl += '?';\r\n\t\t\t}\r\n\t\t\turl += query;\r\n\t\t}\r\n\t\tif (hash && typeof (hash) === 'string') {\r\n\t\t\tif (!hash.startsWith('#')) {\r\n\t\t\t\turl += '#';\r\n\t\t\t}\r\n\t\t\turl += hash;\r\n\t\t}\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Executes an HTTP GET operation using the URL represented by this instance and adding additional elements\r\n\t * @param path Resource path to add to the base url represented by this instance or null to maintain the original \r\n\t * @param query Query string to add to the base URL represented by this instance\r\n\t * @param hash Hash to add to the base url represented by this instance\r\n\t * @returns A promise to capture the execution of the HTTP request\r\n\t */\r\n\tget(path, query, hash) {\r\n\t\tvar url = this.resourceUrl(path, query, hash);\r\n\t\treturn $module.request(url, { method: 'GET' });\r\n\t}\r\n\r\n\t/**\r\n\t * Executes an HTTP POST operation using the URL represented by this instance and adding a resource path and data\r\n\t * @param path Resource path to add to the base url represented by this instance or null to maintain the original \r\n\t * @param data Object to post as data in the HTTP request\r\n\t * @returns A promise to capture the execution of the HTTP request\r\n\t */\r\n\tpost(path, data) {\r\n\t\tvar url = this.resourceUrl(path);\r\n\t\treturn $module.request(url, { method: 'POST', data: data });\r\n\t}\r\n\r\n\t/**\r\n\t * Executes an HTTP PUT operation using the URL represented by this instance and adding a resource path and data\r\n\t * @param path Resource path to add to the base url represented by this instance or null to maintain the original \r\n\t * @param data Object to post as data in the HTTP request\r\n\t * @returns A promise to capture the execution of the HTTP request\r\n\t */\r\n\tput(path, data) {\r\n\t\tvar url = this.resourceUrl(path);\r\n\t\treturn $module.request(url, { method: 'PUT', data: data });\r\n\t}\r\n\r\n\t/**\r\n\t * Executes an HTTP DELETE operation using the URL represented by this instance and adding a resource path and data\r\n\t * @param path Resource path to add to the base url represented by this instance or null to maintain the original \r\n\t * @param data Object to post as data in the HTTP request\r\n\t * @returns A promise to capture the execution of the HTTP request\r\n\t */\r\n\tdelete(path, data) {\r\n\t\tvar url = this.resourceUrl(path);\r\n\t\treturn $module.request(url, { method: 'DELETE', data: data });\r\n\t}\r\n}\r\n\r\n/** Class to manipulate and create an URL */\r\nclass UrlBuilder {\r\n\t// string with the HTTP protocol (http, https)\r\n\t#protocol\r\n\t// String wit the host name\r\n\t#host\r\n\t// String with the port\r\n\t#port\r\n\t// String with the resource path\r\n\t#path\r\n\r\n\t/**\r\n\t * Defines the HTTP protocol to be used by the url\r\n\t * @param protocol String with the protocol. Example: https\r\n\t * @returns Fluent instance to continue the build\r\n\t */\r\n\tprotocol(protocol) {\r\n\t\tthis.#protocol = protocol;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the name of the host to be used in the url to be build\r\n\t * @param host String with the hostname\r\n\t * @returns Fluent instance to continue the build\r\n\t */\r\n\thost(host) {\r\n\t\tthis.#host = host;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the port to use in the url to be build\r\n\t * @param port String or number with the port\r\n\t * @returns Fluent instance to continue the build\r\n\t */\r\n\tport(port) {\r\n\t\tvar portType = typeof (port);\r\n\t\tif (portType === 'string') {\r\n\t\t\tthis.#port = port;\r\n\t\t} else if (portType === 'number') {\r\n\t\t\tthis.#port = String(port);\r\n\t\t} else {\r\n\t\t\tthrow new Error('apice.http.url_builder.invalid_port');\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the base path to set in the url to be build\r\n\t * @param path String with the base path to use\r\n\t * @returns Fluent instance to continue the build\r\n\t */\r\n\tpath(path) {\r\n\t\tthis.#path = path;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new url instance based on the arguments collected by this builder instance\r\n\t * @returns Instance representing the Url\r\n\t */\r\n\tbuild() {\r\n\t\treturn new ApiceUrl(this.#protocol, this.#host, this.#port, this.#path);\r\n\t}\r\n}\r\n\r\n/**\r\n * Allows to obtain a builder to create an url\r\n * @returns Instance of the url builder\r\n */\r\n$module.url = function () {\r\n\treturn new UrlBuilder();\r\n};\r\n\r\nexport default $module;","import http from './http.mjs';\r\nimport errorHandler from './errorHandler.mjs';\r\nimport log from './logging.mjs';\r\n\r\nconst $moduleName = 'apc.controller';\r\nconst logger = log.getLogger($moduleName);\r\nconst $scope = {};\r\n// contains all the controllers registered, indexed by name\r\n$scope.controllers = {};\r\n\r\n/** Allows to obtain a specific controller */\r\nconst $module = function (name) {\r\n\tif (typeof (name) === 'string') {\r\n\t\tvar controller = $scope.controllers[name];\r\n\t\tif (!controller) {\r\n\t\t\tthrow Error(`apice.controller.unknown_controller[${name}]`);\r\n\t\t}\r\n\t\treturn controller;\r\n\t}\r\n};\r\n\r\n/** Class with the implementation of a controller object */\r\nclass ApiceController {\r\n\t// name to identify the controller\r\n\t#name;\r\n\t// controller implementation source\r\n\t#impl;\r\n\tconstructor(name, impl) {\r\n\t\tthis.#name = name;\r\n\t\tthis.#impl = impl;\r\n\t}\r\n\r\n\t/** Allows to obtain the name of the controller */\r\n\tget name() {\r\n\t\treturn this.#name;\r\n\t}\r\n\r\n\t/** Declares the implementation of this controller */\r\n\tdeclare(impl) {\r\n\t\tif (typeof (impl) !== 'function') {\r\n\t\t\tthrow new Error(`apice.controller.declare.invalid_implementation[${this.#name}]`);\r\n\t\t}\r\n\t\tthis.#impl = impl;\r\n\t}\r\n\r\n\t/** Internal method to run the controller implementation */\r\n\t#runImplementation() {\r\n\t\tlogger.debug('Serving controller. controller={0}', this.#name);\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tthis.#impl();\r\n\t\t\t\tresolve();\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(errorHandler.create({\r\n\t\t\t\t\tmodule: $moduleName,\r\n\t\t\t\t\tcause: err,\r\n\t\t\t\t\tcode: `apice.controller.serve.implementation_error[${this.#name}]`\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/** Internal method to load the implementation script (usually invoked the first time and only once) */\r\n\t#loadImplementation() {\r\n\t\tlogger.debug('Loading controller. controller={0}', this.#name);\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\thttp.loadScript(this.#impl).then(() => {\r\n\t\t\t\t// wraps the controller execution in a timeout to ensure it is executed after the effective declaration\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t// if the implementation is still a string it means that the controller was never loaded\r\n\t\t\t\t\tif (typeof (this.#impl) === 'string') {\r\n\t\t\t\t\t\treject(`apice.controller.serve.undeclared[${this.#name}]`);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.#runImplementation().then(resolve).catch(reject);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 0);\r\n\t\t\t}).catch((err) => {\r\n\t\t\t\treject(errorHandler.create({\r\n\t\t\t\t\tmodule: $moduleName,\r\n\t\t\t\t\tcause: err,\r\n\t\t\t\t\tcode: `apice.controller.load_script_error[${this.#name}]`\r\n\t\t\t\t}));\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Serves the controller executing its implementation\r\n\t * @returns Promise fullfilled once the controller has been executed\r\n\t */\r\n\tserve() {\r\n\t\tvar implType = typeof (this.#impl);\r\n\t\tif (implType === 'function') {\r\n\t\t\treturn this.#runImplementation();\r\n\t\t} else if (implType === 'string') {\r\n\t\t\treturn this.#loadImplementation();\r\n\t\t}\r\n\t\treturn Promise.reject(errorHandler.create({\r\n\t\t\tmodule: $moduleName,\r\n\t\t\tcode: `apice.controller.bad_implementation[${this.#name}]`\r\n\t\t}))\r\n\t}\r\n}\r\n\r\n/**\r\n * Registers a new controller\r\n * @param name Controller name\r\n * @param impl String with the controller implementation source or function with the behavior to execute\r\n */\r\n$module.register = function (name, impl) {\r\n\tlogger.debug('Registering controller. controller={0)', name);\r\n\tvar controller = new ApiceController(name, impl);\r\n\t$scope.controllers[name] = controller;\r\n\treturn controller;\r\n};\r\n\r\n/**\r\n * Declares the implementation of a specific controller\r\n * @param name Name of the controller to declare\r\n * @param impl Implementation to declare\r\n */\r\n$module.declare = function (name, impl) {\r\n\tlogger.debug('Declaring controller. controller={0}', name);\r\n\tvar controller = $scope.controllers[name];\r\n\tif (!controller) {\r\n\t\tthrow Error(`apice.controller.declare.unknown_controller[${name}]`);\r\n\t}\r\n\tcontroller.declare(impl);\r\n};\r\n\r\n/**\r\n * Allows to determine if a particular object is a controller\r\n * @param obj Object instance to evaluate\r\n * @returns Boolean value to determine if the object is a controller or not\r\n */\r\n$module.isController = function (obj) {\r\n\treturn (obj && obj instanceof ApiceController);\r\n};\r\n\r\nexport default $module;","import http from './http.mjs';\r\nimport errorHandler from './errorHandler.mjs';\r\nimport controller from './controller.mjs';\r\nimport element from './element.mjs';\r\nimport log from './logging.mjs';\r\n\r\nconst $moduleName = 'apice.fragment';\r\nconst logger = log.getLogger($moduleName);\r\nconst $scope = {};\r\n$scope.fragments = {};\r\n\r\n/** Class with the implementation of a fragment object */\r\nclass ApiceFragment {\r\n\t// name to identify the fragment\r\n\t#name;\r\n\t// url with the content source\r\n\t#source;\r\n\t// name of the controller used by the fragment\r\n\t#controller;\r\n\r\n\tconstructor(name, source, controller) {\r\n\t\tthis.#name = name;\r\n\t\tthis.#source = source;\r\n\t\tthis.#controller = controller;\r\n\t}\r\n\r\n\t/** Allows to obtain the name of the fragment */\r\n\tget name() {\r\n\t\treturn this.#name;\r\n\t}\r\n\r\n\t/** Internal method to execute the controller associated with the fragment */\r\n\t#runController() {\r\n\t\tif (!this.#controller) {\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t// FIXME: does this really need a settimeout\r\n\t\t\t//setTimeout(() => {\r\n\t\t\tvar controllerType = typeof (this.#controller);\r\n\t\t\tif (controllerType === 'function') {\r\n\t\t\t\tlogger.debug('Serving fragment controller function. fragment={0}', this.#name);\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis.#controller();\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t} catch (ex) {\r\n\t\t\t\t\treject(errorHandler.create({\r\n\t\t\t\t\t\tmodule: $moduleName,\r\n\t\t\t\t\t\tcause: ex,\r\n\t\t\t\t\t\tcode: `apice.fragment.controller_function_error[${this.#name}]`\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t} else if (controllerType === 'string') {\r\n\t\t\t\tlogger.debug('Serving fragment controller. fragment={0} controller={1}', this.#name, this.#controller);\r\n\t\t\t\tcontroller(this.#controller).serve().then(resolve).catch((ex) => {\r\n\t\t\t\t\treject(errorHandler.create({\r\n\t\t\t\t\t\tmodule: $moduleName,\r\n\t\t\t\t\t\tcause: ex,\r\n\t\t\t\t\t\tcode: `apice.fragment.controller_serve_error[${this.name}]`\r\n\t\t\t\t\t}));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t//}, 0);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the fragment content in a specific placeholder\r\n\t * @param selector String with the selector to identify the target placeholder or reference to the DOM element. If no selector\r\n\t * \t\t\tis provided the content will be rendered in the body by default.\r\n\t * @returns Promise to take actions depending on the result of the rendering. The promise receives a context that contains\r\n\t *          two attributes:\r\n\t *          - target: Reference to the DOM element that will receive the fragment content\r\n\t *          - response: Fragment content received as part of tha AJAX call.  This can be replaced by a different output.\r\n\t */\r\n\trender(selector) {\r\n\t\tif (!selector) {\r\n\t\t\tselector = 'body';\r\n\t\t}\r\n\t\tvar target = element(selector);\r\n\t\tif (!target) {\r\n\t\t\treturn Promise.reject(errorHandler.create({\r\n\t\t\t\tmodule: $moduleName,\r\n\t\t\t\tcode: `apice.fragment.render.target_not_found[${selector}]`\r\n\t\t\t}));\r\n\t\t}\r\n\t\tlogger.debug('Serving fragment. fragment={0}', this.#name);\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\thttp.request(this.#source, { method: 'GET' }).then((response) => {\r\n\t\t\t\t// TODO: add a response interceptor\r\n\t\t\t\t// FIXME: does this really needs a settimeout\r\n\t\t\t\t//setTimeout(() => {\r\n\t\t\t\ttarget.content(response);\r\n\t\t\t\tthis.#runController().then(resolve).catch(reject);\r\n\t\t\t\t//}, 0);\r\n\t\t\t}).catch((ex) => {\r\n\t\t\t\treject(errorHandler.create({\r\n\t\t\t\t\tmodule: $moduleName,\r\n\t\t\t\t\tmessage: 'An error has occurred trying to load the content',\r\n\t\t\t\t\tcause: ex,\r\n\t\t\t\t\tcode: `apice.fragment.render_error[${this.name}]`\r\n\t\t\t\t}));\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/** Allows to obtain a specific fragment */\r\nconst $module = function (name) {\r\n\tif (typeof (name) === 'string') {\r\n\t\tvar fragment = $scope.fragments[name];\r\n\t\tif (!fragment) {\r\n\t\t\tthrow new Error(`apice.fragment.unknown_fragment[${name}]`);\r\n\t\t}\r\n\t\treturn fragment;\r\n\t}\r\n};\r\n\r\n/**\r\n * Registers a new fragment\r\n * @param name Fragment name\r\n * @param source Fragment content\r\n * @param controller Optional name of the controller associated with the fragment\r\n */\r\n$module.register = function (name, source, controller) {\r\n\tlogger.debug('Registering fragment. fragment={0}', name);\r\n\tvar fragment = new ApiceFragment(name, source, controller);\r\n\t$scope.fragments[name] = fragment;\r\n\treturn fragment;\r\n};\r\n\r\n/**\r\n * Allows to determine if a particular object is a fragment\r\n * @param obj Object instance to evaluate\r\n * @returns Boolean value to determine if the object is a fragment or not\r\n */\r\n$module.isFragment = function (obj) {\r\n\treturn (obj && obj instanceof ApiceFragment);\r\n};\r\n\r\nexport default $module;","import events from './events.mjs';\r\nimport element from './element.mjs';\r\nimport fragment from './fragment.mjs';\r\nimport errorHandler from './errorHandler.mjs';\r\nimport logging from './logging.mjs';\r\n\r\nconst $moduleName = 'apice.router';\r\nconst logger = logging.getLogger($moduleName);\r\nconst $module = {};\r\n\r\nconst $scope = {};\r\n// contains all the routes registered\r\n$scope.routes = [];\r\n// holds the reference to the default route if any\r\n$scope.defaultRoute = null;\r\n// holds the reference to the route that will be served when there is not default route and a pattern is not matched\r\n$scope.notFoundRoute = null;\r\n// Reference to the target element that receives the routing of fragments\r\n$scope.target = null;\r\n\r\n\r\n/**\r\n * Internal control method that is invoked when the hash receives a change\r\n * @param eventName String with the name of the event that triggered the change (mostly for tracing purposes)\r\n */\r\nfunction onHashChange(eventName) {\r\n\tlogger.debug('Hash change triggered. event=' + eventName);\r\n\tconst hash = $module.hash();\r\n\tvar route = $module.match(hash);\r\n\tif (route) {\r\n\t\tlogger.debug('Serving route: ' + route.pattern);\r\n\t} else if ($scope.defaultRoute && (!hash || !$scope.notFoundRoute)) {\r\n\t\tif (hash) {\r\n\t\t\tlogger.warn('Route not found. Serving default hash=' + hash);\r\n\t\t} else {\r\n\t\t\tlogger.debug('No hash found. Serving default router');\r\n\t\t}\r\n\t\troute = $scope.defaultRoute;\r\n\t} else if ($scope.notFoundRoute) {\r\n\t\t// TODO: define actions when there is no matching route and default hash is not defined\r\n\t\tlogger.warn('Route not found. hash=' + hash + ' route=' + $scope.notFoundRoute.pattern);\r\n\t\troute = $scope.notFoundRoute;\r\n\t} else {\r\n\t\terrorHandler.render({\r\n\t\t\tmodule: $moduleName,\r\n\t\t\tmessage: 'The requested resource was not found: ' + hash,\r\n\t\t\tcode: 'apice.router.no_matching_no_default'\r\n\t\t}); // FIXME: should we use a selector like $scope.target\r\n\t\treturn;\r\n\t}\r\n\troute.serve();\r\n}\r\n\r\n/**\r\n * Class representing a hash that allows to parse it and evaluate its parts\r\n */\r\nclass RouteHash {\r\n\t#pattern\r\n\t#parts\r\n\t#parameters\r\n\r\n\tconstructor(pattern) {\r\n\t\tif (!pattern || typeof (pattern) !== 'string') {\r\n\t\t\tthrow Error('apice.router.hah.invalid_pattern');\r\n\t\t}\r\n\t\tthis.#pattern = pattern;\r\n\t\tthis.#parse();\r\n\t}\r\n\r\n\t#parse() {\r\n\t\tthis.#parts = [];\r\n\t\tthis.#parameters = [];\r\n\t\tvar parts = this.#pattern.split('/');\r\n\t\tfor (var idx = 0; idx < parts.length; idx++) {\r\n\t\t\tvar section = parts[idx];\r\n\t\t\tif (section.startsWith(':')) {\r\n\t\t\t\tthis.#parameters.push(section.substr(1));\r\n\t\t\t}\r\n\t\t\tthis.#parts.push(section);\r\n\t\t}\r\n\t}\r\n\r\n\tget pattern() {\r\n\t\treturn this.#pattern;\r\n\t}\r\n\r\n\tget count() {\r\n\t\treturn this.#parts.length;\r\n\t}\r\n\r\n\tget hasParameters() {\r\n\t\treturn this.#parameters.length > 0;\r\n\t}\r\n}\r\n\r\n/**\r\n * Class representing a route definition\r\n */\r\nclass ApiceRoute {\r\n\t// Object representing the router hash pattern\r\n\t#routeHash\r\n\t// Action to be executed when the route is executed\r\n\t#action\r\n\r\n\t/**\r\n\t * Creates an object with the router specifications\r\n\t * @param pattern String with the hash pattern to use for this router\r\n\t * @param action Function with the action to execute or reference to a fragment or a controller\r\n\t */\r\n\tconstructor(pattern, action) {\r\n\t\tif (!pattern || typeof (pattern) !== 'string') {\r\n\t\t\tthrow Error('apice.route.constructor.invalid_route_value');\r\n\t\t} else if (!action) {\r\n\t\t\tthrow Error('apice.route.constructor.missing_route_action');\r\n\t\t}\r\n\t\tthis.#routeHash = new RouteHash(pattern);\r\n\t\tthis.#action = action;\r\n\t}\r\n\r\n\tget pattern() {\r\n\t\treturn this.#routeHash.pattern;\r\n\t}\r\n\r\n\tasDefault() {\r\n\t\t$scope.defaultRoute = this;\r\n\t}\r\n\r\n\tasNotFound() {\r\n\t\t$scope.notFoundRoute = this;\r\n\t}\r\n\r\n\tmatch(hash) {\r\n\t\tif (!this.#routeHash.hasParameters) {\r\n\t\t\treturn hash === this.#routeHash.pattern;\r\n\t\t}\r\n\t\t// QUEDE AQUI IMPLEMENTANDO EL ALGORITMO DE HASHING\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Serves the route represented by the current instance, triggering its associated action\r\n\t */\r\n\tserve() {\r\n\t\ttry {\r\n\t\t\tif (typeof (this.#action) === 'function') {\r\n\t\t\t\tthis.#action();\r\n\t\t\t} else if (typeof (this.#action) === 'string') {\r\n\t\t\t\tfragment(this.#action).render($scope.target);\r\n\t\t\t} else if (fragment.isFragment(this.#action)) {\r\n\t\t\t\tthis.#action.render($scope.target);\r\n\t\t\t} else if (typeof (this.#action.serve) === 'function') {\r\n\t\t\t\tthis.#action.serve();\r\n\t\t\t} else {\r\n\t\t\t\tthrow Error(`apice.router.invalid_action[${this.pattern}]`);\r\n\t\t\t}\r\n\t\t} catch (ex) {\r\n\t\t\terrorHandler.render({\r\n\t\t\t\tmodule: $moduleName,\r\n\t\t\t\tmessage: 'An error has occurred trying to serve the resource. Please contact technical support without closing this screen',\r\n\t\t\t\tcode: `apice.router.serve_error[${this.pattern}]`,\r\n\t\t\t\tcause: ex\r\n\t\t\t}, $scope.target);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Registers a route into the routing engine\r\n * @param pattern String with the path used for the route\r\n * @param action Function to be invoked when the route is executed, or reference to the fragment or the controller to be executed\r\n */\r\n$module.register = function (pattern, action) {\r\n\tlogger.debug('Registering route. pattern=' + pattern);\r\n\tvar route = new ApiceRoute(pattern, action);\r\n\t$scope.routes.push(route);\r\n\treturn route;\r\n};\r\n\r\n/**\r\n * Search for the route that matches a specific route value\r\n * @param route String with the route path to match\r\n * @returns Route instance that matches the path or null if nothing matches the path\r\n */\r\n$module.match = function (hash) {\r\n\tif (!hash || typeof (hash) !== 'string') {\r\n\t\treturn null;\r\n\t}\r\n\tfor (var idx = 0; idx < $scope.routes.length; idx++) {\r\n\t\tvar route = $scope.routes[idx];\r\n\t\tif (route.match(hash) === true) {\r\n\t\t\treturn route;\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\n/**\r\n * Obtains the current hash\r\n * @returns Current hash value in the location\r\n */\r\n$module.hash = function () {\r\n\tvar hash = window.location.hash;\r\n\tif (hash.startsWith('#')) {\r\n\t\thash = hash.substr(1);\r\n\t}\r\n\treturn hash;\r\n};\r\n\r\n/**\r\n * Initializes the execution of the routing engine\r\n */\r\n$module.start = function () {\r\n\tlogger.debug('Starting Apice router');\r\n\tevents.addListener(window, 'hashchange', () => {\r\n\t\tonHashChange('hashchange');\r\n\t});\r\n\t//util.events.addListener(window, 'popstate', () => {\r\n\t//    onHashChange('popstate');\r\n\t//    return false;\r\n\t//});\r\n\tevents.documentReady(() => {\r\n\t\tonHashChange('routerstart');\r\n\t});\r\n\treturn $module;\r\n};\r\n\r\n/**\r\n * Gets or sets the target element that will receive the content of any route associated with a fragment.  This method\r\n * is polymorphic. When no argument is provided returns the current target.\r\n * @param selector String with the selector of the target or reference to the DOM element that will receive the\r\n *                  content of any route that contains a fragment. When this is not provided the method will return\r\n *                  the selected target.\r\n * @returns When no selector is provided this method returns the defined target.\r\n */\r\n$module.target = function () {\r\n\t// getter mode\r\n\tif (arguments.length === 0) {\r\n\t\treturn $scope.target;\r\n\t}\r\n\t// setter mode\r\n\tvar selector = arguments[0];\r\n\tif (!selector) {\r\n\t\t$scope.target = null;\r\n\t} else {\r\n\t\t$scope.target = element(selector);\r\n\t\tif (!$scope.target) {\r\n\t\t\tlogger.error(`apice.router.target_notfound[${selector}]`);\r\n\t\t}\r\n\t}\r\n\tif (!$scope.target) {\r\n\t\tlogger.info('Using default routing target container');\r\n\t\tvar container = document.getElementById('apc-router-container');\r\n\t\tif (!container) {\r\n\t\t\tcontainer = document.createElement('div');\r\n\t\t\tcontainer.id = 'apc-router-container';\r\n\t\t\tdocument.body.appendChild(container);\r\n\t\t}\r\n\t\t$scope.target = element(container);\r\n\t}\r\n\treturn $module;\r\n};\r\n\r\nexport default $module;","import logging from '../logging.mjs';\r\n\r\nconst $moduleName = 'apice.ui.toast';\r\nconst $module = {};\r\n\r\nconst $scope = {};\r\n$scope.styles = {};\r\n$scope.styles['info'] = { title: 'Information', icon: '', color: {} }\r\n\r\nconst logger = logging.getLogger($moduleName);\r\n\r\nfunction createToastContainer() {\r\n    var container = document.getElementById('apc-toast-container');\r\n    if(!container) {\r\n        container = document.createElement('div');\r\n        container.id = 'apc-toast-container';\r\n        document.body.appendChild(container);\r\n    }\r\n    return container;\r\n}\r\n\r\nclass ApiceToast {\r\n    #style;\r\n    #title;\r\n    #body;\r\n    #icon;\r\n    #box;\r\n    #dismiss;\r\n\r\n    constructor(specs) {\r\n        this.#style = specs.style;\r\n        this.#title = { text: specs.title };\r\n        this.#body = { text: specs.message };\r\n        this.#icon = { resource: specs.icon };\r\n        this.#dismiss = specs.dismiss;\r\n        this.#render();\r\n    }\r\n\r\n    get title() {\r\n        if(!this.#title.text && this.#title.text !== false) {\r\n            if(this.#style === 'error') {\r\n                return 'Error!';\r\n            } else if(this.#style === 'warn') {\r\n                return 'Warning!';\r\n            } else if(this.#style === 'info') {\r\n                return 'Info';\r\n            } else if(this.#style === 'success') {\r\n                return 'Success!';\r\n            } \r\n        }\r\n        return this.#title.text;\r\n    }\r\n\r\n    set title(text) {\r\n        this.#title.text = text;\r\n        this.#renderTitle();\r\n    }\r\n\r\n    get message() {\r\n        return this.#body.text;\r\n    }\r\n\r\n    #renderTitle() {\r\n        var text = this.title;\r\n        if(!text) {\r\n            if(this.#title.box) {\r\n                this.#title.box.style.display = 'none';\r\n            }\r\n            return;\r\n        }\r\n        if(!this.#title.box) {\r\n            this.#title.box = document.createElement('div');\r\n            this.#title.box.className = 'apc-header';\r\n            this.#box.appendChild(this.#title.box);\r\n        }\r\n        this.#title.box.style.display = 'block';\r\n        this.#title.box.innerHTML = text;\r\n    }\r\n\r\n    #renderBody() {\r\n        if(!this.#body.box) {\r\n            this.#body.box = document.createElement('div');\r\n            this.#body.box.className = 'apc-body';\r\n            this.#box.appendChild(this.#body.box);\r\n        }\r\n        this.#body.box.innerHTML = this.message;\r\n    }\r\n\r\n    #renderIcon() {\r\n        if(!this.#icon.resource) {\r\n            if(this.#icon.box) {\r\n                this.#icon.box.style.display = 'none';\r\n            }\r\n            return;\r\n        }\r\n        if(!this.#icon.box) {\r\n            this.#icon.box = document.createElement('div');\r\n            this.#icon.box.className = 'apc-icon';\r\n            this.#box.appendChild(this.#icon.box);\r\n        }\r\n        if(this.#icon.resource === true) {\r\n            this.#icon.box.className = 'apc-icon icon-' + this.#style;\r\n            this.#icon.box.innerHTML = '&nbsp;';\r\n        } else {\r\n            // TODO: implement\r\n        }\r\n    }\r\n\r\n    #render() {\r\n        if(!this.#box) {\r\n            this.#box = document.createElement('div');\r\n        }\r\n        this.#box.className = 'apc-toast toast-' + this.#style;\r\n        this.#renderIcon();\r\n        this.#renderTitle();\r\n        this.#renderBody();\r\n    }\r\n\r\n    appendTo(container) {\r\n        container.appendChild(this.#box);\r\n    }\r\n}\r\n\r\nfunction renderToast() {\r\n    const specs =  { title: null, message: null, icon: true };\r\n    specs.style = arguments[0];\r\n    if(arguments.length === 2) {\r\n        specs.message = arguments[1];\r\n    } else if(arguments.length === 3) {\r\n        specs.title = arguments[1];\r\n        specs.message = arguments[2];\r\n    }\r\n    if(!specs.message) {\r\n        logger.warn('A toast has been requested without message. The toast has been ignored');\r\n        return;\r\n    }\r\n    const toast = new ApiceToast(specs);\r\n    const container = createToastContainer();\r\n    toast.appendTo(container);\r\n}\r\n\r\n$module.error = function() {\r\n    renderToast('error', ...arguments);\r\n};\r\n\r\n$module.warn = function() {\r\n    renderToast('warn', ...arguments);\r\n};\r\n\r\n$module.info = function() {\r\n    renderToast('info', ...arguments);\r\n};\r\n\r\n$module.success = function() {\r\n    renderToast('success', ...arguments);\r\n};\r\n\r\n$module.setMax = function() {\r\n    \r\n};\r\n\r\nexport default $module;\r\n","import random from '../random.mjs';\r\nimport element from '../element.mjs';\r\nimport logging from '../logging.mjs';\r\n\r\nconst $moduleName = 'apice.ui.form';\r\nconst $module = {};\r\nconst logger = logging.getLogger($moduleName);\r\n\r\nfunction getSizeClass(specs) {\r\n    if (specs.size === 'xs') {\r\n        return ' apc-xs';\r\n    } else if (specs.size === 'sm') {\r\n        return ' apc-sm';\r\n    } else if (!specs.size || specs.size === 'md') {\r\n        return ' apc-md';\r\n    } else if (!specs.size || specs.size === 'lg') {\r\n        return ' apc-lg';\r\n    } else {\r\n        return ' apc-xl';\r\n    }\r\n    return '';\r\n}\r\n\r\nfunction getFieldClass(specs) {\r\n    let fieldClass = 'apc-field';\r\n    // type modifier\r\n    if (specs.type === 'input') {\r\n        fieldClass += ' apc-text';\r\n    } else if (specs.type === 'check') {\r\n        fieldClass += ' apc-check';\r\n    } else if (specs.type === 'select') {\r\n        fieldClass += ' apc-select';\r\n    }\r\n    // sizing  modifier\r\n    fieldClass += getSizeClass(specs);\r\n    return fieldClass;\r\n}\r\n\r\n/**\r\n * Internal method to create an option DOM elements and add it to a field\r\n * @param field Reference to the field to add the option on it\r\n * @param label String with the option label\r\n * @param value String with the value\r\n */\r\nfunction createOption(field, label, value) {\r\n    const option = document.createElement('option');\r\n    option.innerHTML = label;\r\n    option.value = value;\r\n    field.appendChild(option);\r\n}\r\n\r\n/**\r\n * Fills the options in a select field based on specific data\r\n * @param field Reference to the field to add the options on it\r\n * @param data Array with the data in the form {label: 'string', value: 'string'}, or reference to a function that produces such array, or promise that produces the array when is fullfilled\r\n */\r\nfunction fillSelect(field, data) {\r\n    if(!data) {\r\n        return;\r\n    } else if(typeof(data) === 'function') {\r\n        const result = data(); // FIXME: add error handling\r\n        fillSelect(field, result);\r\n        return;\r\n    } else if(data instanceof Promise) {\r\n        data.then(result => {\r\n            fillSelect(field, result);\r\n        }).catch(err => {\r\n            // FIXME: implement\r\n        });\r\n        return;\r\n    } else if (!Array.isArray(data) || data.length === 0) {\r\n        data = ['No data'];\r\n    }\r\n    createOption(field, 'Please select...', '');\r\n    data.map(item => {\r\n        createOption(field, item.label, item.value);\r\n    });\r\n}\r\n\r\nclass BlockElement {\r\n    #element;\r\n    #rendered;\r\n\r\n    constructor(className, size) {\r\n        this.#element = document.createElement('div');\r\n        this.#element.className = className + getSizeClass({ size: size });\r\n        this.#element.innerHTML = '&nbsp;';\r\n    }\r\n\r\n    render(container) {\r\n        if(this.#rendered) {\r\n            return;\r\n        }\r\n        this.#rendered = true;\r\n        container.appendChild(this.#element);\r\n    }\r\n}\r\n\r\nclass ApiceButton {\r\n    #id;\r\n    #element;\r\n    #rendered;\r\n\r\n    constructor(specs) {\r\n        if(!specs) {\r\n            throw Error('apice.ui.form.button.null_specs');\r\n        }\r\n        if(!specs.id) {\r\n            specs.id = 'btn_' + random.tinyId();\r\n        }\r\n        this.#id = specs.id;\r\n        this.#element = document.createElement('button');\r\n        this.#element.id = specs.id;\r\n        this.#element.className = 'apc-button';\r\n        this.#element.innerHTML = specs.label;\r\n        this.#rendered = false;\r\n    }\r\n\r\n    click(fnc) {\r\n        if(arguments.length === 0) {\r\n            if(this.#element.onclick) {\r\n                this.#element.onclick();\r\n                // FIXME: change by trigger event\r\n            }\r\n            return;\r\n        }\r\n        if(typeof(fnc) !== 'function') {\r\n            this.#element.onclick = null;\r\n            return;\r\n        }\r\n        this.#element.onclick = fnc;\r\n    }\r\n\r\n    render(container) {\r\n        if(this.#rendered) {\r\n            return;\r\n        }\r\n        this.#rendered = true;\r\n        container.appendChild(this.#element);\r\n    }\r\n}\r\n\r\nclass ApiceButtonBar {\r\n    #buttons;\r\n    #rendered;\r\n    #element;\r\n\r\n    constructor() {\r\n        this.#buttons = [];\r\n        this.#rendered = false;\r\n        this.#element = document.createElement('div');\r\n        this.#element.className = 'apc-button-bar';\r\n    }\r\n\r\n    addButton(specs) {\r\n        if(!specs) {\r\n            return;\r\n        }\r\n        const button = new ApiceButton(specs);\r\n        this.#buttons.push(button);\r\n        if(this.#rendered) {\r\n            button.render();\r\n        }\r\n        return button;\r\n    }\r\n\r\n    render(container) {\r\n        if(this.#rendered) {\r\n            return;\r\n        }\r\n        this.#rendered = true;\r\n        this.#buttons.map(button => button.render(this.#element));\r\n        container.appendChild(this.#element);\r\n    }\r\n}\r\n\r\n/** Represents a field inside a dynamic Apice form */\r\nclass ApiceField {\r\n    #id;\r\n    #type;\r\n    #label;\r\n    #group;\r\n    #field;\r\n    #source;\r\n\r\n    constructor(specs) {\r\n        if (!specs.id) {\r\n            specs.id = 'field_' + random.tinyId();\r\n        }\r\n        if (!specs.type) {\r\n            specs.type = 'input'\r\n        }\r\n        this.#id = specs.id;\r\n        this.#type = specs.type;\r\n        this.#label = specs.label;\r\n        this.#group = document.createElement('div');\r\n        this.#group.className = getFieldClass(specs);\r\n        this.#createField(specs);\r\n    }\r\n\r\n    /** Internal method to create the label for the form field represented by the instance */\r\n    #renderLabel() {\r\n        if (this.#label) {\r\n            const labelBox = document.createElement('label');\r\n            labelBox.setAttribute('for', this.#id);\r\n            labelBox.className = 'apc-label'\r\n            labelBox.innerHTML = this.#label;\r\n            this.#group.appendChild(labelBox);\r\n        }\r\n    }\r\n\r\n    /** Internal method to create the area of the field represented by the instance */\r\n    #createField(specs) {\r\n        if (this.#type === 'input') {\r\n            this.#field = document.createElement('input');\r\n            this.#field.type = 'text';\r\n        } else if (this.#type === 'check') {\r\n            this.#field = document.createElement('input');\r\n            this.#field.type = 'checkbox';\r\n        } else if (this.#type === 'select') {\r\n            this.#field = document.createElement('select');\r\n            fillSelect(this.#field, specs.source);\r\n        }\r\n    }\r\n\r\n    render(container) {\r\n        if (this.#field) {\r\n            this.#group.appendChild(this.#field);\r\n        }\r\n        this.#renderLabel();\r\n        container.appendChild(this.#group);\r\n    }\r\n}\r\n\r\n/** Represents a dynamic form */\r\nclass ApiceForm {\r\n    /** Holds the form ID */\r\n    #id\r\n    /** Allows to determine if the form has been rendered already or not */\r\n    #rendered;\r\n    /** Array containing the form content objects */\r\n    #content;\r\n    /** Reference to the top DOM element containing the visual representation of the form */\r\n    #element;\r\n\r\n    constructor(selector) {\r\n        this.#id = 'form_' + random.tinyId();\r\n        this.#content = [];\r\n        this.#rendered = false;\r\n\r\n        const formElement = document.createElement('div');\r\n        formElement.id = this.#id;\r\n        formElement.className = 'apc-form';\r\n        this.#element = formElement;\r\n\r\n        const container = element(selector);\r\n        container.append(formElement);\r\n    }\r\n\r\n    #addComponent(component) {\r\n        if(!component) {\r\n            return;\r\n        }\r\n        this.#content.push(component);\r\n        if (this.#rendered) {\r\n            component.render(this.#element);\r\n        }\r\n    }\r\n\r\n    addField(specs) {\r\n        if (!specs) {\r\n            return;\r\n        }\r\n        const component = new ApiceField(specs);\r\n        this.#addComponent(component);\r\n        return component;\r\n    }\r\n\r\n    addSpacer(size) {\r\n        var component = new BlockElement('apc-spacer', size);\r\n        this.#addComponent(component);\r\n    }\r\n\r\n    addBreak() {\r\n        var component = new BlockElement('apc-break')\r\n        this.#addComponent(component);\r\n    }\r\n\r\n    addButtonBar() {\r\n        var component = new ApiceButtonBar();\r\n        this.#addComponent(component);\r\n        return component;\r\n    }\r\n\r\n    addButton(specs) {\r\n        if(!specs) {\r\n            return;\r\n        }\r\n        var component = new ApiceButton(specs);\r\n        this.#addComponent(component);\r\n        return component;\r\n    }\r\n\r\n    render() {\r\n        if (this.#rendered) {\r\n            return;\r\n        }\r\n        this.#rendered = true;\r\n        this.#content.map(child => child.render(this.#element));\r\n        return this;\r\n    }\r\n}\r\n\r\n$module.create = function (selector) {\r\n    return new ApiceForm(selector);\r\n};\r\n\r\nexport default $module;\r\n","import toast from './toast.mjs';\r\nimport form from './form.mjs';\r\n\r\nexport default { toast, form };","'use strict';\r\nimport logging from './logging.mjs';\r\nimport util from './util.mjs';\r\nimport events from './events.mjs';\r\nimport element from './element.mjs';\r\nimport cookies from './cookies.mjs';\r\nimport http from './http.mjs';\r\nimport controller from './controller.mjs';\r\nimport fragment from './fragment.mjs';\r\nimport router from './router.mjs';\r\nimport error from './errorHandler.mjs';\r\nimport ui from './components/ui.mjs';\r\n\r\nconst $scope = {};\r\n$scope.version = { major: 1, minor: 0, patch: 0 };\r\nconsole.log('%Apice Framework ' + version(), 'color: #64dd17;');\r\n\r\n/**\r\n * Allows to obtain the current framework version.  If a boolean true is passed as an argument then a \r\n * canonical represenration of the version will be produced.\r\n * @returns Version number as a string or canonical (as an object)\r\n */\r\nfunction version() {\r\n\tif (arguments.length === 1 && arguments[0] === true) {\r\n\t\treturn {\r\n\t\t\tmajor: $scope.version.major,\r\n\t\t\tminor: $scope.version.minor,\r\n\t\t\tpatch: $scope.version.patch\r\n\t\t};\r\n\t}\r\n\treturn 'v' + $scope.version.major + '.' + $scope.version.minor + '.' + $scope.version.patch;\r\n};\r\n\r\n/**\r\n * Adds a function to be executed when the framework has completed the loading process\r\n * @param callback Function to be invoked once the framework is ready\r\n */\r\nfunction ready(callback) {\r\n\tevents.documentReady(callback);\r\n};\r\n\r\nexport default { version, ready, logging, util, events, element, cookies, http, controller, fragment, router, error, ui };"],"names":["$module","target","Promise","text","replace","holderRegex","placeholders","input","values","result","output","unbind","indexControl","holders","matchAll","holder","source","regex","RegExp","value","filter","element","name","timespan","Error","expireDate","Date","setTime","getTime","cookie","util","trim","toGMTString","document","cookieArray","split","idx","length","rawCookie","cookieParts","$scope","fatal","color","label","error","warn","info","debug","trace","levelCookie","cookies","get","globalLevel","levels","Logger","this","arguments","levelInfo","set","_classPrivateFieldGet","message","level","JSON","stringify","replaced","console","log","getLogger","loggers","logName","logger","_$scope$globalLevel","addListener","eventName","listener","addEventListener","attachEvent","documentReady","callback","readyState","parseHTML","content","createElement","innerHTML","childNodes","ApiceElement","SingleElement","each","child","_this2","append","item","_this3","appendChild","isDOMElement","NodeList","node","prepend","first","firstChild","_this4","insertBefore","fnc","events","MultipleElements","push","functionName","args","returnValue","targetFunction","apply","ex","obj","_typeof","nodeType","selector","body","bodySingleton","elements","querySelectorAll","nodes","add","applySelector","tinyId","Math","random","toString","substring","shortId","guid","ErrorHandler","specs","cause","module","code","logging","entryText","Apice","ui","toast","stack","HttpError","create","specType","render","err","createHttpError","httpCode","window","event","reason","preventDefault","createRequest","resolve","reject","request","XMLHttpRequest","ActiveXObject","e","createXmlHttp","onreadystatechange","status","responseText","errorHandler","url","options","method","open","async","data","send","loadScript","src","type","onerror","onload","head","ApiceUrl","protocol","host","port","path","query","hash","endsWith","startsWith","resourceUrl","UrlBuilder","portType","String","$moduleName","controller","controllers","ApiceController","impl","implType","_this","http","then","setTimeout","register","declare","isController","ApiceFragment","response","controllerType","serve","fragment","fragments","isFragment","onHashChange","route","match","pattern","defaultRoute","notFoundRoute","routes","RouteHash","parts","section","substr","ApiceRoute","action","hasParameters","location","start","container","getElementById","id","styles","title","icon","createToastContainer","ApiceToast","style","resource","dismiss","box","className","display","renderToast","appendTo","success","setMax","getSizeClass","size","createOption","field","option","fillSelect","Array","isArray","map","BlockElement","ApiceButton","onclick","ApiceButtonBar","button","ApiceField","fieldClass","labelBox","setAttribute","ApiceForm","formElement","component","form","version","major","minor","patch","ready","router"],"mappings":"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"}