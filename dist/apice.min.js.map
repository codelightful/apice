{"version":3,"file":"apice.min.js","sources":["../src/util.mjs","../src/cookies.mjs","../src/logging.mjs","../src/events.mjs","../src/element.mjs","../src/random.mjs","../src/errorHandler.mjs","../src/http.mjs","../src/controller.mjs","../src/fragment.mjs","../src/router.mjs","../src/components/toast.mjs","../src/components/form.mjs","../src/components/box.mjs","../src/components/ui.mjs","../src/apice.mjs"],"sourcesContent":["// NOTE: this module is a low level module and should not import any other module\r\nconst $module = {};\r\n\r\n//-----------------------------------------------------------------------------\r\n// OBJECT EVALUATION\r\n//-----------------------------------------------------------------------------\r\n/**\r\n * Allows to determine if a specific object instance is a promise or not\r\n * @param target Object instance to evaluate\r\n * @returns Boolean value to determine if the object instance is a promise or not\r\n */\r\n$module.isPromise = function (target) {\r\n\treturn (target instanceof Promise);\r\n};\r\n\r\n//-----------------------------------------------------------------------------\r\n// STRING MANIPULATION\r\n//-----------------------------------------------------------------------------\r\n/** Trims a string by removing leading and trailing white spaces  */\r\n$module.trim = function (text) {\r\n\tif(!text) {\r\n\t\treturn '';\r\n\t}\r\n\treturn text.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n};\r\n\r\n// regular expression to extract the message placeholders\r\nconst holderRegex = /\\{(\\d+)\\}/g;\r\n\r\n/**\r\n * Replaces all the placeholders in a string\r\n * @param input String containing the placeholders to replace. Each placeholder will be identified\r\n * \t\t\twith a numeric index (starting at zero) between curly brackets.\r\n * @param values Array with the values to replace the placeholders.\r\n * @returns Object containing the output text and the unbinded values. It has the shape: { output: 'string', unbind: array };\r\n */\r\n$module.placeholders = function (input, ...values) {\r\n\tconst result = { output: input, unbind: values };\r\n\tif (typeof (input) !== 'string' || !values || values.length === 0) {\r\n\t\treturn result;\r\n\t}\r\n\tconst indexControl = {};\r\n\tconst holders = input.matchAll(holderRegex);\r\n\tfor (let holder of holders) {\r\n\t\tconst source = holder[1];\r\n\t\tif (!source || indexControl[source]) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tindexControl[source] = true;\r\n\t\tconst regex = new RegExp('\\\\{' + source + '\\\\}', 'g');\r\n\t\tconst value = values[source];\r\n\t\tif(typeof(value) === 'undefined') {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tresult.unbind[source] = null;\r\n\t\tresult.output = result.output.replace(regex, value);\r\n\t}\r\n\t// removes the elements that have been used\r\n\tresult.unbind = result.unbind.filter((element) => {\r\n\t\treturn element !== undefined && element !== null;\r\n\t});\r\n\treturn result;\r\n};\r\n\r\nexport default $module;","import util from './util.mjs';\r\n\r\nconst $module = {};\r\n\r\n/**\r\n * Sets a specific cookie\r\n * @param name Name of the cookie to set\r\n * @param value Value to set\r\n * @param timespan Timspan to maintain the cookie in seconds\r\n */\r\n$module.set = function (name, value, timespan) {\r\n\tif (!name) {\r\n\t\tconsole.warn('Unable to set a cookie without name');\r\n\t\treturn;\r\n\t} \r\n\tif (typeof (timespan) !== 'number') {\r\n\t\tconsole.warn('Invalid timespan has been provided. Setting the default value');\r\n\t\ttimespan = 3600;\r\n\t}\r\n\tconst expireDate = new Date();\r\n\texpireDate.setTime(expireDate.getTime() + (timespan * 1000));\r\n\tvar cookie = util.trim(name) + '=' + value + '; expires=' + expireDate.toGMTString() + '; path=/';\r\n\tdocument.cookie = cookie;\r\n};\r\n\r\n/**\r\n * Obtains the value from a cookie\r\n * @param name Name of the cookie to obtain\r\n * @returns Cookie value or null if it is not defined\r\n */\r\n$module.get = function (name) {\r\n\tif (!name) {\r\n\t\treturn null;\r\n\t}\r\n\tconst cookieArray = document.cookie.split(';');\r\n\tfor (var idx = 0; idx < cookieArray.length; idx++) {\r\n\t\tconst rawCookie = util.trim(cookieArray[idx]);\r\n\t\tif (!rawCookie) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tconst cookieParts = rawCookie.split('=');\r\n\t\tif (util.trim(cookieParts[0]) !== name) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\treturn cookieParts[1];\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nexport default $module;","/*\r\nApice Logger Module\r\nv1.0.0\r\n*/\r\nimport util from './util.mjs';\r\nimport cookies from './cookies.mjs';\r\n\r\nconst $module = {};\r\nconst $scope = {};\r\n\r\n// contains all the loggers registered\r\n$scope.loggers = {};\r\n// dictionary with all the defined log levels\r\n$scope.levels = {\r\n\tfatal: { value: 10, color: '#ff4444', label: 'FATAL' },\r\n\terror: { value: 20, color: '#ff4444', label: 'ERROR' },\r\n\twarn: { value: 30, color: '#ff8800', label: 'WARN' },\r\n\tinfo: { value: 40, color: '#0099cc', label: 'INFO' },\r\n\tdebug: { value: 50, color: '#3E4551', label: 'DEBUG' },\r\n\ttrace: { value: 60, color: '#3E4551', label: 'TRACE' }\r\n};\r\n\r\nvar levelCookie = cookies.get('apice.logger.level');\r\nif (!levelCookie) {\r\n\t$scope.globalLevel = $scope.levels.warn;\r\n} else {\r\n\t$scope.globalLevel = $scope.levels[levelCookie];\r\n\tif (!$scope.globalLevel) {\r\n\t\t$scope.globalLevel = $scope.levels.warn;\r\n\t}\r\n}\r\n\r\n/** Represents a specific logger */\r\nclass Logger {\r\n\t// holds the name or identigier of the current logger\r\n\t#name;\r\n\t// log level defined for the logger instance\r\n\t#level;\r\n\r\n\tconstructor(name) {\r\n\t\tthis.#name = name;\r\n\t\tvar levelCookie = cookies.get('apice.logger.[' + name + '].level');\r\n\t\tif (!levelCookie) {\r\n\t\t\tthis.#level = $scope.globalLevel;\r\n\t\t} else {\r\n\t\t\tthis.#level = $scope.levels[levelCookie];\r\n\t\t\tif (!this.#level) {\r\n\t\t\t\tthis.#level = $scope.globalLevel;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/** Allows to obtain the logger name */\r\n\tget name() {\r\n\t\treturn this.#name;\r\n\t}\r\n\r\n\t/** Obtains or sets the log level defined for the logger instance */\r\n\tlevel() {\r\n\t\tif (arguments.length !== 0) {\r\n\t\t\tvar levelInfo = $scope.levels[arguments[0]];\r\n\t\t\tif (!levelInfo) {\r\n\t\t\t\tthrow new Error('apice.logger.invalid_level[' + arguments[0] + ']');\r\n\t\t\t}\r\n\t\t\tthis.#level = levelInfo;\r\n\t\t\tcookies.set('apice.logger.[' + this.#name + '].level', arguments[0], 1800);\r\n\t\t}\r\n\t\treturn this.#level.label;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal implementation that writes a log entry\r\n\t * @param level Level of the log message to print\r\n\t * @param message Message to print into the log entry. To include placerholders set the index of the element\r\n\t *          (starting with 0) between curvy brackets. Example: \"the values is {0}\"\r\n\t * @param values Values to replace the placeholders plus any element to include as details. Any element that\r\n\t *          does not match the placeholders will be included as log details\r\n\t */\r\n\t#writeLog(level, message, ...values) {\r\n\t\tif (this.#level.value >= level.value) {\r\n\t\t\tif (typeof (message) !== 'string') {\r\n\t\t\t\tmessage = JSON.stringify(message);\r\n\t\t\t} else if (values && values.length > 0) {\r\n\t\t\t\tconst replaced = util.placeholders(message, ...values);\r\n\t\t\t\tmessage = replaced.output;\r\n\t\t\t\tvalues = replaced.unbind;\r\n\t\t\t}\r\n\t\t\tconsole.log('%c[' + level.label + '][' + this.#name + ']: ' + message, ...['color: ' + level.color, ...values]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Prints a FATAL log message\r\n\t * @param message Message to print into the log entry. To include placerholders set the index of the element\r\n\t *          (starting with 0) between curvy brackets. Example: \"the values is {0}\"\r\n\t * @param values Values to replace the placeholders plus any element to include as details. Any element that\r\n\t *          does not match the placeholders will be included as log details\r\n\t */\r\n\tfatal(message, ...values) {\r\n\t\tthis.#writeLog($scope.levels.fatal, message, ...values);\r\n\t}\r\n\r\n\t/**\r\n\t * Prints an ERROR log message\r\n\t * @param message Message to print into the log entry. To include placerholders set the index of the element\r\n\t *          (starting with 0) between curvy brackets. Example: \"the values is {0}\"\r\n\t * @param values Values to replace the placeholders plus any element to include as details. Any element that\r\n\t *          does not match the placeholders will be included as log details\r\n\t */\r\n\terror(message, ...values) {\r\n\t\tthis.#writeLog($scope.levels.error, message, ...values);\r\n\t}\r\n\r\n\t/**\r\n\t * Prints a WARNING log message\r\n\t * @param message Message to print into the log entry. To include placerholders set the index of the element\r\n\t *          (starting with 0) between curvy brackets. Example: \"the values is {0}\"\r\n\t * @param values Values to replace the placeholders plus any element to include as details. Any element that\r\n\t *          does not match the placeholders will be included as log details\r\n\t */\r\n\twarn(message, ...values) {\r\n\t\tthis.#writeLog($scope.levels.warn, message, ...values);\r\n\t}\r\n\r\n\t/**\r\n\t * Prints an INFO log message\r\n\t * @param message Message to print into the log entry. To include placerholders set the index of the element\r\n\t *          (starting with 0) between curvy brackets. Example: \"the values is {0}\"\r\n\t * @param values Values to replace the placeholders plus any element to include as details. Any element that\r\n\t *          does not match the placeholders will be included as log details\r\n\t */\r\n\tinfo(message, ...values) {\r\n\t\tthis.#writeLog($scope.levels.info, message, ...values);\r\n\t}\r\n\r\n\t/**\r\n\t * Prints a DEBUG log message\r\n\t * @param message Message to print into the log entry. To include placerholders set the index of the element\r\n\t *          (starting with 0) between curvy brackets. Example: \"the values is {0}\"\r\n\t * @param values Values to replace the placeholders plus any element to include as details. Any element that\r\n\t *          does not match the placeholders will be included as log details\r\n\t */\r\n\tdebug(message, ...values) {\r\n\t\tthis.#writeLog($scope.levels.debug, message, ...values);\r\n\t}\r\n\r\n\t/**\r\n\t * Prints a TRACE log message\r\n\t * @param message Message to print into the log entry. To include placerholders set the index of the element\r\n\t *          (starting with 0) between curvy brackets. Example: \"the values is {0}\"\r\n\t * @param values Values to replace the placeholders plus any element to include as details. Any element that\r\n\t *          does not match the placeholders will be included as log details\r\n\t */\r\n\ttrace(message, ...values) {\r\n\t\tthis.#writeLog($scope.levels.trace, message, ...values);\r\n\t}\r\n}\r\n\r\n/**\r\n * Obtains the instance of a specific logger or creates a new one if that does not exist\r\n * @param name Logger name or identifier\r\n * @returns Logger instance\r\n */\r\n$module.getLogger = function (name) {\r\n\tif (!name) {\r\n\t\tname = 'system';\r\n\t}\r\n\tif (!$scope.loggers[name]) {\r\n\t\t$scope.loggers[name] = new Logger(name);\r\n\t}\r\n\treturn $scope.loggers[name];\r\n};\r\n\r\n/** Gets or sets the default level defined for the loggers */\r\n$module.level = function () {\r\n\tif (arguments.length === 1) {\r\n\t\tconst levelInfo = $scope.levels[arguments[0]];\r\n\t\tif (!levelInfo) {\r\n\t\t\tthrow new Error('apice.logger.invalid_level[' + arguments[0] + ']');\r\n\t\t}\r\n\t\t$scope.globalLevel = levelInfo;\r\n\t\tcookies.set('apice.logger.level', arguments[0], 1800);\r\n\t\tfor (var logName in $scope.loggers) {\r\n\t\t\tvar logger = $scope.loggers[logName];\r\n\t\t\tlogger.level(arguments[0]);\r\n\t\t}\r\n\t} else if (arguments.length === 2) {\r\n\t\tconst logger = $module.getLogger(arguments[1]);\r\n\t\tlogger.level(arguments[0]);\r\n\t\treturn logger.level();\r\n\t}\r\n\treturn $scope.globalLevel?.label;\r\n};\r\n\r\nexport default $module;","/**\r\n * Allows to register a callback to be executed when the document ready state has been reached\r\n * @param callback Function to be executed when the document ready is reached\r\n */\r\nfunction documentReady(callback) {\r\n\tif (document.readyState === 'complete') {\r\n\t\tcallback();\r\n\t} else if (typeof (document.addEventListener) === 'function') {\r\n\t\tdocument.addEventListener('DOMContentLoaded', callback, false);\r\n\t} else if (typeof (document.attachEvent) === 'function') {\r\n\t\tdocument.attachEvent('onreadystatechange', function () {\r\n\t\t\tif (document.readyState === 'complete') {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * Adds an event listener to a specific element\r\n * @param target Reference to the DOM element that will receive the event listener\r\n * @param eventName Name of the event, for example 'click'\r\n * @param listener Listener function to be executed when the event is triggered\r\n */\r\nfunction addListener(target, eventName, listener) {\r\n\tif (!target) {\r\n\t\tthrow new Error('apice.util.event.invalid_target');\r\n\t} else if (!eventName || typeof (eventName) !== 'string') {\r\n\t\tthrow new Error('apice.util.event.invalid_event_name');\r\n\t} else if (typeof (listener) !== 'function') {\r\n\t\treturn;\r\n\t}\r\n\tif (typeof (target.addEventListener) === 'function') {\r\n\t\ttarget.addEventListener(eventName, listener, false);\r\n\t} else if (typeof (target.attachEvent) === 'function') {\r\n\t\ttarget.attachEvent('on' + eventName, listener);\r\n\t}\r\n}\r\n\r\nexport default { addListener, documentReady };","import events from './events.mjs';\r\n\r\nconst $scope = {};\r\n\r\n/** Parses a string HTML content and returns its content or null if it is not HTML content */\r\nfunction parseHTML(content) {\r\n\tif (!content || typeof (content) !== 'string') {\r\n\t\treturn null;\r\n\t}\r\n\tconst holder = document.createElement('div');\r\n\tholder.innerHTML = content;\r\n\treturn [...holder.childNodes];\r\n}\r\n\r\n/** Class wrapping one or more DOM elements and simplifying some actions on it */\r\nclass ApiceElement {\r\n}\r\n\r\n/** Class wrapping one DOM element and simplifying some actions on it */\r\nclass SingleElement extends ApiceElement {\r\n\t/** Reference to the DOM element being wrapped */\r\n\t#element;\r\n\r\n\tconstructor(value) {\r\n\t\tsuper();\r\n\t\tthis.#element = value;\r\n\t}\r\n\r\n\t/** Allows to determine if the instance is wrapping a valid DOM element */\r\n\tget isValid() {\r\n\t\treturn !!this.#element;\r\n\t}\r\n\r\n\t/** Allows to obtain the ID of the element */\r\n\tget id() {\r\n\t\tif (!this.#element) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this.#element.id;\r\n\t}\r\n\r\n\t/** Allows to interact with the wrapped DOM element (if any) */\r\n\teach(callback) {\r\n\t\tif (typeof (callback) === 'function' && this.#element) {\r\n\t\t\tcallback(this.#element);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows to obtain or set the HTML content of an element.  If no paramaters are provided the html content will\r\n\t * be returned.  When a string argument is provided, the HTML content of the element will be set with the string.\r\n\t * When a ApiceElement is provided, then the HTML content will be extracted from it.  If a reference to a DOM element\r\n\t * is provided, then it will be set as the content of the wrapped element.\r\n\t * @returns When no argument are provided returns the HTML element otherwise returns the ApiceElement instance\r\n\t */\r\n\tcontent() {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tif (!this.#element) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\treturn this.#element.innerHTML;\r\n\t\t}\r\n\t\tif (this.#element) {\r\n\t\t\tvar content = arguments[0];\r\n\t\t\tif (!content) {\r\n\t\t\t\tthis.#element.innerHTML = '';\r\n\t\t\t} else if (isDOMElement(content)) {\r\n\t\t\t\tthis.#element.innerHTML = '';\r\n\t\t\t\tthis.#element.appendChild(content);\r\n\t\t\t} else if (content instanceof ApiceElement) {\r\n\t\t\t\tthis.#element.innerHTML = '';\r\n\t\t\t\tcontent.each(child => {\r\n\t\t\t\t\tthis.#element.append(child);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.#element.innerHTML = content;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Appends content to the end of the current element\r\n\t * @returns This element instance\r\n\t */\r\n\tappend() {\r\n\t\tif (this.#element && arguments.length > 0) {\r\n\t\t\tif (arguments.length > 1) {\r\n\t\t\t\tfor (let idx = 0; idx < arguments.length; idx++) {\r\n\t\t\t\t\tthis.append(arguments[idx]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar content = arguments[0];\r\n\t\t\t\tif (content instanceof ApiceElement) {\r\n\t\t\t\t\tcontent.each(item => {\r\n\t\t\t\t\t\tthis.#element.appendChild(item);\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (typeof (content) === 'string') {\r\n\t\t\t\t\tcontent = parseHTML(content);\r\n\t\t\t\t\tfor (let idx = 0; idx < content.length; idx++) {\r\n\t\t\t\t\t\tthis.#element.appendChild(content[idx]);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (isDOMElement(content)) {\r\n\t\t\t\t\tthis.#element.appendChild(content);\r\n\t\t\t\t} else if (content instanceof NodeList) {\r\n\t\t\t\t\tfor (let idx = 0; idx < content.length; idx++) {\r\n\t\t\t\t\t\tconst node = content[idx];\r\n\t\t\t\t\t\tthis.#element.appendChild(node);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an HTML content at the beggining of this content\r\n\t * @returns This element instance\r\n\t */\r\n\tprepend() {\r\n\t\tif (this.#element && arguments.length > 0) {\r\n\t\t\tif (arguments.length > 1) {\r\n\t\t\t\tfor (let idx = 0; idx < arguments.length; idx++) {\r\n\t\t\t\t\tthis.prepend(arguments[idx]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst first = this.#element.firstChild;\r\n\t\t\t\tvar content = arguments[0];\r\n\t\t\t\tif (content instanceof ApiceElement) {\r\n\t\t\t\t\tcontent.each(item => {\r\n\t\t\t\t\t\tthis.#element.insertBefore(item, first);\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (typeof (content) === 'string') {\r\n\t\t\t\t\tcontent = parseHTML(content);\r\n\t\t\t\t\tfor (let idx = 0; idx < content.length; idx++) {\r\n\t\t\t\t\t\tthis.#element.insertBefore(content[idx], first);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (isDOMElement(content)) {\r\n\t\t\t\t\tthis.#element.insertBefore(content, first);\r\n\t\t\t\t} else if (content instanceof NodeList) {\r\n\t\t\t\t\tfor (let idx = 0; idx < content.length; idx++) {\r\n\t\t\t\t\t\tconst node = content[idx];\r\n\t\t\t\t\t\tthis.#element.insertBefore(node, first);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Bind a specific event with a function\r\n\t * @param eventName String with the event name\r\n\t * @param fnc Function to bind\r\n\t * @returns This element instance\r\n\t */\r\n\ton(eventName, fnc) {\r\n\t\tif (!eventName) {\r\n\t\t\tthrow new Error('apice.element.on.no_event_name');\r\n\t\t}\r\n\t\tif (this.#element && typeof (fnc) === 'function') {\r\n\t\t\tevents.addListener(this.#element, eventName, fnc);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** \r\n\t * Invokes the click event (when no argument is provided) or binds an action to the click \r\n\t * event (receiving a function as the argument) \r\n\t */\r\n\tclick() {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\t// TODO: implement\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif (typeof (arguments[0]) !== 'function') {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tthis.on('click', arguments[0]);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets all the child elements that matches a specific selector\r\n\t * @param selector String with the selector\r\n\t * @returns Apice element wrapping the matches\r\n\t */\r\n\tselect(selector) {\r\n\t\tif (!selector || typeof (selector) !== 'string') {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn applySelector(this.#element, selector);\r\n\t}\r\n}\r\n\r\n/**\r\n * Class wrapping two or more elements\r\n */\r\nclass MultipleElements extends ApiceElement {\r\n\t/** Array with the wrapped elements */\r\n\t#elements;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#elements = [];\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an element to this instance\r\n\t * @param element \r\n\t * @returns \r\n\t */\r\n\tadd(element) {\r\n\t\tif (element) {\r\n\t\t\tthis.#elements.push(element);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal method that invokes a function on all the elements wrapped by this instance\r\n\t * @param functionName String with the name of the function to invoke\r\n\t * @param args Arguments to call the function\r\n\t * @returns Object wiith the array of return values\r\n\t */\r\n\t#nodeCall(functionName, args) {\r\n\t\tconst returnValue = [];\r\n\t\tfor (var idx = 0; idx < this.#elements.length; idx++) {\r\n\t\t\tconst node = this.#elements[idx];\r\n\t\t\tconst targetFunction = node[functionName];\r\n\t\t\tif (typeof (targetFunction) === 'function') {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst result = targetFunction.apply(node, args);\r\n\t\t\t\t\tif (Array.isArray(result)) {\r\n\t\t\t\t\t\treturnValue.push(...result);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturnValue.push(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (ex) {\r\n\t\t\t\t\tconsole.log(`itaca.element.node_call[${functionName}]`, ex);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\treturn returnValue;\r\n\t}\r\n\r\n\t/** See SingleElement */\r\n\teach() {\r\n\t\tthis.#nodeCall('each', arguments);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** See SingleElement */\r\n\tcontent() {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\treturn this.#nodeCall('content', arguments);\r\n\t\t}\r\n\t\tthis.#nodeCall('content', arguments);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** See SingleElement */\r\n\tappend() {\r\n\t\tthis.#nodeCall('append', arguments);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** See SingleElement */\r\n\tprepend() {\r\n\t\tthis.#nodeCall('prepend', arguments);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** See SingleElement */\r\n\ton() {\r\n\t\tthis.#nodeCall('on', arguments);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** See SingleElement */\r\n\tclick() {\r\n\t\tthis.#nodeCall('click', arguments);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** See SingleElement */\r\n\tselect() {\r\n\t\tthis.#nodeCall('select', arguments);\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\n/** Allows to determine if a specific object instance is a DOM element */\r\nfunction isDOMElement(obj) {\r\n\treturn (obj && typeof (obj) === 'object' && obj.nodeType === 1);\r\n}\r\n\r\n/**\r\n * Internal function to create Web Elements according to a selector query\r\n * @param root Element to use as the root to run the selector\r\n * @param selector String with the selector\r\n * @returns Instance of an Web Element wrapping the matched elements or null if there is no match\r\n */\r\nfunction applySelector(root, selector) {\r\n\tconst elements = root.querySelectorAll(selector);\r\n\t// selector does not match DOM elements\r\n\tif (elements.length === 0) {\r\n\t\treturn null;\r\n\t}\r\n\t// selector matches a single DOM element \r\n\telse if (elements.length === 1) {\r\n\t\treturn new SingleElement(elements[0]);\r\n\t}\r\n\t// selector matches multiple DOM elements\r\n\tconst nodes = new MultipleElements();\r\n\tfor (var idx = 0; idx < elements.length; idx++) {\r\n\t\tconst node = elements[idx];\r\n\t\tnodes.add(new SingleElement(node));\r\n\t}\r\n\treturn nodes;\r\n}\r\n\r\n/**\r\n * Allows to obtain an Web element as a wrapper for a particular DOM element\r\n * @param selector String with the selector to obtain the DOM element or reference to the DOM element. If it is not\r\n * \t\t\tprovided then a reference to the body will be used.\r\n * @returns An ApiceElement wrapping the element. If the selector does not match a valid element the method will return null.\r\n */\r\nconst $module = function (selector) {\r\n\tif (!selector) {\r\n\t\treturn null;\r\n\t} else if (selector === 'body' || selector === document.body) {\r\n\t\tif (!$scope.bodySingleton) {\r\n\t\t\t$scope.bodySingleton = new SingleElement(document.body);\r\n\t\t}\r\n\t\treturn $scope.bodySingleton;\r\n\t} else if (typeof (selector) === 'string') {\r\n\t\treturn applySelector(document, selector);\r\n\t} else if (selector instanceof ApiceElement) {\r\n\t\treturn selector;\r\n\t} else if (isDOMElement(selector)) {\r\n\t\treturn new SingleElement(selector);\r\n\t}\r\n\treturn null;\r\n};\r\n\r\n/**\r\n * Appends a source element into aother target element\r\n * @param target String with the target selector to find the element, or reference to the DOM element, or Apice element\r\n * @param source String with the source selector to find the element, or reference to the DOM element, or Apice element\r\n */\r\n$module.append = function (target, source) {\r\n\tif (!target || !source) {\r\n\t\treturn;\r\n\t} else if (source === 'body' || source === document.body) {\r\n\t\tthrow Error('apice.element.append.source_cannot_be_body');\r\n\t}\r\n\tif (typeof (source) === 'string') {\r\n\t\tconst stringStart = source.charAt(0);\r\n\t\tif (stringStart === '#' || stringStart === '.' || stringStart === '[') {\r\n\t\t\tconst sourceElement = document.querySelector(source);\r\n\t\t\tif (!sourceElement) {\r\n\t\t\t\tthrow Error(`apice.element.append.unknown_source[${source}]`);\r\n\t\t\t}\r\n\t\t\tsource = sourceElement;\r\n\t\t}\r\n\t}\r\n\tconst targetElement = $module(target);\r\n\tif (!targetElement) {\r\n\t\tthrow Error(`apice.element.append.unknown_target[${target}]`);\r\n\t}\r\n\ttargetElement.append(source);\r\n};\r\n\r\nexport default $module;","/** Creates a random tiny identified composed by 4 alphanumeric characters */\r\nfunction tinyId() {\r\n\treturn (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n}\r\n\r\n/** Creates a random short identified composed by 8 alphanumeric characters */\r\nfunction shortId() {\r\n\treturn tinyId() + tinyId();\r\n}\r\n\r\n/** Creates a random values simulating a global global unique identifier */\r\nfunction guid() {\r\n\treturn shortId()\r\n\t\t+ '-' + shortId()\r\n\t\t+ '-' + shortId()\r\n\t\t+ '-' + shortId()\r\n\t\t+ shortId();\r\n}\r\n\r\nexport default { tinyId, shortId, guid };","import logging from './logging.mjs';\r\nimport random from './random.mjs';\r\nimport element from './element.mjs';\r\n\r\nconst $module = {};\r\n\r\n/** Wrapper that allows to control the action around an error */\r\nclass ErrorHandler {\r\n\t// String with the name of the module or the layer that produced the error. This is used to obtain the logger\r\n\t#module\r\n\t// String with the message to show to the user (if any). When there is no specific message, then a generic error message will be shown\r\n\t#message\r\n\t// The cause of the error (if any)\r\n\t#cause\r\n\t// The code of the error (if any). This wil be printed to the log as a hint, along with the cause (if any)\r\n\t#code\r\n\t// The unique error number used to correlate any error message in the UI with the entries in the log\r\n\t#guid\r\n\r\n\tconstructor(specs) {\r\n\t\tthis.#guid = random.guid();\r\n\t\tthis.#message = specs.message;\r\n\t\tthis.#cause = specs.cause;\r\n\t\tthis.#module = specs.module;\r\n\t\tthis.#code = specs.code;\r\n\t}\r\n\r\n\t/** Allows to obtain the unique value that identify this error occurrence */\r\n\tget guid() {\r\n\t\treturn this.#guid;\r\n\t}\r\n\r\n\t/** Obtains the message if there is any */\r\n\tget message() {\r\n\t\treturn this.#message ?? 'An error has occurred. Please contact the technical support without closing this screen.';\r\n\t}\r\n\r\n\t/** Obtains the cause if there is any */\r\n\tget cause() {\r\n\t\treturn this.#cause;\r\n\t}\r\n\r\n\t/** Obtains the error code if any */\r\n\tget code() {\r\n\t\treturn this.#code;\r\n\t}\r\n\r\n\t/** Internal method to create the log entry text for a specific error cause  */\r\n\t#getCauseLog(cause) {\r\n\t\tif (!cause) {\r\n\t\t\treturn '';\r\n\t\t} else if (typeof (cause) === 'string') {\r\n\t\t\treturn `\\n-> (s) ${cause}`;\r\n\t\t} else if (cause instanceof Error) {\r\n\t\t\treturn `\\n-> (e) ${cause.stack}`;\r\n\t\t} else if (this.#cause instanceof ErrorHandler) {\r\n\t\t\treturn `\\n-> (n) ${cause.code}` + this.#getCauseLog(cause.cause);\r\n\t\t} else if (this.#cause instanceof HttpError) {\r\n\t\t\treturn `\\n-> (h) http-error[${cause.code}]`;\r\n\t\t}\r\n\t}\r\n\r\n\t/** Creates an error entry with the details about the error */\r\n\tlog() {\r\n\t\tconst logger = logging.getLogger(this.#module);\r\n\t\tlet entryText = `ref=[${this.#guid}]`;\r\n\t\tif (this.#code) {\r\n\t\t\tentryText += `\\n-> (c) ${this.#code}`;\r\n\t\t}\r\n\t\tentryText += this.#getCauseLog(this.#cause);\r\n\t\tlogger.error(entryText);\r\n\t}\r\n\r\n\t/**\r\n\t * Renders a visual hint to inform the user about the error\r\n\t * @param selector String with the selector to render the error on it or reference to a DOM element\r\n\t */\r\n\trender(selector) {\r\n\t\tthis.log();\r\n\t\tvar target = element(selector);\r\n\t\tif (!target) {\r\n\t\t\tApice.ui.toast.error(`${this.message}<div>${this.#guid}</div>`);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttarget.content(`<div class=\"apc-badge apc-error\">\\\r\n            <div class=\"apc-header\">Atention!</div>\\\r\n            <div class=\"apc-body\">${this.message}</div>\\\r\n            <div class=\"apc-footer\">${this.#guid}</div>\\\r\n        </div>`);\r\n\t}\r\n}\r\n\r\n/**\r\n * Creates an object to wrap an error and allow to take actions with it\r\n * @param specs JavaScript Error instance, string with an error code or object with the specifications to create \r\n *      the error handler.  If an object is used attributes are:\r\n *      - code: String with the error code (optional if a code is provided)\r\n *      - cause: Reference to the root cause that creates the error condition (optional if the cause is provided)\r\n *      - module: (optional) String with the name of the module that produced the error\r\n *      - message: (optional) String with any message rendered to the end user\r\n * @returns Error hanlder instance\r\n */\r\n$module.create = function (specs) {\r\n\tif (!specs) {\r\n\t\tconsole.error('apice.error_handler.create.null_input');\r\n\t\treturn null;\r\n\t}\r\n\tconst specType = typeof (specs);\r\n\tif (specType === 'string') {\r\n\t\tspecs = { code: specs };\r\n\t} else if (specs instanceof Error) {\r\n\t\tspecs = { cause: specs };\r\n\t} else if (specType !== 'object') {\r\n\t\tconsole.error('apice.error_handler.create.invalid_input', specs);\r\n\t\treturn null;\r\n\t}\r\n\treturn new ErrorHandler(specs);\r\n};\r\n\r\n/**\r\n * Renders a visual hint to report an error\r\n * @param err String with the error code, JavaScript error, or an ErrorHandler reference or a specification object.\r\n *          When the error is a specification object please follow the structured defined in the create method of this module.\r\n * @param selector String with the selector to render the error on it, reference to the DOM element or null to render into the body\r\n */\r\n$module.render = function (err, selector) {\r\n\tif (!err) {\r\n\t\treturn;\r\n\t} else if (!(err instanceof ErrorHandler)) {\r\n\t\terr = $module.create(err);\r\n\t}\r\n\terr.render(selector);\r\n};\r\n\r\n/** Represents an HTTP error */\r\nclass HttpError {\r\n\t/** Code of the HTTP error */\r\n\t#code;\r\n\r\n\t/**\r\n\t * Creates a new HttpError instance with a specific error code\r\n\t * @param code HTTP error code\r\n\t */\r\n\tconstructor(code) {\r\n\t\tthis.#code = code;\r\n\t}\r\n\r\n\t/** Code with the type of error */\r\n\tget type() {\r\n\t\treturn 'http';\r\n\t}\r\n\r\n\t/** Allows to obtain the HTTP code associated with the error represented by this instance */\r\n\tget code() {\r\n\t\treturn this.#code;\r\n\t}\r\n}\r\n\r\n/** Creates an HTTP error */\r\n$module.createHttpError = function (httpCode) {\r\n\treturn new HttpError(httpCode);\r\n};\r\n\r\n// adds a handler to capture any unhandled promise scenario\r\nwindow.addEventListener('unhandledrejection', function (event) {\r\n\tif (event.reason instanceof ErrorHandler) {\r\n\t\tevent.preventDefault();\r\n\t\tevent.reason.render();\r\n\t}\r\n});\r\n\r\nexport default $module;","import errorHandler from './errorHandler.mjs';\r\n\r\nconst $module = {};\r\nconst $moduleName = 'apice.http';\r\n\r\n/** Creates the underlying XMLHTTP object used to execute ajax calls */\r\nfunction createXmlHttp() {\r\n\tif (window.XMLHttpRequest) {\r\n\t\treturn new XMLHttpRequest();\r\n\t} else {\r\n\t\ttry {\r\n\t\t\treturn new ActiveXObject('Msxml2.XMLHTTP');\r\n\t\t} catch (e) {\r\n\t\t\ttry {\r\n\t\t\t\treturn new ActiveXObject('Microsoft.XMLHTTP');\r\n\t\t\t} catch (ex) {\r\n\t\t\t\tthrow Error('apice.http.xmlhttp_creation_error');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/** Create a request object to execute ajax calls in a crossbrowser approach */\r\nfunction createRequest(resolve, reject) {\r\n\tconst request = createXmlHttp();\r\n\trequest.onreadystatechange = function () {\r\n\t\tif (request.readyState == 4 || request.readyState === 'complete') {\r\n\t\t\tif (request.status == 200) {\r\n\t\t\t\tresolve(request.responseText);\r\n\t\t\t} else {\r\n\t\t\t\treject(errorHandler.createHttpError(request.status));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn request;\r\n}\r\n\r\n/**\r\n * \r\n * @param url String with the resource URL to be requested\r\n * @param options Object with the options to execute the request. The values are:\r\n * \t\t\t\t\t- method: String with the HTTP method to execute: GET, POST, PUT, DELETE. If this is not provided, GET will be used by default.\r\n * \t\t\t\t\t- async: Boolean value to determine if the request should be asynchronous (true) or not. By default it is true.\r\n *                  - data: Data to be included in a POST, PUT or DELETE request\r\n * @returns Promise to be fulfilled according to the HTTP request result\r\n */\r\n$module.request = function (url, options) {\r\n\tif (typeof (url) !== 'string' || !url) {\r\n\t\treturn Promise.reject('apice.http.null_url');\r\n\t}\r\n\tif (!options) {\r\n\t\toptions = {};\r\n\t}\r\n\tif (!options.method) {\r\n\t\toptions.method = 'GET';\r\n\t}\r\n\t// TODO: add headers\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst request = createRequest(resolve, reject);\r\n\t\trequest.open(options.method, url, options.async !== false);\r\n\t\tif (options.method === 'GET' || !options.data) {\r\n\t\t\trequest.send();\r\n\t\t} else {\r\n\t\t\trequest.send(options.data);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n/**\r\n * Loads a JavaScript resource dynamically\r\n * @param url URL to load the script from it\r\n * @returns Promise that allows to handle the script loading actions\r\n */\r\n$module.loadScript = function (url) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tvar element = document.createElement('script');\r\n\t\telement.src = url;\r\n\t\telement.type = 'text/javascript';\r\n\t\telement.async = false;\r\n\t\telement.onerror = () => {\r\n\t\t\treject(errorHandler.create({\r\n\t\t\t\tmodule: $moduleName,\r\n\t\t\t\tcode: `apice.http.load_script_error[${url}]`\r\n\t\t\t})); // TODO: collect error info\r\n\t\t};\r\n\t\telement.onload = () => {\r\n\t\t\tresolve();\r\n\t\t};\r\n\t\tdocument.head.appendChild(element);\r\n\t});\r\n};\r\n\r\n/** Class representing a URL assembled with different parts */\r\nclass ApiceUrl {\r\n\t// string with the HTTP protocol (http, https)\r\n\t#protocol\r\n\t// String wit the host name\r\n\t#host\r\n\t// String with the port\r\n\t#port\r\n\t// String with the resource path\r\n\t#path\r\n\r\n\t/**\r\n\t * Creates a new instance representing a url by providing its parts\r\n\t * @param protocol String with the HTTP protocol to use (http, https) or null to use https as default\r\n\t * @param host String with the host name. This parameter is mandatory, when is not ptovided an error will be throw\r\n\t * @param port String with the port number or null to use port 80 as the default one\r\n\t * @param path String with the base path or null to use the root\r\n\t */\r\n\tconstructor(protocol, host, port, path) {\r\n\t\tif (!this.#host) {\r\n\t\t\tthrow new Error('apice.http.url.no_host');\r\n\t\t}\r\n\t\tthis.#protocol = protocol ?? 'https';\r\n\t\tthis.#host = host;\r\n\t\tthis.#port = port ?? '80';\r\n\t\tthis.#path = path ?? '';\r\n\t}\r\n\r\n\t/** Obtains the HTTP protocol used by the url */\r\n\tget protocol() {\r\n\t\treturn this.#protocol;\r\n\t}\r\n\r\n\t/** Obtains the host used by the url */\r\n\tget host() {\r\n\t\treturn this.#host;\r\n\t}\r\n\r\n\t/** Obtains the port used by the url */\r\n\tget port() {\r\n\t\treturn this.#port;\r\n\t}\r\n\r\n\t/** Obtains the base path used by the url */\r\n\tget path() {\r\n\t\treturn this.#path;\r\n\t}\r\n\r\n\t/** Creates a string representation of this url */\r\n\ttoString() {\r\n\t\treturn this.#protocol + '://' + this.#host + ':' + this.#port + '/' + this.#path;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a url string using the base url represented by this instance and concatenating additional elements\r\n\t * @param path String with the path of an additional resource to be added to the base url represented by this instance or null to ignore it.\r\n\t * @param query Query string to add to the base URL represented by this instance or null to ignore it.\r\n\t * @param hash Hash to add to the base URL represented by this instance or null to ignore it.\r\n\t * @returns String with a full url\r\n\t */\r\n\tresourceUrl(path, query, hash) {\r\n\t\tvar url = this.toString();\r\n\t\tif (path && typeof (path) === 'string') {\r\n\t\t\tif (!url.endsWith('/') && !path.startsWith('/')) {\r\n\t\t\t\turl += '/';\r\n\t\t\t}\r\n\t\t\turl += path;\r\n\t\t}\r\n\t\tif (query && typeof (query) === 'string') {\r\n\t\t\tif (!query.startsWith('?')) {\r\n\t\t\t\turl += '?';\r\n\t\t\t}\r\n\t\t\turl += query;\r\n\t\t}\r\n\t\tif (hash && typeof (hash) === 'string') {\r\n\t\t\tif (!hash.startsWith('#')) {\r\n\t\t\t\turl += '#';\r\n\t\t\t}\r\n\t\t\turl += hash;\r\n\t\t}\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Executes an HTTP GET operation using the URL represented by this instance and adding additional elements\r\n\t * @param path Resource path to add to the base url represented by this instance or null to maintain the original \r\n\t * @param query Query string to add to the base URL represented by this instance\r\n\t * @param hash Hash to add to the base url represented by this instance\r\n\t * @returns A promise to capture the execution of the HTTP request\r\n\t */\r\n\tget(path, query, hash) {\r\n\t\tvar url = this.resourceUrl(path, query, hash);\r\n\t\treturn $module.request(url, { method: 'GET' });\r\n\t}\r\n\r\n\t/**\r\n\t * Executes an HTTP POST operation using the URL represented by this instance and adding a resource path and data\r\n\t * @param path Resource path to add to the base url represented by this instance or null to maintain the original \r\n\t * @param data Object to post as data in the HTTP request\r\n\t * @returns A promise to capture the execution of the HTTP request\r\n\t */\r\n\tpost(path, data) {\r\n\t\tvar url = this.resourceUrl(path);\r\n\t\treturn $module.request(url, { method: 'POST', data: data });\r\n\t}\r\n\r\n\t/**\r\n\t * Executes an HTTP PUT operation using the URL represented by this instance and adding a resource path and data\r\n\t * @param path Resource path to add to the base url represented by this instance or null to maintain the original \r\n\t * @param data Object to post as data in the HTTP request\r\n\t * @returns A promise to capture the execution of the HTTP request\r\n\t */\r\n\tput(path, data) {\r\n\t\tvar url = this.resourceUrl(path);\r\n\t\treturn $module.request(url, { method: 'PUT', data: data });\r\n\t}\r\n\r\n\t/**\r\n\t * Executes an HTTP DELETE operation using the URL represented by this instance and adding a resource path and data\r\n\t * @param path Resource path to add to the base url represented by this instance or null to maintain the original \r\n\t * @param data Object to post as data in the HTTP request\r\n\t * @returns A promise to capture the execution of the HTTP request\r\n\t */\r\n\tdelete(path, data) {\r\n\t\tvar url = this.resourceUrl(path);\r\n\t\treturn $module.request(url, { method: 'DELETE', data: data });\r\n\t}\r\n}\r\n\r\n/** Class to manipulate and create an URL */\r\nclass UrlBuilder {\r\n\t// string with the HTTP protocol (http, https)\r\n\t#protocol\r\n\t// String wit the host name\r\n\t#host\r\n\t// String with the port\r\n\t#port\r\n\t// String with the resource path\r\n\t#path\r\n\r\n\t/**\r\n\t * Defines the HTTP protocol to be used by the url\r\n\t * @param protocol String with the protocol. Example: https\r\n\t * @returns Fluent instance to continue the build\r\n\t */\r\n\tprotocol(protocol) {\r\n\t\tthis.#protocol = protocol;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the name of the host to be used in the url to be build\r\n\t * @param host String with the hostname\r\n\t * @returns Fluent instance to continue the build\r\n\t */\r\n\thost(host) {\r\n\t\tthis.#host = host;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the port to use in the url to be build\r\n\t * @param port String or number with the port\r\n\t * @returns Fluent instance to continue the build\r\n\t */\r\n\tport(port) {\r\n\t\tvar portType = typeof (port);\r\n\t\tif (portType === 'string') {\r\n\t\t\tthis.#port = port;\r\n\t\t} else if (portType === 'number') {\r\n\t\t\tthis.#port = String(port);\r\n\t\t} else {\r\n\t\t\tthrow new Error('apice.http.url_builder.invalid_port');\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the base path to set in the url to be build\r\n\t * @param path String with the base path to use\r\n\t * @returns Fluent instance to continue the build\r\n\t */\r\n\tpath(path) {\r\n\t\tthis.#path = path;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new url instance based on the arguments collected by this builder instance\r\n\t * @returns Instance representing the Url\r\n\t */\r\n\tbuild() {\r\n\t\treturn new ApiceUrl(this.#protocol, this.#host, this.#port, this.#path);\r\n\t}\r\n}\r\n\r\n/**\r\n * Allows to obtain a builder to create an url\r\n * @returns Instance of the url builder\r\n */\r\n$module.url = function () {\r\n\treturn new UrlBuilder();\r\n};\r\n\r\nexport default $module;","import http from './http.mjs';\r\nimport errorHandler from './errorHandler.mjs';\r\nimport log from './logging.mjs';\r\n\r\nconst $moduleName = 'apc.controller';\r\nconst logger = log.getLogger($moduleName);\r\nconst $scope = {};\r\n// contains all the controllers registered, indexed by name\r\n$scope.controllers = {};\r\n\r\n/** Allows to obtain a specific controller */\r\nconst $module = function (name) {\r\n\tif (typeof (name) === 'string') {\r\n\t\tvar controller = $scope.controllers[name];\r\n\t\tif (!controller) {\r\n\t\t\tthrow Error(`apice.controller.unknown_controller[${name}]`);\r\n\t\t}\r\n\t\treturn controller;\r\n\t}\r\n};\r\n\r\n/** Class with the implementation of a controller object */\r\nclass ApiceController {\r\n\t// name to identify the controller\r\n\t#name;\r\n\t// controller implementation source\r\n\t#impl;\r\n\tconstructor(name, impl) {\r\n\t\tthis.#name = name;\r\n\t\tthis.#impl = impl;\r\n\t}\r\n\r\n\t/** Allows to obtain the name of the controller */\r\n\tget name() {\r\n\t\treturn this.#name;\r\n\t}\r\n\r\n\t/** Declares the implementation of this controller */\r\n\tdeclare(impl) {\r\n\t\tif (typeof (impl) !== 'function') {\r\n\t\t\tthrow new Error(`apice.controller.declare.invalid_implementation[${this.#name}]`);\r\n\t\t}\r\n\t\tthis.#impl = impl;\r\n\t}\r\n\r\n\t/** Internal method to run the controller implementation */\r\n\t#runImplementation() {\r\n\t\tlogger.debug('Serving controller. controller={0}', this.#name);\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tthis.#impl();\r\n\t\t\t\tresolve();\r\n\t\t\t} catch (err) {\r\n\t\t\t\treject(errorHandler.create({\r\n\t\t\t\t\tmodule: $moduleName,\r\n\t\t\t\t\tcause: err,\r\n\t\t\t\t\tcode: `apice.controller.serve.implementation_error[${this.#name}]`\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/** Internal method to load the implementation script (usually invoked the first time and only once) */\r\n\t#loadImplementation() {\r\n\t\tlogger.debug('Loading controller. controller={0}', this.#name);\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\thttp.loadScript(this.#impl).then(() => {\r\n\t\t\t\t// wraps the controller execution in a timeout to ensure it is executed after the effective declaration\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t// if the implementation is still a string it means that the controller was never loaded\r\n\t\t\t\t\tif (typeof (this.#impl) === 'string') {\r\n\t\t\t\t\t\treject(`apice.controller.serve.undeclared[${this.#name}]`);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.#runImplementation().then(resolve).catch(reject);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 0);\r\n\t\t\t}).catch((err) => {\r\n\t\t\t\treject(errorHandler.create({\r\n\t\t\t\t\tmodule: $moduleName,\r\n\t\t\t\t\tcause: err,\r\n\t\t\t\t\tcode: `apice.controller.load_script_error[${this.#name}]`\r\n\t\t\t\t}));\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Serves the controller executing its implementation\r\n\t * @returns Promise fullfilled once the controller has been executed\r\n\t */\r\n\tserve() {\r\n\t\tvar implType = typeof (this.#impl);\r\n\t\tif (implType === 'function') {\r\n\t\t\treturn this.#runImplementation();\r\n\t\t} else if (implType === 'string') {\r\n\t\t\treturn this.#loadImplementation();\r\n\t\t}\r\n\t\treturn Promise.reject(errorHandler.create({\r\n\t\t\tmodule: $moduleName,\r\n\t\t\tcode: `apice.controller.bad_implementation[${this.#name}]`\r\n\t\t}));\r\n\t}\r\n}\r\n\r\n/**\r\n * Registers a new controller\r\n * @param name Controller name\r\n * @param impl String with the controller implementation source or function with the behavior to execute\r\n */\r\n$module.register = function (name, impl) {\r\n\tlogger.debug('Registering controller. controller={0)', name);\r\n\tvar controller = new ApiceController(name, impl);\r\n\t$scope.controllers[name] = controller;\r\n\treturn controller;\r\n};\r\n\r\n/**\r\n * Declares the implementation of a specific controller\r\n * @param name Name of the controller to declare\r\n * @param impl Implementation to declare\r\n */\r\n$module.declare = function (name, impl) {\r\n\tlogger.debug('Declaring controller. controller={0}', name);\r\n\tvar controller = $scope.controllers[name];\r\n\tif (!controller) {\r\n\t\tthrow Error(`apice.controller.declare.unknown_controller[${name}]`);\r\n\t}\r\n\tcontroller.declare(impl);\r\n};\r\n\r\n/**\r\n * Allows to determine if a particular object is a controller\r\n * @param obj Object instance to evaluate\r\n * @returns Boolean value to determine if the object is a controller or not\r\n */\r\n$module.isController = function (obj) {\r\n\treturn (obj && obj instanceof ApiceController);\r\n};\r\n\r\nexport default $module;","import http from './http.mjs';\r\nimport errorHandler from './errorHandler.mjs';\r\nimport controller from './controller.mjs';\r\nimport element from './element.mjs';\r\nimport log from './logging.mjs';\r\n\r\nconst $moduleName = 'apice.fragment';\r\nconst logger = log.getLogger($moduleName);\r\nconst $scope = {};\r\n$scope.fragments = {};\r\n\r\n/** Class with the implementation of a fragment object */\r\nclass ApiceFragment {\r\n\t// name to identify the fragment\r\n\t#name;\r\n\t// url with the content source\r\n\t#source;\r\n\t// name of the controller used by the fragment\r\n\t#controller;\r\n\r\n\tconstructor(name, source, controller) {\r\n\t\tthis.#name = name;\r\n\t\tthis.#source = source;\r\n\t\tthis.#controller = controller;\r\n\t}\r\n\r\n\t/** Allows to obtain the name of the fragment */\r\n\tget name() {\r\n\t\treturn this.#name;\r\n\t}\r\n\r\n\t/** Internal method to execute the controller associated with the fragment */\r\n\t#runController() {\r\n\t\tif (!this.#controller) {\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t// FIXME: does this really need a settimeout\r\n\t\t\t//setTimeout(() => {\r\n\t\t\tvar controllerType = typeof (this.#controller);\r\n\t\t\tif (controllerType === 'function') {\r\n\t\t\t\tlogger.debug('Serving fragment controller function. fragment={0}', this.#name);\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis.#controller();\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t} catch (ex) {\r\n\t\t\t\t\treject(errorHandler.create({\r\n\t\t\t\t\t\tmodule: $moduleName,\r\n\t\t\t\t\t\tcause: ex,\r\n\t\t\t\t\t\tcode: `apice.fragment.controller_function_error[${this.#name}]`\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t} else if (controllerType === 'string') {\r\n\t\t\t\tlogger.debug('Serving fragment controller. fragment={0} controller={1}', this.#name, this.#controller);\r\n\t\t\t\tcontroller(this.#controller).serve().then(resolve).catch((ex) => {\r\n\t\t\t\t\treject(errorHandler.create({\r\n\t\t\t\t\t\tmodule: $moduleName,\r\n\t\t\t\t\t\tcause: ex,\r\n\t\t\t\t\t\tcode: `apice.fragment.controller_serve_error[${this.name}]`\r\n\t\t\t\t\t}));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t//}, 0);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the fragment content in a specific placeholder\r\n\t * @param selector String with the selector to identify the target placeholder or reference to the DOM element. If no selector\r\n\t * \t\t\tis provided the content will be rendered in the body by default.\r\n\t * @returns Promise to take actions depending on the result of the rendering. The promise receives a context that contains\r\n\t *          two attributes:\r\n\t *          - target: Reference to the DOM element that will receive the fragment content\r\n\t *          - response: Fragment content received as part of tha AJAX call.  This can be replaced by a different output.\r\n\t */\r\n\trender(selector) {\r\n\t\tif (!selector) {\r\n\t\t\tselector = document.body;\r\n\t\t}\r\n\t\tvar target = element(selector);\r\n\t\tif (!target) {\r\n\t\t\treturn Promise.reject(errorHandler.create({\r\n\t\t\t\tmodule: $moduleName,\r\n\t\t\t\tcode: `apice.fragment.render.target_not_found[${selector}]`\r\n\t\t\t}));\r\n\t\t}\r\n\t\tlogger.debug('Serving fragment. fragment={0}', this.#name);\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\thttp.request(this.#source, { method: 'GET' }).then((response) => {\r\n\t\t\t\t// TODO: add a response interceptor\r\n\t\t\t\t// FIXME: does this really needs a settimeout\r\n\t\t\t\t//setTimeout(() => {\r\n\t\t\t\ttarget.content(response);\r\n\t\t\t\tthis.#runController().then(resolve).catch(reject);\r\n\t\t\t\t//}, 0);\r\n\t\t\t}).catch((ex) => {\r\n\t\t\t\treject(errorHandler.create({\r\n\t\t\t\t\tmodule: $moduleName,\r\n\t\t\t\t\tmessage: 'An error has occurred trying to load the content',\r\n\t\t\t\t\tcause: ex,\r\n\t\t\t\t\tcode: `apice.fragment.render_error[${this.name}]`\r\n\t\t\t\t}));\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/** Allows to obtain a specific fragment */\r\nconst $module = function (name) {\r\n\tif (typeof (name) === 'string') {\r\n\t\tvar fragment = $scope.fragments[name];\r\n\t\tif (!fragment) {\r\n\t\t\tthrow new Error(`apice.fragment.unknown_fragment[${name}]`);\r\n\t\t}\r\n\t\treturn fragment;\r\n\t}\r\n};\r\n\r\n/**\r\n * Registers a new fragment\r\n * @param name Fragment name\r\n * @param source Fragment content\r\n * @param controller Optional name of the controller associated with the fragment\r\n */\r\n$module.register = function (name, source, controller) {\r\n\tlogger.debug('Registering fragment. fragment={0}', name);\r\n\tvar fragment = new ApiceFragment(name, source, controller);\r\n\t$scope.fragments[name] = fragment;\r\n\treturn fragment;\r\n};\r\n\r\n/**\r\n * Allows to determine if a particular object is a fragment\r\n * @param obj Object instance to evaluate\r\n * @returns Boolean value to determine if the object is a fragment or not\r\n */\r\n$module.isFragment = function (obj) {\r\n\treturn (obj && obj instanceof ApiceFragment);\r\n};\r\n\r\nexport default $module;","import events from './events.mjs';\r\nimport element from './element.mjs';\r\nimport fragment from './fragment.mjs';\r\nimport errorHandler from './errorHandler.mjs';\r\nimport logging from './logging.mjs';\r\n\r\nconst $moduleName = 'apice.router';\r\nconst logger = logging.getLogger($moduleName);\r\nconst $module = {};\r\n\r\nconst $scope = {};\r\n// contains all the routes registered\r\n$scope.routes = [];\r\n// holds the reference to the default route if any\r\n$scope.defaultRoute = null;\r\n// holds the reference to the route that will be served when there is not default route and a pattern is not matched\r\n$scope.notFoundRoute = null;\r\n// Reference to the target element that receives the routing of fragments\r\n$scope.target = null;\r\n\r\n\r\n/**\r\n * Internal control method that is invoked when the hash receives a change\r\n * @param eventName String with the name of the event that triggered the change (mostly for tracing purposes)\r\n */\r\nfunction onHashChange(eventName) {\r\n\tlogger.debug('Hash change triggered. event=' + eventName);\r\n\tconst hash = $module.hash();\r\n\tvar route = $module.match(hash);\r\n\tif (route) {\r\n\t\tlogger.debug('Serving route: ' + route.pattern);\r\n\t} else if ($scope.defaultRoute && (!hash || !$scope.notFoundRoute)) {\r\n\t\tif (hash) {\r\n\t\t\tlogger.warn('Route not found. Serving default hash=' + hash);\r\n\t\t} else {\r\n\t\t\tlogger.debug('No hash found. Serving default router');\r\n\t\t}\r\n\t\troute = $scope.defaultRoute;\r\n\t} else if ($scope.notFoundRoute) {\r\n\t\t// TODO: define actions when there is no matching route and default hash is not defined\r\n\t\tlogger.warn('Route not found. hash=' + hash + ' route=' + $scope.notFoundRoute.pattern);\r\n\t\troute = $scope.notFoundRoute;\r\n\t} else {\r\n\t\terrorHandler.render({\r\n\t\t\tmodule: $moduleName,\r\n\t\t\tmessage: 'The requested resource was not found: ' + hash,\r\n\t\t\tcode: 'apice.router.no_matching_no_default'\r\n\t\t}); // FIXME: should we use a selector like $scope.target\r\n\t\treturn;\r\n\t}\r\n\troute.serve();\r\n}\r\n\r\n/**\r\n * Class representing a hash that allows to parse it and evaluate its parts\r\n */\r\nclass RouteHash {\r\n\t#pattern\r\n\t#parts\r\n\t#parameters\r\n\r\n\tconstructor(pattern) {\r\n\t\tif (!pattern || typeof (pattern) !== 'string') {\r\n\t\t\tthrow Error('apice.router.hah.invalid_pattern');\r\n\t\t}\r\n\t\tthis.#pattern = pattern;\r\n\t\tthis.#parse();\r\n\t}\r\n\r\n\t#parse() {\r\n\t\tthis.#parts = [];\r\n\t\tthis.#parameters = [];\r\n\t\tvar parts = this.#pattern.split('/');\r\n\t\tfor (var idx = 0; idx < parts.length; idx++) {\r\n\t\t\tvar section = parts[idx];\r\n\t\t\tif (section.startsWith(':')) {\r\n\t\t\t\tthis.#parameters.push(section.substr(1));\r\n\t\t\t}\r\n\t\t\tthis.#parts.push(section);\r\n\t\t}\r\n\t}\r\n\r\n\tget pattern() {\r\n\t\treturn this.#pattern;\r\n\t}\r\n\r\n\tget count() {\r\n\t\treturn this.#parts.length;\r\n\t}\r\n\r\n\tget hasParameters() {\r\n\t\treturn this.#parameters.length > 0;\r\n\t}\r\n}\r\n\r\n/**\r\n * Class representing a route definition\r\n */\r\nclass ApiceRoute {\r\n\t// Object representing the router hash pattern\r\n\t#routeHash\r\n\t// Action to be executed when the route is executed\r\n\t#action\r\n\r\n\t/**\r\n\t * Creates an object with the router specifications\r\n\t * @param pattern String with the hash pattern to use for this router\r\n\t * @param action Function with the action to execute or reference to a fragment or a controller\r\n\t */\r\n\tconstructor(pattern, action) {\r\n\t\tif (!pattern || typeof (pattern) !== 'string') {\r\n\t\t\tthrow Error('apice.route.constructor.invalid_route_value');\r\n\t\t} else if (!action) {\r\n\t\t\tthrow Error('apice.route.constructor.missing_route_action');\r\n\t\t}\r\n\t\tthis.#routeHash = new RouteHash(pattern);\r\n\t\tthis.#action = action;\r\n\t}\r\n\r\n\tget pattern() {\r\n\t\treturn this.#routeHash.pattern;\r\n\t}\r\n\r\n\tasDefault() {\r\n\t\t$scope.defaultRoute = this;\r\n\t}\r\n\r\n\tasNotFound() {\r\n\t\t$scope.notFoundRoute = this;\r\n\t}\r\n\r\n\tmatch(hash) {\r\n\t\tif (!this.#routeHash.hasParameters) {\r\n\t\t\treturn hash === this.#routeHash.pattern;\r\n\t\t}\r\n\t\t// QUEDE AQUI IMPLEMENTANDO EL ALGORITMO DE HASHING\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Serves the route represented by the current instance, triggering its associated action\r\n\t */\r\n\tserve() {\r\n\t\ttry {\r\n\t\t\tif (typeof (this.#action) === 'function') {\r\n\t\t\t\tthis.#action();\r\n\t\t\t} else if (typeof (this.#action) === 'string') {\r\n\t\t\t\tfragment(this.#action).render($scope.target);\r\n\t\t\t} else if (fragment.isFragment(this.#action)) {\r\n\t\t\t\tthis.#action.render($scope.target);\r\n\t\t\t} else if (typeof (this.#action.serve) === 'function') {\r\n\t\t\t\tthis.#action.serve();\r\n\t\t\t} else {\r\n\t\t\t\tthrow Error(`apice.router.invalid_action[${this.pattern}]`);\r\n\t\t\t}\r\n\t\t} catch (ex) {\r\n\t\t\terrorHandler.render({\r\n\t\t\t\tmodule: $moduleName,\r\n\t\t\t\tmessage: 'An error has occurred trying to serve the resource. Please contact technical support without closing this screen',\r\n\t\t\t\tcode: `apice.router.serve_error[${this.pattern}]`,\r\n\t\t\t\tcause: ex\r\n\t\t\t}, $scope.target);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Registers a route into the routing engine\r\n * @param pattern String with the path used for the route\r\n * @param action Function to be invoked when the route is executed, or reference to the fragment or the controller to be executed\r\n */\r\n$module.register = function (pattern, action) {\r\n\tlogger.debug('Registering route. pattern=' + pattern);\r\n\tvar route = new ApiceRoute(pattern, action);\r\n\t$scope.routes.push(route);\r\n\treturn route;\r\n};\r\n\r\n/**\r\n * Search for the route that matches a specific route value\r\n * @param route String with the route path to match\r\n * @returns Route instance that matches the path or null if nothing matches the path\r\n */\r\n$module.match = function (hash) {\r\n\tif (!hash || typeof (hash) !== 'string') {\r\n\t\treturn null;\r\n\t}\r\n\tfor (var idx = 0; idx < $scope.routes.length; idx++) {\r\n\t\tvar route = $scope.routes[idx];\r\n\t\tif (route.match(hash) === true) {\r\n\t\t\treturn route;\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\n/**\r\n * Obtains the current hash\r\n * @returns Current hash value in the location\r\n */\r\n$module.hash = function () {\r\n\tvar hash = window.location.hash;\r\n\tif (hash.startsWith('#')) {\r\n\t\thash = hash.substr(1);\r\n\t}\r\n\treturn hash;\r\n};\r\n\r\n/**\r\n * Initializes the execution of the routing engine\r\n */\r\n$module.start = function () {\r\n\tlogger.debug('Starting Apice router');\r\n\tevents.addListener(window, 'hashchange', () => {\r\n\t\tonHashChange('hashchange');\r\n\t});\r\n\t//util.events.addListener(window, 'popstate', () => {\r\n\t//    onHashChange('popstate');\r\n\t//    return false;\r\n\t//});\r\n\tevents.documentReady(() => {\r\n\t\tonHashChange('routerstart');\r\n\t});\r\n\treturn $module;\r\n};\r\n\r\n/**\r\n * Gets or sets the target element that will receive the content of any route associated with a fragment.  This method\r\n * is polymorphic. When no argument is provided returns the current target.\r\n * @param selector String with the selector of the target or reference to the DOM element that will receive the\r\n *                  content of any route that contains a fragment. When this is not provided the method will return\r\n *                  the selected target.\r\n * @returns When no selector is provided this method returns the defined target.\r\n */\r\n$module.target = function () {\r\n\t// getter mode\r\n\tif (arguments.length === 0) {\r\n\t\treturn $scope.target;\r\n\t}\r\n\t// setter mode\r\n\tvar selector = arguments[0];\r\n\tif (!selector) {\r\n\t\t$scope.target = null;\r\n\t} else {\r\n\t\t$scope.target = element(selector);\r\n\t\tif (!$scope.target) {\r\n\t\t\tlogger.error(`apice.router.target_notfound[${selector}]`);\r\n\t\t}\r\n\t}\r\n\tif (!$scope.target) {\r\n\t\tlogger.info('Using default routing target container');\r\n\t\tvar container = document.getElementById('apc-router-container');\r\n\t\tif (!container) {\r\n\t\t\tcontainer = document.createElement('div');\r\n\t\t\tcontainer.id = 'apc-router-container';\r\n\t\t\tdocument.body.appendChild(container);\r\n\t\t}\r\n\t\t$scope.target = element(container);\r\n\t}\r\n\treturn $module;\r\n};\r\n\r\nexport default $module;","import logging from '../logging.mjs';\r\n\r\nconst $moduleName = 'apice.ui.toast';\r\nconst $module = {};\r\nconst $scope = {};\r\nconst logger = logging.getLogger($moduleName);\r\n\r\n// contains the default titles\r\n$scope.defaultTitle = {};\r\n$scope.defaultTitle['error'] = 'Attention!';\r\n$scope.defaultTitle['warn'] = 'Warning!';\r\n$scope.defaultTitle['info'] = 'Information';\r\n$scope.defaultTitle['success'] = 'Sucess!';\r\n\r\n/** Internal method with the logic to create the top container that will hold all the toasts */\r\nfunction createToastContainer() {\r\n\tvar container = document.getElementById('apc-toast-container');\r\n\tif (!container) {\r\n\t\tcontainer = document.createElement('div');\r\n\t\tcontainer.id = 'apc-toast-container';\r\n\t\tdocument.body.appendChild(container);\r\n\t}\r\n\treturn container;\r\n}\r\n\r\n/** Class implementing the toast component */\r\nclass ApiceToast {\r\n\t// string with the toast type (error, warn, info, success)\r\n\t#style;\r\n\t// string with the toast title (or boolean false to remove the title area)\r\n\t#title;\r\n\t// string with the toast body or message\r\n\t#body;\r\n\t// icon to use\r\n\t#icon;\r\n\t// top container representing the toast box\r\n\t#box;\r\n\t// integer with the number of seconds before dismissing the toast or boolean false to avoid user dismissal or boolean true to enable manual dismissal\r\n\t#dismiss;\r\n\r\n\tconstructor(specs) {\r\n\t\tthis.#style = specs.style;\r\n\t\tthis.#title = { text: specs.title };\r\n\t\tthis.#body = { text: specs.message };\r\n\t\tthis.#icon = { resource: specs.icon };\r\n\t\tthis.#dismiss = specs.dismiss;\r\n\t\tthis.#render();\r\n\t}\r\n\r\n\t/** Allows to obtain the title of the toast (if any) */\r\n\tget title() {\r\n\t\tif (!this.#title.text && this.#title.text !== false) {\r\n\t\t\treturn $scope.defaultTitle[this.#style];\r\n\t\t}\r\n\t\treturn this.#title.text;\r\n\t}\r\n\r\n\t/** Returns the body message of the toast */\r\n\tget message() {\r\n\t\treturn this.#body.text;\r\n\t}\r\n\r\n\t/** Internal method to render (or refresh) the title area */\r\n\t#renderTitle() {\r\n\t\tvar text = this.title;\r\n\t\tif (!text) {\r\n\t\t\tif (this.#title.box) {\r\n\t\t\t\tthis.#title.box.style.display = 'none';\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.#title.box) {\r\n\t\t\tthis.#title.box = document.createElement('div');\r\n\t\t\tthis.#title.box.className = 'apc-header';\r\n\t\t\tthis.#box.appendChild(this.#title.box);\r\n\t\t}\r\n\t\tthis.#title.box.style.display = 'block';\r\n\t\tthis.#title.box.innerHTML = text;\r\n\t}\r\n\r\n\t/** Internal method to render (or refresh) the body area */\r\n\t#renderBody() {\r\n\t\tif (!this.#body.box) {\r\n\t\t\tthis.#body.box = document.createElement('div');\r\n\t\t\tthis.#body.box.className = 'apc-body';\r\n\t\t\tthis.#box.appendChild(this.#body.box);\r\n\t\t}\r\n\t\tthis.#body.box.innerHTML = this.message;\r\n\t}\r\n\r\n\t/** Internal method to render (or refresh) the icon */\r\n\t#renderIcon() {\r\n\t\tif (!this.#icon.resource) {\r\n\t\t\tif (this.#icon.box) {\r\n\t\t\t\tthis.#icon.box.style.display = 'none';\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.#icon.box) {\r\n\t\t\tthis.#icon.box = document.createElement('div');\r\n\t\t\tthis.#icon.box.className = 'apc-icon';\r\n\t\t\tthis.#box.appendChild(this.#icon.box);\r\n\t\t}\r\n\t\tif (this.#icon.resource === true) {\r\n\t\t\tthis.#icon.box.innerHTML = '&nbsp;';\r\n\t\t} else {\r\n\t\t\t// TODO: implement\r\n\t\t}\r\n\t}\r\n\r\n\t/** Internal method to create the visual representation of the toast */\r\n\t#render() {\r\n\t\tif (!this.#box) {\r\n\t\t\tthis.#box = document.createElement('div');\r\n\t\t}\r\n\t\tthis.#box.className = 'apc-toast apc-' + this.#style;\r\n\t\tthis.#renderIcon();\r\n\t\tthis.#renderTitle();\r\n\t\tthis.#renderBody();\r\n\t\tif (typeof (this.#dismiss) === 'number') {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.dismiss();\r\n\t\t\t}, this.#dismiss * 1000);\r\n\t\t} else if (this.#dismiss === true) {\r\n\t\t\tthis.#box.onclick = () => {\r\n\t\t\t\tthis.dismiss();\r\n\t\t\t};\r\n\t\t\tthis.#box.className += ' apc-clickable';\r\n\t\t}\r\n\t}\r\n\r\n\t/** Closes the toast */\r\n\tdismiss() {\r\n\t\tif (this.#box) {\r\n\t\t\tthis.#box.style.animationName = 'bounce-out';\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.#box.parentElement.removeChild(this.#box);\r\n\t\t\t\tthis.#box = null;\r\n\t\t\t}, 500);\r\n\t\t}\r\n\t}\r\n\r\n\t/** Adds the toast to a specific container */\r\n\tappendTo(container) {\r\n\t\tcontainer.insertBefore(this.#box, container.firstChild);\r\n\t}\r\n}\r\n\r\n/**\r\n * Internal method with the common behavior to render a toast\r\n * @param style String with the toast style (error, warn, info, success)\r\n * @param args Arguments to create the toast. It can be:\r\n * \t\t\t- An object containing the following attributes:\r\n * \t\t\t\t* title: String with the title text or boolean false to omit the use of title\r\n * \t\t\t\t* message: String with the message\r\n * \t\t\t\t* icon: String with the icon to use or boolean false to remove the icon\r\n * \t\t\t\t* dismiss: Number of seconds to dismiss the message, or boolean true to make it manually dismissable or false to avoid manual dismiss\r\n * \t\t\t- A string with the toast message (the default title and icon will be used and the toast will be manually dismissable)\r\n * \t\t\t- A string with the title (or boolean false to avoid the title) and the toast message\r\n */\r\nfunction renderToast(style, ...args) {\r\n\tconst specs = { style: style, title: null, message: null, icon: true, dismiss: true };\r\n\tif (args.length === 1) {\r\n\t\tif (typeof (args[0]) === 'object') {\r\n\t\t\tObject.assign(specs, args[0]);\r\n\t\t} else {\r\n\t\t\tspecs.message = args[0];\r\n\t\t}\r\n\t} else {\r\n\t\tspecs.title = args[0];\r\n\t\tspecs.message = args[1];\r\n\t\tspecs.dismiss = args[2] ?? true;\r\n\t}\r\n\tif (!specs.message) {\r\n\t\tlogger.warn('A toast has been requested without message. The toast has been ignored');\r\n\t\treturn;\r\n\t}\r\n\tconst toast = new ApiceToast(specs);\r\n\tconst container = createToastContainer();\r\n\ttoast.appendTo(container);\r\n}\r\n\r\n/** Creates an error toast */\r\n$module.error = function () {\r\n\trenderToast('error', ...arguments);\r\n};\r\n\r\n/** Creates a warning toast */\r\n$module.warn = function () {\r\n\trenderToast('warn', ...arguments);\r\n};\r\n\r\n/** Creates an information toast */\r\n$module.info = function () {\r\n\trenderToast('info', ...arguments);\r\n};\r\n\r\n/** Creates a success toast */\r\n$module.success = function () {\r\n\trenderToast('success', ...arguments);\r\n};\r\n\r\n/** Defines the maximum number of toast to use */\r\n$module.setMax = function () {\r\n\t// TODO: implement\r\n};\r\n\r\nexport default $module;\r\n","import random from '../random.mjs';\r\nimport element from '../element.mjs';\r\nimport logging from '../logging.mjs';\r\n\r\nconst $moduleName = 'apice.ui.form';\r\nconst $module = {};\r\nconst logger = logging.getLogger($moduleName);\r\n\r\nfunction getSizeClass(specs) {\r\n\tif (specs.size === 'xs') {\r\n\t\treturn ' apc-xs';\r\n\t} else if (specs.size === 'sm') {\r\n\t\treturn ' apc-sm';\r\n\t} else if (!specs.size || specs.size === 'md') {\r\n\t\treturn ' apc-md';\r\n\t} else if (specs.size === 'lg') {\r\n\t\treturn ' apc-lg';\r\n\t} else {\r\n\t\treturn ' apc-xl';\r\n\t}\r\n}\r\n\r\nfunction getFieldClass(specs) {\r\n\tlet fieldClass = 'apc-field';\r\n\t// type modifier\r\n\tif (specs.type === 'input') {\r\n\t\tfieldClass += ' apc-text';\r\n\t} else if (specs.type === 'check') {\r\n\t\tfieldClass += ' apc-check';\r\n\t} else if (specs.type === 'select') {\r\n\t\tfieldClass += ' apc-select';\r\n\t}\r\n\t// sizing  modifier\r\n\tfieldClass += getSizeClass(specs);\r\n\treturn fieldClass;\r\n}\r\n\r\n/**\r\n * Internal method to create an option DOM elements and add it to a field\r\n * @param field Reference to the field to add the option on it\r\n * @param label String with the option label\r\n * @param value String with the value\r\n */\r\nfunction createOption(field, label, value) {\r\n\tconst option = document.createElement('option');\r\n\toption.innerHTML = label;\r\n\toption.value = value;\r\n\tfield.appendChild(option);\r\n}\r\n\r\n/**\r\n * Fills the options in a select field based on specific data\r\n * @param field Reference to the field to add the options on it\r\n * @param data Array with the data in the form {label: 'string', value: 'string'}, or reference to a function that produces such array, or promise that produces the array when is fullfilled\r\n */\r\nfunction fillSelect(field, data) {\r\n\tif (!data) {\r\n\t\treturn;\r\n\t} else if (typeof (data) === 'function') {\r\n\t\tconst result = data(); // FIXME: add error handling\r\n\t\tfillSelect(field, result);\r\n\t\treturn;\r\n\t} else if (data instanceof Promise) {\r\n\t\tdata.then(result => {\r\n\t\t\tfillSelect(field, result);\r\n\t\t}).catch(err => {\r\n\t\t\t// FIXME: implement\r\n\t\t\tconsole.err(err);\r\n\t\t});\r\n\t\treturn;\r\n\t} else if (!Array.isArray(data) || data.length === 0) {\r\n\t\tdata = ['No data'];\r\n\t}\r\n\tcreateOption(field, 'Please select...', '');\r\n\tdata.map(item => {\r\n\t\tcreateOption(field, item.label, item.value);\r\n\t});\r\n}\r\n\r\nclass BlockElement {\r\n\t#element;\r\n\t#rendered;\r\n\r\n\tconstructor(className, size) {\r\n\t\tthis.#element = document.createElement('div');\r\n\t\tthis.#element.className = className + getSizeClass({ size: size });\r\n\t\tthis.#element.innerHTML = '&nbsp;';\r\n\t}\r\n\r\n\trender(container) {\r\n\t\tif (this.#rendered) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#rendered = true;\r\n\t\tcontainer.appendChild(this.#element);\r\n\t}\r\n}\r\n\r\nclass ApiceButton {\r\n\t#id;\r\n\t#element;\r\n\t#rendered;\r\n\r\n\tconstructor(specs) {\r\n\t\tif (!specs) {\r\n\t\t\tthrow Error('apice.ui.form.button.null_specs');\r\n\t\t}\r\n\t\tif (!specs.id) {\r\n\t\t\tspecs.id = 'btn_' + random.tinyId();\r\n\t\t}\r\n\t\tthis.#id = specs.id;\r\n\t\tthis.#element = document.createElement('button');\r\n\t\tthis.#element.id = specs.id;\r\n\t\tthis.#element.className = 'apc-button';\r\n\t\tthis.#element.innerHTML = specs.label;\r\n\t\tthis.#rendered = false;\r\n\t}\r\n\r\n\tclick(fnc) {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tif (this.#element.onclick) {\r\n\t\t\t\tthis.#element.onclick();\r\n\t\t\t\t// FIXME: change by trigger event\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (typeof (fnc) !== 'function') {\r\n\t\t\tthis.#element.onclick = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#element.onclick = fnc;\r\n\t}\r\n\r\n\trender(container) {\r\n\t\tif (this.#rendered) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#rendered = true;\r\n\t\tcontainer.appendChild(this.#element);\r\n\t}\r\n}\r\n\r\nclass ApiceButtonBar {\r\n\t#buttons;\r\n\t#rendered;\r\n\t#element;\r\n\r\n\tconstructor() {\r\n\t\tthis.#buttons = [];\r\n\t\tthis.#rendered = false;\r\n\t\tthis.#element = document.createElement('div');\r\n\t\tthis.#element.className = 'apc-button-bar';\r\n\t}\r\n\r\n\taddButton(specs) {\r\n\t\tif (!specs) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst button = new ApiceButton(specs);\r\n\t\tthis.#buttons.push(button);\r\n\t\tif (this.#rendered) {\r\n\t\t\tbutton.render();\r\n\t\t}\r\n\t\treturn button;\r\n\t}\r\n\r\n\trender(container) {\r\n\t\tif (this.#rendered) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#rendered = true;\r\n\t\tthis.#buttons.map(button => button.render(this.#element));\r\n\t\tcontainer.appendChild(this.#element);\r\n\t}\r\n}\r\n\r\n/** Represents a field inside a dynamic Apice form */\r\nclass ApiceField {\r\n\t#id;\r\n\t#type;\r\n\t#label;\r\n\t#group;\r\n\t#field;\r\n\t#source;\r\n\r\n\tconstructor(specs) {\r\n\t\tif (!specs.id) {\r\n\t\t\tspecs.id = 'field_' + random.tinyId();\r\n\t\t}\r\n\t\tif (!specs.type) {\r\n\t\t\tspecs.type = 'input';\r\n\t\t}\r\n\t\tthis.#id = specs.id;\r\n\t\tthis.#type = specs.type;\r\n\t\tthis.#label = specs.label;\r\n\t\tthis.#group = document.createElement('div');\r\n\t\tthis.#group.className = getFieldClass(specs);\r\n\t\tthis.#createField(specs);\r\n\t}\r\n\r\n\t/** Internal method to create the label for the form field represented by the instance */\r\n\t#renderLabel() {\r\n\t\tif (this.#label) {\r\n\t\t\tconst labelBox = document.createElement('label');\r\n\t\t\tlabelBox.setAttribute('for', this.#id);\r\n\t\t\tlabelBox.className = 'apc-label';\r\n\t\t\tlabelBox.innerHTML = this.#label;\r\n\t\t\tthis.#group.appendChild(labelBox);\r\n\t\t}\r\n\t}\r\n\r\n\t/** Internal method to create the area of the field represented by the instance */\r\n\t#createField(specs) {\r\n\t\tif (this.#type === 'input') {\r\n\t\t\tthis.#field = document.createElement('input');\r\n\t\t\tthis.#field.type = 'text';\r\n\t\t} else if (this.#type === 'check') {\r\n\t\t\tthis.#field = document.createElement('input');\r\n\t\t\tthis.#field.type = 'checkbox';\r\n\t\t} else if (this.#type === 'select') {\r\n\t\t\tthis.#field = document.createElement('select');\r\n\t\t\tfillSelect(this.#field, specs.source);\r\n\t\t}\r\n\t}\r\n\r\n\trender(container) {\r\n\t\tif (this.#field) {\r\n\t\t\tthis.#group.appendChild(this.#field);\r\n\t\t}\r\n\t\tthis.#renderLabel();\r\n\t\tcontainer.appendChild(this.#group);\r\n\t}\r\n}\r\n\r\n/** Represents a dynamic form */\r\nclass ApiceForm {\r\n\t/** Holds the form ID */\r\n\t#id\r\n\t/** Allows to determine if the form has been rendered already or not */\r\n\t#rendered;\r\n\t/** Array containing the form content objects */\r\n\t#content;\r\n\t/** Reference to the top DOM element containing the visual representation of the form */\r\n\t#element;\r\n\r\n\tconstructor(selector) {\r\n\t\tthis.#id = 'form_' + random.tinyId();\r\n\t\tthis.#content = [];\r\n\t\tthis.#rendered = false;\r\n\r\n\t\tconst formElement = document.createElement('div');\r\n\t\tformElement.id = this.#id;\r\n\t\tformElement.className = 'apc-form';\r\n\t\tthis.#element = formElement;\r\n\r\n\t\tconst container = element(selector);\r\n\t\tcontainer.append(formElement);\r\n\t}\r\n\r\n\t#addComponent(component) {\r\n\t\tif (!component) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#content.push(component);\r\n\t\tif (this.#rendered) {\r\n\t\t\tcomponent.render(this.#element);\r\n\t\t}\r\n\t}\r\n\r\n\taddField(specs) {\r\n\t\tif (!specs) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst component = new ApiceField(specs);\r\n\t\tthis.#addComponent(component);\r\n\t\treturn component;\r\n\t}\r\n\r\n\taddSpacer(size) {\r\n\t\tvar component = new BlockElement('apc-spacer', size);\r\n\t\tthis.#addComponent(component);\r\n\t}\r\n\r\n\taddBreak() {\r\n\t\tvar component = new BlockElement('apc-break');\r\n\t\tthis.#addComponent(component);\r\n\t}\r\n\r\n\taddButtonBar() {\r\n\t\tvar component = new ApiceButtonBar();\r\n\t\tthis.#addComponent(component);\r\n\t\treturn component;\r\n\t}\r\n\r\n\taddButton(specs) {\r\n\t\tif (!specs) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar component = new ApiceButton(specs);\r\n\t\tthis.#addComponent(component);\r\n\t\treturn component;\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.#rendered) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#rendered = true;\r\n\t\tthis.#content.map(child => child.render(this.#element));\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\n$module.create = function (selector) {\r\n\treturn new ApiceForm(selector);\r\n};\r\n\r\n/**\r\n * Internal utility method tha collects the value from a form item\r\n * @param item Item to collect the value from\r\n * @returns Value of the item according to the extraction rules applicable to the type of field\r\n */\r\nfunction getItemValue(item) {\r\n\tif (!item) {\r\n\t\treturn null;\r\n\t}\r\n\tif (item.tagName === 'INPUT' && item.type === 'checkbox') {\r\n\t\tif (item.value === '' || item.value === 'on') {\r\n\t\t\treturn item.checked;\r\n\t\t} else if (!item.checked) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\treturn item.value;\r\n}\r\n\r\n/**\r\n * Collect the value from an item and sets its value in a specific collector\r\n * @param collector Collector to receive the values\r\n * @param item Item to collect the value from it\r\n */\r\nfunction collectItem(collector, item) {\r\n\tlet collect = item.getAttribute('collect');\r\n\tif (!collect) {\r\n\t\treturn;\r\n\t}\r\n\tcollect = collect.split('.');\r\n\tfor (let idx = 0; idx < collect.length; idx++) {\r\n\t\tconst attr = collect[idx];\r\n\t\tif (idx < collect.length - 1) {\r\n\t\t\tif (!collector[attr]) {\r\n\t\t\t\tcollector[attr] = {};\r\n\t\t\t}\r\n\t\t\tcollector = collector[attr];\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tconst value = getItemValue(item);\r\n\t\tif (value !== null) {\r\n\t\t\tcollector[attr] = value;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Iterates all the collectable items inside a container and collects its values\r\n * @param container Apice element representing the root element to collect from it\r\n * @returns Object with the data collected according to the collectible items defined on the container\r\n */\r\nfunction extractCollectables(container) {\r\n\tconst matches = container.select('[collect]');\r\n\tif (!matches) {\r\n\t\tlogger.warn('apice.form.collect.no_collectable_fields');\r\n\t\treturn {};\r\n\t}\r\n\tconst collector = {};\r\n\tmatches.each(item => {\r\n\t\tcollectItem(collector, item);\r\n\t});\r\n\treturn collector;\r\n}\r\n\r\n/** Collects the data fields that may exist inside a specific element */\r\n$module.collect = function (selector) {\r\n\tif (!selector) {\r\n\t\tselector = document.body;\r\n\t}\r\n\tconst container = element(selector);\r\n\tif (!container) {\r\n\t\tlogger.warn(`apice.form.collect.unknown_container[${selector}]`);\r\n\t\treturn null;\r\n\t}\r\n\treturn extractCollectables(container);\r\n};\r\n\r\nexport default $module;\r\n","import random from '../random.mjs';\r\nimport element from '../element.mjs';\r\nimport logging from '../logging.mjs';\r\nimport fragment from '../fragment.mjs';\r\nimport util from '../util.mjs';\r\nimport errorHandler from '../errorHandler.mjs';\r\n\r\nconst $moduleName = 'apice.ui.box';\r\nconst $module = {};\r\nconst logger = logging.getLogger($moduleName);\r\n\r\nfunction createDiv(className, id) {\r\n\tconst divElem = document.createElement('div');\r\n\tdivElem.className = className;\r\n\tif (id) {\r\n\t\tdivElem.id = id;\r\n\t}\r\n\treturn divElem;\r\n}\r\n\r\n/** Internal method to add a closing button for a specific container */\r\nfunction createClosingButton(container, box) {\r\n\tconst closing = createDiv('apc-closing');\r\n\tconst button = document.createElement('button');\r\n\tclosing.appendChild(button);\r\n\tcontainer.appendChild(closing);\r\n\tbutton.onclick = function () {\r\n\t\tbox.close();\r\n\t};\r\n}\r\n\r\n/**\r\n * Internal method to create the box header\r\n * @param specs Object with the box creation specifications\r\n * @param container Container HTMLElement that holds all the box parts\r\n * @returns Reference to the Apice Element representing the header\r\n */\r\nfunction createHeader(specs, container) {\r\n\tconst elem = createDiv('apc-header');\r\n\telem.style.display = 'none';\r\n\tcontainer.appendChild(elem);\r\n\treturn element(elem);\r\n}\r\n\r\n/**\r\n * Internal method to create the box body\r\n * @param container Container HTMLElement that holds all the box parts\r\n * @returns Reference to the Apice Element representing the body\r\n */\r\nfunction createBody(container) {\r\n\tconst elem = createDiv('apc-body');\r\n\telem.innerHTML = 'BOX-CONTENT'; // FIXME: remove\r\n\tcontainer.appendChild(elem);\r\n\treturn element(elem);\r\n}\r\n\r\n/**\r\n * Internal method to create the box footer\r\n * @param specs Object with the box creation specifications\r\n * @param container Container HTMLElement that holds all the box parts\r\n * @returns Reference to the Apice Element representing the footer\r\n */\r\nfunction createFooter(specs, container) {\r\n\tconst elem = createDiv('apc-footer');\r\n\telem.innerHTML = 'BOX-FOOTER'; // FIXME: remove\r\n\telem.style.display = 'none';\r\n\tcontainer.appendChild(elem);\r\n\treturn element(elem);\r\n}\r\n\r\n/** Creates the container of an ApiceBox and its internal areas */\r\nfunction createBoxContainer(specs, box) {\r\n\tconst container = createDiv('apc-box', specs.id);\r\n\tif (specs.fullscreen) {\r\n\t\tcontainer.className += ' apc-full';\r\n\t} else if (Array.isArray(specs.size)) {\r\n\t\tcontainer.className += ' apc-non-full';\r\n\t\tcontainer.style.width = specs.size[0];\r\n\t\tcontainer.style.height = specs.size[1];\r\n\t}\r\n\tconst content = createDiv('apc-box-content');\r\n\tconst parts = {};\r\n\tparts.header = createHeader(specs, content);\r\n\tparts.body = createBody(content);\r\n\tparts.footer = createFooter(specs, content);\r\n\tparts.area = container;\r\n\tcontainer.appendChild(content);\r\n\tif (specs.closeable) {\r\n\t\tcreateClosingButton(container, box);\r\n\t}\r\n\treturn parts;\r\n}\r\n\r\n/** Class implementing the box component */\r\nclass ApiceBox {\r\n\t// identifier of the current box instance\r\n\t#id;\r\n\t// Object containin the main box parts (area, header, body, footer)\r\n\t#elements;\r\n\t// element where the top element is attached \r\n\t#container;\r\n\t// numeric indicator to determine the status of the box\r\n\t#status; // 1=open 0=closed -1=detached\r\n\r\n\tconstructor(specs) {\r\n\t\tif (!specs.id) {\r\n\t\t\tspecs.id = 'box-' + random.tinyId();\r\n\t\t}\r\n\t\tthis.#id = specs.id;\r\n\t\tlogger.info('Creating box. id={0}', specs.id);\r\n\t\tthis.#status = -1;\r\n\t\tthis.#elements = createBoxContainer(specs, this);\r\n\t}\r\n\r\n\t/**\r\n\t * Append the current box instance as a child of another element\r\n\t * @param target String with the selector to the element to append the box into it, or reference to its HTMLElement or Apice element\r\n\t */\r\n\tappendTo(target) {\r\n\t\telement.append(target, this.#elements.area);\r\n\t\tthis.#container = this.#elements.area.parentElement;\r\n\t\tthis.#status = (this.#container) ? 0 : -1;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Closes the current box */\r\n\tclose() {\r\n\t\tif (this.#status === 1) {\r\n\t\t\tlogger.info('Closing box. id={0}', this.#id);\r\n\t\t\tthis.#container.removeChild(this.#elements.area);\r\n\t\t\tthis.#status = 0;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Opens the current box */\r\n\topen() {\r\n\t\tif (this.#status === 0) {\r\n\t\t\tthis.#container.appendChild(this.#elements.area);\r\n\t\t\tthis.#status = 1;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders a specificic content inside the box\r\n\t * @param content String with thec ontent to add, or reference to an HTMLElement, Apice Element or Promise to be fulfilled with the content\r\n\t * @returns \r\n\t */\r\n\tcontent(content) {\r\n\t\tif (util.isPromise(content)) {\r\n\t\t\tcontent.then(result => {\r\n\t\t\t\tthis.content(result);\r\n\t\t\t}).catch(ex => {\r\n\t\t\t\tthis.close();\r\n\t\t\t\terrorHandler.render(ex);\r\n\t\t\t});\r\n\t\t} else if (fragment.isFragment(content)) {\r\n\t\t\tcontent.render(this.#elements.body);\r\n\t\t} else {\r\n\t\t\tthis.#elements.body.content(content);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\n$module.create = function (specs) {\r\n\tif (!specs) {\r\n\t\tspecs = {};\r\n\t} else if (typeof (specs) === 'string') {\r\n\t\tspecs = { id: specs };\r\n\t}\r\n\tif (typeof (specs.fullscreen) !== 'boolean') {\r\n\t\tspecs.fullscreen = false;\r\n\t}\r\n\tif (typeof (specs.closeable) !== 'boolean') {\r\n\t\tspecs.closeable = false;\r\n\t}\r\n\tif (!specs.size && !specs.fullscreen) {\r\n\t\tspecs.size = ['50%', '50%'];\r\n\t}\r\n\treturn new ApiceBox(specs);\r\n};\r\n\r\nexport default $module;\r\n","import toast from './toast.mjs';\r\nimport form from './form.mjs';\r\nimport box from './box.mjs';\r\n\r\nexport default { toast, form, box };","'use strict';\r\nimport logging from './logging.mjs';\r\nimport util from './util.mjs';\r\nimport events from './events.mjs';\r\nimport element from './element.mjs';\r\nimport cookies from './cookies.mjs';\r\nimport http from './http.mjs';\r\nimport controller from './controller.mjs';\r\nimport fragment from './fragment.mjs';\r\nimport router from './router.mjs';\r\nimport error from './errorHandler.mjs';\r\nimport ui from './components/ui.mjs';\r\nimport form from './components/form.mjs';\r\n\r\nconst $scope = {};\r\n$scope.version = { major: 0, minor: 1, patch: 2 };\r\nconsole.log(`%cApice Framework ${version()}`, 'color: #64dd17;');\r\n\r\n/**\r\n * Allows to obtain the current framework version.  If a boolean true is passed as an argument then a \r\n * canonical represenration of the version will be produced.\r\n * @returns Version number as a string or canonical (as an object)\r\n */\r\nfunction version() {\r\n\tif (arguments[0] === true) {\r\n\t\treturn {\r\n\t\t\tmajor: $scope.version.major,\r\n\t\t\tminor: $scope.version.minor,\r\n\t\t\tpatch: $scope.version.patch\r\n\t\t};\r\n\t}\r\n\treturn 'v' + $scope.version.major + '.' + $scope.version.minor + '.' + $scope.version.patch;\r\n}\r\n\r\n/**\r\n * Adds a function to be executed when the framework has completed the loading process\r\n * @param callback Function to be invoked once the framework is ready\r\n */\r\nfunction ready(callback) {\r\n\tevents.documentReady(callback);\r\n}\r\n\r\nexport default { version, ready, logging, util, events, element, cookies, http, controller, fragment, router, error, ui, form };\r\n"],"names":["$module","target","Promise","text","replace","holderRegex","placeholders","input","values","result","output","unbind","length","indexControl","holders","matchAll","holder","source","regex","RegExp","value","filter","element","name","timespan","console","warn","expireDate","Date","setTime","getTime","cookie","util","trim","toGMTString","document","cookieArray","split","idx","rawCookie","cookieParts","$scope","fatal","color","label","error","info","debug","trace","levelCookie","cookies","get","globalLevel","levels","Logger","this","arguments","levelInfo","Error","set","_classPrivateFieldGet","message","level","JSON","stringify","replaced","log","getLogger","loggers","logName","logger","_$scope$globalLevel","addListener","eventName","listener","addEventListener","attachEvent","documentReady","callback","readyState","parseHTML","content","createElement","innerHTML","childNodes","ApiceElement","SingleElement","id","isDOMElement","appendChild","each","child","_this2","append","item","_this3","NodeList","node","prepend","first","firstChild","_this4","insertBefore","fnc","events","on","selector","applySelector","MultipleElements","push","functionName","args","returnValue","targetFunction","apply","Array","isArray","ex","obj","_typeof","nodeType","root","elements","querySelectorAll","nodes","add","body","bodySingleton","tinyId","Math","random","toString","substring","shortId","stringStart","charAt","sourceElement","querySelector","targetElement","guid","ErrorHandler","specs","cause","module","code","logging","entryText","Apice","ui","toast","stack","HttpError","create","specType","render","err","createHttpError","httpCode","window","event","reason","preventDefault","createRequest","resolve","reject","request","XMLHttpRequest","ActiveXObject","e","createXmlHttp","onreadystatechange","status","responseText","errorHandler","url","options","method","open","async","data","send","loadScript","src","type","onerror","onload","head","ApiceUrl","protocol","host","port","path","query","hash","endsWith","startsWith","resourceUrl","UrlBuilder","portType","String","$moduleName","controller","controllers","ApiceController","impl","implType","_this","http","then","setTimeout","register","declare","isController","ApiceFragment","response","controllerType","serve","fragment","fragments","isFragment","onHashChange","route","match","pattern","defaultRoute","notFoundRoute","routes","RouteHash","parts","section","substr","ApiceRoute","action","hasParameters","location","start","container","getElementById","createToastContainer","defaultTitle","ApiceToast","style","title","resource","icon","dismiss","animationName","parentElement","removeChild","box","className","display","onclick","renderToast","Object","assign","appendTo","success","setMax","getSizeClass","size","createOption","field","option","fillSelect","map","BlockElement","ApiceButton","ApiceButtonBar","button","ApiceField","fieldClass","labelBox","setAttribute","ApiceForm","formElement","component","getItemValue","tagName","checked","extractCollectables","matches","select","collector","collect","getAttribute","attr","collectItem","createDiv","divElem","createBoxContainer","fullscreen","width","height","header","elem","createHeader","createBody","footer","createFooter","area","closeable","closing","close","createClosingButton","ApiceBox","isPromise","form","version","major","minor","patch","ready","router"],"mappings":"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"}